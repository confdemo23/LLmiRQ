Incorrect Kendall Tau calc due to data type mistmatch
The Kendall Tau calculation returns a number from -1.0 to 1.0
due to a mixing of ints and longs, a mistake occurs on large size columns (arrays) passed to the function. an array size of &gt; 50350 triggers the condition in my case - although it may be data dependent
the ver 3.5 library returns 2.6 as a result (outside of the defined range of Kendall Tau)
with the cast to long below - the result reutns to its expected value
commons.math3.stat.correlation.KendallsCorrelation.correlation
here&amp;apos;s the sample code I used:
I added the cast to long of swaps in the 
			int swaps = 1077126315;
			 final long numPairs = sum(50350 - 1);
			    long tiedXPairs = 0;
		        long tiedXYPairs = 0;
		        long tiedYPairs = 0;
		  final long concordantMinusDiscordant = numPairs - tiedXPairs - tiedYPairs + tiedXYPairs - 2 * (long) swaps;
	        final double nonTiedPairsMultiplied = 1.6e18;
	        double myTest = concordantMinusDiscordant / FastMath.sqrt(nonTiedPairsMultiplied);