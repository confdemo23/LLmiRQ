RealVector.subtract(RealVector) returns wrong answer.
The following piece of code



import org.apache.commons.math3.linear.ArrayRealVector;

import org.apache.commons.math3.linear.OpenMapRealVector;

import org.apache.commons.math3.linear.RealVectorFormat;



public class DemoMath {



    public static void main(String[] args) {

        final double[] data1 = {

            0d, 1d, 0d, 0d, 2d

        };

        final double[] data2 = {

            3d, 0d, 4d, 0d, 5d

        };

        final RealVectorFormat format = new RealVectorFormat();

        System.out.println(format.format(new ArrayRealVector(data1)

            .subtract(new ArrayRealVector(data2))));

        System.out.println(format.format(new OpenMapRealVector(data1)

            .subtract(new ArrayRealVector(data2))));

    }

}



prints

{-3; 1; -4; 0; -3}

{3; 1; 4; 0; -3}



the second line being wrong. In fact, when subtracting mixed types, OpenMapRealVector delegates to the default implementation in RealVector which is buggy.