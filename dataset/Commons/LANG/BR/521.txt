NumberUtils.isNumber() Should Return True for Valid Number with a Trailing Decimal Place
NumberUtils.isNumber() should return true for a valid number ending in a trailing decimal place; e.g., "2." should be considered a number because new BigDecimal("2.") works fine.  This could be done by adding the code below after line 1444, which is the if (chars[i] == &amp;apos;e&amp;apos; || chars[i] == &amp;apos;E&amp;apos;) block.
if (chars[i] == &amp;apos;.&amp;apos;) {
    if (hasDecPoint || hasExp) 
{

        // two decimal points or dec in exponent   

        return false;

    }
    return foundDigit; // single trailing decimal point after non-exponent is ok
}