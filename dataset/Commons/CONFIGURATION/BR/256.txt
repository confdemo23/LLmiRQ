MapConfiguration does not decode escaped Delimiters
Hello, I don&amp;apos;t know how to reopen resolved bug. See: https://issues.apache.org/jira/browse/CONFIGURATION-30
There is BAD implementation in MapConfiguration.getProperty(String key) method:
As "return value" should be list.get(0) instead of "value".
PropertyConverter.split removes escape chars....
Suggested correction:
    public Object getProperty(String key)
    {
        Object value = map.get(key);
        if ((value instanceof String) &amp;&amp; (!isDelimiterParsingDisabled()))
        {
            List list = PropertyConverter.split((String) value, getListDelimiter());
            //MP: return list.size() &gt; 1 ? list : value;
            return list.size() &gt; 1 ? list : list.get(0); //MP: split removes escape chars
        }
        else
        {
            return value;
        }
    }
Test code:
Map m = new HashMap();
m.put("foo", "bar,baz");
m.put("bar", "bar, baz");
MapConfiguration mc = new MapConfiguration(m);
mc.setDelimiterParsingDisabled(false);
mc.setListDelimiter(&amp;apos;,&amp;apos;);
Configuration c = mc;
String bad = c.getString("foo"); //&lt;-- returns "bar, baz" expected "bar, baz"
String ok = c.getString("bar"); // &lt;-- returns "bar"
System.err.println("Bad: " + bad);
System.err.println("OK: " + ok);
Current result is:
Bad: bar\,baz
OK: bar