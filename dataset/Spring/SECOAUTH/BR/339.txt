When supplying multiple wrong oauth2 parameters, a 500 is returned with stacktrace is returned
When there are multiple problems with an authorization request, the ExceptionHandler in AuthorizationEndpoint itself fails with a RuntimeException that is not handled.
This results in a 500 Internal Server Error with a stacktrace.
To reproduce, start Sparklr2, and performs one of the following requests.
1. (valid client_id, invalid response type, no redirect_uri)
http://localhost:8080/sparklr2/oauth/authorize?client_id=tonr&amp;response_type=asdf
2. (invalid client_id, invalid response_type)
http://localhost:8080/sparklr2/oauth/authorize?client_id=foobar&amp;response_type=asdf
In the current implementation of AuthorizationEndpoint.handleException(), a try-catch block is already used:






		try {




			errorRequest = getAuthorizationRequestForError(webRequest);




		}




		catch (OAuth2Exception ex) {




			// If an AuthorizationRequest cannot be created from the incoming parameters it must be




			// an error. OAuth2Exception can be handled this way. Other exceptions will generate a standard 500




			// response.




			return new ModelAndView(errorPage, Collections.singletonMap("error", translate.getBody()));




		}






Perhaps this block should be extended to include the rest of the method as well?