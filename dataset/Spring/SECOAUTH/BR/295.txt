Oauth2 AuthorizationEndpoint ignores user approval flag for implicit grant
The current implementation of the AuthorizationEndpoint contains a method "approveOrDeny" that is used to redirect a client based on the UsersApproval.  It currently does not test the result of such approval leading to all possible requests being issued a token/code regardless of the users approval decision, as per code below:






			authorizationRequest = authorizationRequest.addApprovalParameters(approvalParameters);




			authorizationRequest = resolveRedirectUriAndCheckApproval(authorizationRequest, (Authentication) principal);




			if (responseTypes.contains("token")) {




				return getImplicitGrantResponse(authorizationRequest).getView();




			}




			return getAuthorizationCodeResponse(authorizationRequest, (Authentication) principal);






It is suggested that the above snippet is replaced with (tested locally and conforms to latest draft spec):






			authorizationRequest = authorizationRequest.addApprovalParameters(approvalParameters);




			authorizationRequest = resolveRedirectUriAndCheckApproval(authorizationRequest, (Authentication) principal);




			if (authorizationRequest.isApproved()) {




				if (responseTypes.contains("token")) {




					return getImplicitGrantResponse(authorizationRequest).getView();




				}




				return getAuthorizationCodeResponse(authorizationRequest, (Authentication) principal);




			}




			return new RedirectView(getUnsuccessfulRedirect(authorizationRequest, OAuth2Exception.create(OAuth2Exception.ACCESS_DENIED, "User denied access"),




					true), false);






Thanks - G.
