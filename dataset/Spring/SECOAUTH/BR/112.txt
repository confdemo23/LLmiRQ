Token endpoint is not authenticated properly
Token endpoint is not authenticated properly.  The spec is quite clear that an token granting request MUST be authenticated with the client&amp;apos;s credentials if they have been issued, and that HTTP Basic authentication must be used.  The DefaultOAuth2GrantManager tries to locate the client_id and secret, but assumes that the client id is always in a request parameter (which is not in the spec at all).
The client side can act correctly (sending Basic auth via OAuth2ClientHttpRequestFactory), but only when the resource is set up with a client secret.  Actually sparklr2 declares the /oauth/** resources as access="ROLE_USER", but it&amp;apos;s in a form-login section so the wrong authentication handler is going to be applied, if at all.  What happens in practice is  that the OAuth2 filter chain picks up the request before the main Spring Security filter has been fully applied because of where it is in the chain
There are 3 potential problems here: 
1) the OAuth2 filters are in the wrong place in the chain to benefit from the normal access controls (that might be OK)
2) the DefaultOAuth2GrantManager assumes that a client_id is present as a request parameter
3) the OAuth2AuthenticationTokenSupport always puts the clent id in the request parameters, whereas it should go in the headers