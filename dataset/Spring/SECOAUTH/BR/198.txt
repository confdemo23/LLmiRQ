Wrong HTTP status error for when client provides wrong media type
when client issues a request to the resource server providing an invalid access_token and unsupported media_type, for example application/xml instead of application/json the server (Oauth2 framework) returns HTTP 500 error. (We expected unsupported media type 406).
The spring Oauth2 code produces HttpMediaTypeNotAcceptableException exception, but because it is handled at the servlet filter level it gets mapped to 500 error. (Before reaching the controller ). (My guess).
Here is the exception stack trace:






org.springframework.web.HttpMediaTypeNotAcceptableException: Could not find acceptable representation




	at org.springframework.security.oauth2.provider.web.OAuth2ExceptionRenderer.writeWithMessageConverters(OAuth2ExceptionRenderer.java:106)




	at org.springframework.security.oauth2.provider.web.OAuth2ExceptionRenderer.handleHttpEntityResponse(OAuth2ExceptionRenderer.java:69)




	at org.springframework.security.oauth2.provider.filter.OAuth2ExceptionHandlerFilter.doFilter(OAuth2ExceptionHandlerFilter.java:73)




...






Steps to repro:  issue a request to the resource server using bad access token and invalid media type, for example application/xml since Oauth2 is producing application/json error.






GET http://host/api?access_token=BAD_OR_EXPIRED_TOKEN




HEADER:




   Accept: application/xml






Result: 500, but it should be 406.
