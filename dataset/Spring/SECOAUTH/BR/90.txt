Double URL encoding of oauth_token passed in query string of OAuth2 protected resources
Hi,
It seems that the oauth_token value passed (when "query" bearerTokenMethod is used) is being URL encoded twice - resulting in the provider not recognizing the token value and rejecting the request as unauthorized.
Here is how it happens:
OAuth2ClientHttpRequestFactory#appendQueryParameter() first does:






String queryFragment = ((resource.getBearerTokenName() == null) ? "oauth_token" : resource.getBearerTokenName()) + "=" + URLEncoder.encode(accessToken.getValue(), "UTF-8");






and here if the access token is "1/qIxxx", it changes to &amp;apos;1%2FqIxxx&amp;apos;. 
It then forms the protected resource URI as: 






URI uri = new URI(&lt;scheme&gt;, &lt;user info&gt;, &lt;host&gt;, &lt;port&gt;, &lt;path&gt;, &amp;apos;oauth_token=1%2FqIxxx&amp;apos;, &lt;fragment&gt;)






The URI constructor does the URL encoding again for the query string passed to it, and oauth_tokens gets double encoded and it becomes "1%252FqIxxx", and hence the issue that the token gets rejected and the request is deemed unauthorized.