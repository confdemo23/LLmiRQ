redirect_uri should not be mandatory field when obtaining an OAuth2 access token
When an oauth client redirects to the authorization endpoint (oauth2/authorize?response_type=code&amp;client_id=client&amp;scope=read) and does not specify the redirect_uri then the redirect_uri is taken from the pre-configured value in the clientDetails. This is ok as the redirect_uri is not required in this call. However the fetched redirect_uri is then stored on the authorizationRequest (AuthorizationEndpoint#resolveRedirectUriAndCheckApproval). If the client subsequently tries to obtain an access-token by presenting his authorizationCode and again does not specify a redirect_uri (which is only required if he did so during the authorize request) then a RedirectMismatchException is thrown as it (wrongfully) seems as the authorize request was done with the redirect_uri parameter. There is no way of telling if the redirect_uri in the authorizationRequest that was stored (either in memory or jdbc) was the &amp;apos;enhanced&amp;apos; one from the clientDetails or the parameter redirect_uri in the original oauth2/authorize request. So the current implementation implicitly requires a redirect_uri parameter in the token request. This is not conform spec (http://tools.ietf.org/html/draft-ietf-oauth-v2-31#section-4.1.3). I don&amp;apos;t mind making a pull request, but before I do, I would like confirmation if this is indeed a bug or intentional design. 