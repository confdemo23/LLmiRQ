AuthorizationEndpoint allows bypassing user approval page for authorization code grant_type
A client integrating with oauth2 can easily acquire an authorization code without user&amp;apos;s approval.
To reproduce try the following url: 
http://yourserver/oauth/authorize?client_id=your_id&amp;response_type=code&amp;scope=requested_scope&amp;redirect_uri=http://somehost&amp;user_oauth_approval=true
Pay attention to the last get parameter, if it is passed and the user is already authenticated with the authorization server, an auth token will be generated immediately without his confirmation and the user will be redirected to http://somehost?code=some_code
I&amp;apos;m not sure if this is the intended behaviour, but I think it is a security issue.
It can be solved by removing this code from the authorize handler:






org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.java






if (responseTypes.contains("code")) {




    authorizationRequest = resolveRedirectUri(authorizationRequest);




    if (approved != null) {




        return new ModelAndView(getAuthorizationCodeResponse(authorizationRequest.denied(!approved),




			(Authentication) principal));




    }




    return getUserApprovalPageResponse(model, authorizationRequest);




}






But it will only partially solve the issue, to solve it completely I think there also needs to be some kind of CSRF protection mechanism on AuthorizationEndpoint.approveOrDeny