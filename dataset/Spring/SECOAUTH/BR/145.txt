Allow endpoints and filters to be split across two application contexts
I&amp;apos;ve compiled the latest spring-security-oauth2 code as of 10/25/2011 and am currently using that jar.
The problem is that in the sparklr2 sample you have, all the beans have initializing in spring-servlet.xml. In most spring applications, we have applicationContext.xml and dispatcher-servlet.xml. If you separate the two, thereby forcing you to put the code in applicationContext.xml, otherwise web.xml can&amp;apos;t find Spring Security&amp;apos;s springSecurityFilterChain which is created by &lt;security:http. And &lt;security:http relies on &lt;custom-filter ref="oauth2ProviderFilter" after="EXCEPTION_TRANSLATION_FILTER" /&gt; to be available, but if you separate the oauth2 stuff to go with the dispatcher-servlet.xml configuration in order to load up the 2 controllers, you&amp;apos;re caught in a chicken-egg situation.
Also, I cannot manually load up those 2 controllers, either through component scanning or in xml, because they have already been created as beans, due to them both implementing InitializingBean interface.