Local region does remote put in addition to local put in client cache.
I need to create a local region in client cache to store some data locally. I config my local region using SDG. When I do region.put, it updates cache server as well (found by using a loggingCacheListener, afterUpdate on server side is triggered).






&lt;gfe:client-region id="analyticsInfoRegion" cache-ref="gemfireCache" shortcut="LOCAL"&gt;




    &lt;gfe:cache-listener ref="loggingCacheListener" /&gt;




&lt;/gfe:client-region&gt;






DAO (before):






@Resource(name = GBCConstants.REGION_ANALYTICS_INFO)




public void setRegion(final Region&lt;AnalyticsKey, AnalyticsInfo&gt; region) {




    this.region = region;




}






Therefore, I had to switch to GemFire API to create this local region in my Dao. 
DAO (after):






@PostConstruct




public void init() {




    ClientCache clientCache = ClientCacheFactory.getAnyInstance();




    this.region = clientCache.&lt;AnalyticsKey, AnalyticsInfo&gt;createClientRegionFactory(ClientRegionShortcut.LOCAL)




        .addCacheListener(loggingCacheListener)




        .create(GBCConstants.REGION_ANALYTICS_INFO);




}






One thing I realized when looking at the detail in debug mode is that the local region has server pool attached ("srp") when it&amp;apos;s configured using SDG. However, when it&amp;apos;s configured using GemFire API, its "srp" is NULL.