Mangled predefined xml &apos;special character&apos; entities when using AxiomSoapMessageFactory and extending AbstractStaxStreamPayloadEndpoint
Using AxiomSoapMessageFactory and with an endpoint extending AbstractStaxStreamPayloadEndpoint, special character predefined entities like &amp; or &lt; in HTTP response get &amp;apos;mangled&amp;apos;.  For example, when the endpoint writes  &lt;echo:echoRequest&gt; &lt; &lt;/echo:echoRequest&gt; to the XMLStreamWriter (which is correct) what actually gets sent in the resulting AxiomSoapMessage is this: &lt;echo:echoRequest&gt; &amp;&lt;; &lt;/echo:echoRequest&gt; (which is incorrect).  I recreated this bug with the echo sample application in 1.5.5 by changing the endpoint to extend AbstractStaxStreamPayloadEndpoint and specifying the AxiomSoapMessageFactory  in the spring-ws-servlet.xml file (documented in this forum thread: http://forum.springframework.org/showthread.php?p=215668)
I was able to correct this behavior by modifying org.springframework.ws.soap.axiom.AxiomHandler - I simply commented out the statements inside startEntity(..) and endEntity(..) functions making them "unsupported".  While this did not produce any side-effects during the testing I did for my project, I have not run the full spring-ws test suite.  The change is as follows:
class AxiomHandler implements ContentHandler, LexicalHandler {
...
 public void startEntity(String name) throws SAXException 
{
        //make unsupported to fix mangling of special character entities        
        //charactersType = XMLStreamConstants.ENTITY_REFERENCE;
    }

    public void endEntity(String name) throws SAXException 
{
        //make unsupported to fix mangling of special character entities
        //charactersType = XMLStreamConstants.CHARACTERS;
    }

...
}
