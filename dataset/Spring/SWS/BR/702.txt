sws:annotation-driven does not pick up @Endpoint annotations on classes that are JDK proxies
We essentially have an app context loaded by the MessageDispatcherServlet that does the following:






&lt;bean id="ws.myWebService" class="foo.bar.MyWebServiceImpl"/&gt;




&lt;aop:aspectj-autoproxy /&gt;




&lt;bean class="foo.bar.MyCustomAspect"/&gt;




&lt;sws:annotation-driven/&gt;






The MyWebServiceImpl looks like this:






@Endpoint




public class MyWebServiceImpl implements MyWebService {









  @PayloadRoot(namespace = "http://my.foo.bar", localPart = "myWebService")




  @MyCustomAnnotation // picked up by MyCustomAspect to proxy this class




  @ResponsePayload




  public MyResponseDocument getFactInfo(@RequestPayload MyRequestDocument request) {




    ...




  }




}






As a result of the @MyCustomAnnotation, the MyWebServiceImpl will be JDK proxied. Because of this the @Endpoint is not picked up. If we remove the custom aspect the @Endpoint is indeed picked up.
For now, I have added the following to the app context as a workaround:






&lt;aop:config proxy-target-class="true"/&gt;






Note that this seems to be similar to SWS-262