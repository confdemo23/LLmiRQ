Endpoint Mapping and Saxon
PayloadRootQNameEndpointMapping  gives an error when Saxon is the XSL transformer. It seems that Saxon is expecting a SAX 2 parser, while it receives an instance of SaajXMLReader, which is a SAX 1 parser.
This bug happened while trying to deploy a spring web service in weblogic 9, with Saxon sets as its default XSL transformer (with the JVM flag: -Djavax.xml.transform.TransformerFactory=net.sf.saxon.TransformerFactoryImpl)
The only beans that are defined in spring are the PayloadRootQNameEndpointMapping  and the Endpoints themselves.
Here is the stack trace I get:
2007-09-27 23:36:06,537 WARN org.springframework.ws.soap.server.SoapMessageDisp atcher - Endpoint invocation resulted in exception - responding with SOAP Fault
net.sf.saxon.trans.DynamicError: The SAX2 parser does not support setting the &amp;apos;namespaces&amp;apos; feature to true
at net.sf.saxon.event.Sender.configureParser(Sender.java:357)
at net.sf.saxon.event.Sender.sendSAXSource(Sender.java:241)
at net.sf.saxon.event.Sender.send(Sender.java:142)
at net.sf.saxon.IdentityTransformer.transform(IdentityTransformer.java:29)
at org.springframework.ws.server.endpoint.support.PayloadRootUtils.getPayloadRootQName(PayloadRootUtils .java:79)
at org.springframework.ws.server.endpoint.mapping.PayloadRootQNameEndpointMapping.resolveQName(PayloadR ootQNameEndpointMapping.java:56)
at org.springframework.ws.server.endpoint.mapping.AbstractQNameEndpointMapping.getLookupKeyForMessage(A bstractQNameEndpointMapping.java:33)
at org.springframework.ws.server.endpoint.mapping.AbstractMapBasedEndpointMapping.getEndpointInternal(A bstractMapBasedEndpointMapping.java:106)
at org.springframework.ws.server.endpoint.mapping.AbstractEndpointMapping.getEndpoint(AbstractEndpointM apping.java:83)
at org.springframework.ws.server.MessageDispatcher.getEndpoint(MessageDispatcher.java:238)
at org.springframework.ws.server.MessageDispatcher.dispatch(MessageDispatcher.java:191)
at org.springframework.ws.server.MessageDispatcher.receive(MessageDispatcher.java:158)
at org.springframework.ws.transport.support.WebServiceMessageReceiverObjectSupport.handleConnection(Web ServiceMessageReceiverObjectSupport.java:87)
at org.springframework.ws.transport.http.WebServiceMessageReceiverHandlerAdapter.handle(WebServiceMessa geReceiverHandlerAdapter.java:57)
at org.springframework.ws.transport.http.MessageDispatcherServlet.doService(MessageDispatcherServlet.ja va:158)
at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:461)
at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:426)
at javax.servlet.http.HttpServlet.service(HttpServlet .java:763)
at javax.servlet.http.HttpServlet.service(HttpServlet .java:856)
at weblogic.servlet.internal.StubSecurityHelper$ServletServiceAction.run(StubSecurityHelper.java:225)
at weblogic.servlet.internal.StubSecurityHelper.invokeServlet(StubSecurityHelper.java:127)
at weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:283)
at weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:175)
at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java :3211)
at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)
at weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)
at weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:1983)
at weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:1890)
at weblogic.servlet.internal.ServletRequestImpl.run(S ervletRequestImpl.java:1344)
at weblogic.work.ExecuteThread.execute(ExecuteThread. java:209)
at weblogic.work.ExecuteThread.run(ExecuteThread.java :181)
