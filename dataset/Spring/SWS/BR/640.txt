evaluateAsBoolean returns true for node with text content "false"
The method Jaxp13XPathTemplate.evaluateAsBoolean returns true if the element selected by the expression exists, regardless of its contents. The text contents can be empty, "false", or "WTF", and evaluateAsBoolean will return true. 
This does not appear to match its Javadoc, which says: "Evaluates the given expression as a boolean. Returns the boolean evaluation of the expression, or false if it is invalid." The very similar method evaluateAsDouble has nearly identical Javadoc: "Evaluates the given expression as a double. Returns the evaluation of the expression, or Double.NaN if it is invalid." - but evaluateAsDouble returns the actual contents of the text node. If evaluateAsBoolean is really meant to mean, "doesExpressionSelectAnything", it should be renamed.
Below is a unit test that demonstrates the problem. The second assert fails.
The problem also occurs when using a WSDL which defines aFlag as type "xs:boolean". And, it also occurs with JaxenXPathTemplate. However, I have not seen it using sources other than DOMSource.






package com.yodle.misc;









import static org.junit.Assert.*;









import javax.xml.transform.dom.DOMSource;









import org.junit.Test;




import org.springframework.ws.server.endpoint.AbstractDomPayloadEndpoint;




import org.springframework.xml.transform.StringSource;




import org.springframework.xml.xpath.Jaxp13XPathTemplate;




import org.w3c.dom.Document;




import org.w3c.dom.Element;









public class BugDemo {









	final String request =




		"&lt;someRequest&gt; " +		




		"	&lt;aDouble&gt;123&lt;/aDouble&gt; " +




		"	&lt;aFlag&gt;false&lt;/aFlag&gt; " +




		"&lt;/someRequest&gt; ";




	




	private class Endpoint extends AbstractDomPayloadEndpoint {









		@Override




		protected Element invokeInternal(Element requestElement, Document responseDocument) throws Exception {




			Jaxp13XPathTemplate xPathTemplate = new Jaxp13XPathTemplate();




			DOMSource src = new DOMSource(requestElement);




			




			double aDouble = xPathTemplate.evaluateAsDouble("aDouble", src);




			assertEquals(123d, aDouble, 0.01);




			




			boolean aFlag = xPathTemplate.evaluateAsBoolean("aFlag", src);




			assertFalse(aFlag);




			




			return null;




		}




		




	};




	




	@Test




	public void demonstrateEvaluateAsBooleanStrangeBehavior() throws Exception {




		Endpoint endPoint = new Endpoint();




		endPoint.invoke(new StringSource(request));




	}




	




}





