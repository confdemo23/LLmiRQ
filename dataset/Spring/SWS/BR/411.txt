When using permanent replyTo queues, their JNDI names can&apos;t start with jms/ in the defaultUri property of the WebServiceGateway
We are using permanent queues defined as JNDI resources in a WAS 6.1. Their JNDI names start with jms/, for instance jms/RESPONSE_QUEUE.
We have a client which is configured like this, along side with a jndiDestinationResolver and a jndiTemplate:
[code]
&lt;bean id="serviceGateway" class="net.croz.client.ServiceGatewayImpl"&gt;
        &lt;property name="defaultUri" value="jms:jms/REQUEST_QUEUE?replyToName=jms/REPLY_QUEUE" /&gt;
        &lt;property name="messageSenders"&gt;
            &lt;bean class="org.springframework.ws.transport.jms.JmsMessageSender"&gt;
                &lt;property name="connectionFactory" ref="mqConnectionFactory" /&gt;
                &lt;property name="pubSubDomain" value="false" /&gt;
                &lt;property name="destinationResolver" ref="jndiDestinationResolver"&gt;&lt;/property&gt;
                &lt;property name="receiveTimeout" value="10000"&gt;&lt;/property&gt;
            &lt;/bean&gt;
        &lt;/property&gt;
&lt;/bean&gt;
&lt;bean id="jndiTemplate"
        class="org.springframework.jndi.JndiTemplate"&gt;
        &lt;property name="environment"&gt;
          &lt;props&gt;
            &lt;prop key="java.naming.factory.initial"&gt;com.ibm.websphere.naming.WsnInitialContextFactory&lt;/prop&gt;
            &lt;prop key="java.naming.provider.url"&gt;iiop://localhost:2810&lt;/prop&gt;
          &lt;/props&gt;
        &lt;/property&gt;
&lt;/bean&gt;
&lt;bean id="jndiDestinationResolver" class="org.springframework.jms.support.destination.JndiDestinationResolver"&gt;
        &lt;property name="jndiTemplate" ref="jndiTemplate"&gt;&lt;/property&gt;
&lt;/bean&gt;
[code/]
When invoking a fully functional web service (under our control), the request ends up in the REQUEST_QUEUE, but when the client tries to find the RESPONSE_QUEUE via its JNDI name (jms/REPLY_QUEUE) it fails with:
[code]
Destination [jms] not found in JNDI; nested exception is org.springframework.jndi.TypeMismatchNamingException: Object of type [class com.ibm.ws.naming.jndicos.CNContextImpl] available at JNDI location [jms] is not assignable to [javax.jms.Destination]
[/code]
Observe the "..available at JNDI location [jms]..." part in particular... This led me to investigate the code responsible for parsing the defaultUri property of the WebServiceGateway. What I&amp;apos;ve found is that the regular expression responsible for the parsing of the replyToName part of the defaultUri:
[code]
public abstract class JmsTransportUtils {
.......    
     private static final Pattern REPLY_TO_NAME_PATTERN = Pattern.compile("replyToName=(w+)");
.......
}
[/code]
strips everything behind the "jms" part of the JNDI name.
To do a quick fix, I&amp;apos;ve externalized the JmsTransportUtils class and changed the REPLY_TO_NAME_PATTERN to be similar to the DESTINATION_NAME_PATTERN:
[code]
public abstract class JmsTransportUtils {
.......    
     private static final Pattern REPLY_TO_NAME_PATTERN = Pattern.compile("replyToName=([^\\?]+)");
.......
}
[/code] 