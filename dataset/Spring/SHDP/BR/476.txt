Annotation config doesn&apos;t always use beans
AbstractImportingAnnotationConfiguration is used to hook adapter model in cases where bean definition is created manually using an import selector. Looks like build command to processing framework happens too early and @Bean methods inside @Configuration are not yet created.
i.e. in below example @Bean &amp;apos;partitionStrategy&amp;apos; ended up to be a different instance that the one returned by a to partitionStrategy() from a configure method.






@Configuration




@EnableDataStorePartitionTextWriter(name=WRITER5_ID)




static class Config5 extends SpringDataStoreTextWriterConfigurerAdapter {









	@Override




	public void configure(DataStoreTextWriterConfigurer config) throws Exception {




		config




			.basePath("/tmp/foo4")




			.withPartitionStrategy()




				.custom(partitionStrategy());




	}









	@Bean




	public PartitionStrategy&lt;String, String&gt; partitionStrategy() {




		return new PartitionStrategy&lt;String, String&gt;() {









			@Override




			public PartitionResolver&lt;String&gt; getPartitionResolver() {




				return null;




			}









			@Override




			public PartitionKeyResolver&lt;String, String&gt; getPartitionKeyResolver() {




				return null;




			}




		};




	}









}





