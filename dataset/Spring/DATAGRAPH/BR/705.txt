Incorrect query generated by derived finder for a relationship entity when the property name of the start and end node is the same
I think the genrated query for the repository method
List&lt;Rating&gt; findByUserNameAndMovieName(String userName, String movieName)
should be
{"statements":[{"statement":"MATCH (n:`User`) WHERE n.`name` = 
{ `userName` }
 MATCH (m:`Movie`) WHERE m.`name` = 
{ `movieName` }
 MATCH [r:`RATED`]&gt;(m) WITH n,r MATCH p=[*0..1]() RETURN collect(distinct p), ID(r)","parameters":
{"userName":"Michal","movieName":"Speed"}
,"resultDataContents":["graph","row"],"includeStats":false}]}
but the following were send to the neo4j server
{"statements":[{"statement":"MATCH (n:`User`) WHERE n.`name` = 
{ `name` } MATCH (m:`Movie`) WHERE m.`name` = { `name` }
 MATCH [r:`RATED`]&gt;(m) WITH n,r MATCH p=[*0..1]() RETURN collect(distinct p), ID(r)","parameters":
{"name":"Speed"}
,"resultDataContents":["graph","row"],"includeStats":false}]}
The second test is not so clear.
If Rating has a method getUserLevel() and RatingRepository a method List findByUserLevel(String userLevel) but no attribute userLevel and no setter, then I would expect, that the query is
{"statements":[{"statement":"MATCH [r:`RATED`]&gt;(m) WHERE n.`level` = 
{ `userLevel` } WITH n,r MATCH p=[*0..1]() RETURN collect(distinct p), ID(r)","parameters":{"userLevel":"5"},"resultDataContents":["graph","row"],"includeStats":false}]}
and not

{"statements":[{"statement":"MATCH [r:`RATED`]&gt;(m) WHERE r.`userLevel` = { `userLevel` }
 WITH n,r MATCH p=[*0..1]() RETURN collect(distinct p), ID(r)","parameters":
{"userLevel":"5"}
,"resultDataContents":["graph","row"],"includeStats":false}]}
but in any case should the should the upper query be send, if I add the annotaion @Transient to the method.