Incorrect propagation of @Transactional
The contract for @Transactional is REQUIRE. Unless otherwise specified, if a method B and a calling method A are both marked @Transactional, B should JOIN A&amp;apos;s transaction, not create a new one.
@Transactional 
 methodA(){
 }
 @Transactional
 methodB(){
 }
  @Transactional
  wrapperMethod()
{
     methodA()
     methodB()
  }

In this scenario if we call wrapperMethod() and methodB() throws an exception rollback occurs,  but objects created in methodA() remain written in the database.
From the log it looks like transaction/73 is created, 
then transaction/74 is created - which corresponds to methodA() -  commit occurs after finishing methodA. This is an error. 
then transaction/75 is created - which corresponds to methodB() -  rollback occurs after exception
transaction/73 is also rolled-back.