@RabbitListener cannot be a scoped proxy
Because of the way the endpoints are detected in a BeanPostProcessor and the message listener container is started in a SmartInitializingBean, the listener is never registered if it is a scoped proxy (e.g. @Scope(proxyMode=TARGET_CLASS) @Lazy). The BeanPostProcessor is not presented with the actual listener until it is instantiated, and the instantiation happens lazily, the container is never created or started (I believe it&amp;apos;s because the call to RabbitListenerEndpointRegistrar.afterPropertiesSet() in RabbitListenerAnnotationBeanPostProcessor.afterSingletonsInstantiated() is never made).
See https://github.com/spring-cloud/spring-cloud-config/issues/96 for original user&amp;apos;s issue.