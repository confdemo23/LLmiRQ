Invalid GenericMessage requeued indefinitely
Spring Integration 4.x moved GenericMessage from org.springframework.integration.message to org.springframework.messaging.support. After we upgraded our version from 3.x to 4.x, we still had a lot of persistent messages in RabbitMQ in the old GenericMessage Java Serialization format. Obviously, these messages are unable to be deserialized but instead of marking these conversion failures as fatal the ConditionalRejectingErrorHandler would repeatedly requeue them to be tried again.






WARN  2016-10-06 19:26:09,477 [SimpleAsyncTaskExecutor-2] ConditionalRejectingErrorHandler: Execution of Rabbit message listener failed.




org.springframework.amqp.rabbit.listener.exception.ListenerExecutionFailedException: Listener threw exception




        at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.wrapToListenerExecutionFailedExceptionIfNeeded(AbstractMessageListenerContainer.java:865)




        at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:803)




        at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:691)




        at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$001(SimpleMessageListenerContainer.java:93)




        at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$1.invokeListener(SimpleMessageListenerContainer.java:183)




        at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.invokeListener(SimpleMessageListenerContainer.java:1358)




        at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:661)




        at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.doReceiveAndExecute(SimpleMessageListenerContainer.java:1102)




        at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.receiveAndExecute(SimpleMessageListenerContainer.java:1086)




        at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer.access$1100(SimpleMessageListenerContainer.java:93)




        at org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer$AsyncMessageProcessingConsumer.run(SimpleMessageListenerContainer.java:1203)




        at java.lang.Thread.run(Thread.java:745)




Caused by: org.springframework.messaging.MessagingException: Failure occured in AMQP listener while attempting to convert and dispatch Message.; nested exception is org.springframework.amqp.support.converter.MessageConversionException: Could not convert message body




        at org.springframework.integration.amqp.channel.AbstractSubscribableAmqpChannel$DispatchingMessageListener.onMessage(AbstractSubscribableAmqpChannel.java:202)




        at org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:800)




        ... 10 more




Caused by: org.springframework.amqp.support.converter.MessageConversionException: Could not convert message body




        at org.springframework.amqp.support.converter.SerializerMessageConverter.fromMessage(SerializerMessageConverter.java:151)




        at org.springframework.integration.amqp.channel.AbstractSubscribableAmqpChannel$DispatchingMessageListener.onMessage(AbstractSubscribableAmqpChannel.java:177)




        ... 11 more




Caused by: org.springframework.core.NestedIOException: Failed to deserialize object type; nested exception is java.lang.ClassNotFoundException: org.springframework.integration.message.GenericMessage




        at org.springframework.amqp.support.converter.SerializerMessageConverter.deserialize(SerializerMessageConverter.java:178)




        at org.springframework.amqp.support.converter.SerializerMessageConverter.fromMessage(SerializerMessageConverter.java:144)




        ... 12 more




Caused by: java.lang.ClassNotFoundException: org.springframework.integration.message.GenericMessage




        at java.net.URLClassLoader.findClass(URLClassLoader.java:381)




        at java.lang.ClassLoader.loadClass(ClassLoader.java:424)




        at java.lang.ClassLoader.loadClass(ClassLoader.java:357)




        at org.eclipse.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:429)




        at org.eclipse.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:382)




        at java.lang.Class.forName0(Native Method)




        at java.lang.Class.forName(Class.java:348)




        at java.io.ObjectInputStream.resolveClass(ObjectInputStream.java:626)




        at org.springframework.core.ConfigurableObjectInputStream.resolveClass(ConfigurableObjectInputStream.java:78)




        at org.springframework.amqp.support.converter.SerializerMessageConverter$1.resolveClass(SerializerMessageConverter.java:169)




        at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1613)




        at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1518)




        at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1774)




        at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1351)




        at java.io.ObjectInputStream.readObject(ObjectInputStream.java:371)




        at org.springframework.amqp.support.converter.SerializerMessageConverter.deserialize(SerializerMessageConverter.java:175)




        ... 13 more






It looks like the existing DefaultExceptionStrategy is not checking the entire cause chain to determine if any are fatal like the check for causeChainContainsARADRE() does.