IllegalStateException: No value for key PoolingContextSource
I created a Test with spring test context:






@RunWith(SpringJUnit4ClassRunner.class)




@ContextConfiguration(




		locations={"classpath:applicationContext.xml"}




)




@TransactionConfiguration(transactionManager = "txManager",defaultRollback = true)




@Transactional




public class RoleRepoImplTest{




	@Autowired




	private RoleRepo roleRepo;




	private Logger log= LoggerFactory.getLogger(RoleRepoImplTest.class);









	@Test




	public void testQueryRoleMap() throws Exception {




		Map&lt;String,String&gt; roleMap=roleRepo.queryRoleMap();




		assertNotNull(roleMap);









		for(String roleName:roleMap.keySet()){




			log.debug("{}:{}",roleName,roleMap.get(roleName));




		}




	}











But I ran this test,exception will throw:






14:40:21,073 DEBUG AbstractCompensatingTransactionManagerDelegate:120 - Cleaning stored transaction synchronization




14:40:21,077  WARN TestContextManager:409 - Caught exception while allowing TestExecutionListener [org.springframework.test.context.transaction.TransactionalTestExecutionListener@480d3575] to process &amp;apos;after&amp;apos; execution for test: method [public void com.bjinfotech.tri.cas.manager.repository.impl.RoleRepoImplTest.testQueryRoleMap() throws java.lang.Exception], instance [com.bjinfotech.tri.cas.manager.repository.impl.RoleRepoImplTest@17f6480], exception [null]




java.lang.IllegalStateException: No value for key [org.springframework.ldap.pool.factory.PoolingContextSource@2b30a42c] bound to thread [main]




	at org.springframework.transaction.support.TransactionSynchronizationManager.unbindResource(TransactionSynchronizationManager.java:209)




	at org.springframework.transaction.compensating.support.AbstractCompensatingTransactionManagerDelegate.doCleanupAfterCompletion(AbstractCompensatingTransactionManagerDelegate.java:121)




	at org.springframework.ldap.transaction.compensating.manager.ContextSourceTransactionManager.doCleanupAfterCompletion(ContextSourceTransactionManager.java:133)




	at org.springframework.transaction.support.AbstractPlatformTransactionManager.cleanupAfterCompletion(AbstractPlatformTransactionManager.java:1008)




	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processRollback(AbstractPlatformTransactionManager.java:875)




	at org.springframework.transaction.support.AbstractPlatformTransactionManager.rollback(AbstractPlatformTransactionManager.java:822)




	at org.springframework.test.context.transaction.TransactionalTestExecutionListener$TransactionContext.endTransaction(TransactionalTestExecutionListener.java:518)




	at org.springframework.test.context.transaction.TransactionalTestExecutionListener.endTransaction(TransactionalTestExecutionListener.java:292)




	at org.springframework.test.context.transaction.TransactionalTestExecutionListener.afterTestMethod(TransactionalTestExecutionListener.java:185)




	at org.springframework.test.context.TestContextManager.afterTestMethod(TestContextManager.java:406)




	at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:91)




	at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:72)




	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:231)




	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:49)




	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)




	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)




	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)




	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)




	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)




	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)




	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:71)




	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)




	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:174)




	at org.junit.runner.JUnitCore.run(JUnitCore.java:157)




	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:74)




	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:211)




	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:67)




	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)




	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)




	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)




	at java.lang.reflect.Method.invoke(Method.java:497)




	at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)




14:40:21,188 DEBUG DirtiesContextTestExecutionListener:86 - After test method: context [[TestContext@6fadae5d testClass = RoleRepoImplTest, testInstance = com.bjinfotech.tri.cas.manager.repository.impl.RoleRepoImplTest@17f6480, testMethod = testQueryRoleMap@RoleRepoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2d6e8792 testClass = RoleRepoImplTest, locations = &amp;apos;{classpath:applicationContext-for-test.xml}&amp;apos;, classes = &amp;apos;{}&amp;apos;, activeProfiles = &amp;apos;{}&amp;apos;, contextLoader = &amp;apos;org.springframework.test.context.support.DelegatingSmartContextLoader&amp;apos;]]], class dirties context [false], class mode [null], method dirties context [false].






I debuged code,and found when the transaction begin rollback,ContextSourceTransactionManager call doCleanupAfterCompletion method twice:one was called by  itself,and another was called by TransactionalTestExecutionListener.