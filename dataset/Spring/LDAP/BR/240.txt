SchemaToJava fails to generate Java classes
I have a LDAP schema with a structure like: country -&gt; locality -&gt; organization -&gt; etc.(other children).
When running SchemaToJava with parameters: -c Locality -k com.ldap.client.domain -l ldap://&lt;my-ip&gt;:389 -o top,locality -u cn=root,c=ro -p &lt;password&gt;, I get the following exception:
--------------------------------------------------------------------------------------------------------
Exception in thread "main" java.lang.NullPointerException
	at org.springframework.ldap.odm.tools.SchemaReader.createAttributeSchema(SchemaReader.java:65)
	at org.springframework.ldap.odm.tools.SchemaReader.createObjectClass(SchemaReader.java:141)
	at org.springframework.ldap.odm.tools.SchemaReader.getObjectSchema(SchemaReader.java:33)
	at org.springframework.ldap.odm.tools.SchemaToJava.readSchema(SchemaToJava.java:231)
	at org.springframework.ldap.odm.tools.SchemaToJava.main(SchemaToJava.java:414)
---------------------------------------------------------------------------------------------------------
After some researches, I came to this conclusion: according to org.springframework.ldap.odm.tools.SchemaReader.createAttributeSchema(SchemaReader.java:65), any attribute of type MAY or MUST is mandatory to have SYNTAX, but an attribute like seeAlso - according to RFC4519 - has no SYNTAX (it is the SUP that can deliver his SYNTAX):
DESC	RFC4519: DN of related object
NAME	seeAlso
objectClass	synthetic_JXplorer_schema_object
objectClass	top
OID	2.5.4.34
SUP	distinguishedName
The fix for missing SYNTAX might be to recursively go for the parent&amp;apos;s SYNTAX (here distinguishedName).