Exception &apos; java.lang.IllegalArgumentException: Not an managed type&apos; upon a tomcat context reload
Exception &amp;apos; java.lang.IllegalArgumentException: Not an managed type&amp;apos; upon a tomcat context reload when cached &amp;apos;RepositoryInformation&amp;apos; (change added in  DATACMNS-395) is returned by the &amp;apos;RepositoryFactorySupport&amp;apos; class.
The &amp;apos;Environment&amp;apos; field of this Jira issue contains details on my setup (emdedded tomcat 7).
The attached file &amp;apos;tomcat-log.txt&amp;apos; contains the full trace of the exception and context reload.
If I modify RepositoryFactorySupport#getRepositoryInformation and have it always return new RepositoryInformation (i.e. effectively the old behaviour prior to the DATACMNS-395 change) then this exception does not occur.
Attached ("RepositoryInformationCmp.txt") is a dump of the cached version of RepositoryInformation vs a newly created instance (I used ReflectionToStringBuilder with a recursive &amp;apos;ToStringStyle&amp;apos; strategey to produce the dump). The &amp;apos;diff&amp;apos; utility reveals that the content of both instances is identical.
Note however that the recursion stops at java.lang classes and so does not include the contents of the &amp;apos;Class&amp;apos; classes which is where I believe the difference lies.
My theory on the cause of this problem is that a new class loader is instantiated when the Tomcat context is reloaded, thereby somehow invalidating existing &amp;apos;Class&amp;apos; meta-information.
Interestingly, the first comment I saw upon navigating to the Spring Data Commons Jira site, by Seppel Hardt read with words to the effect that he encountered a similar problem and had reached a similar conclusion.
By anecdotal observation of stack overflow posts, I see there appears to numerous other users facing this issue also.