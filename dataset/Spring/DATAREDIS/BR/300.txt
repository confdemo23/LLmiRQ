RedisConnectionUtils: inconsistency with connection open() and close()
All Redis operations are handled within RedisTemplate#execute
It does






conn = RedisConnectionUtils.bindConnection(factory, enableTransactionSupport);






before operation and






} finally {




            RedisConnectionUtils.releaseConnection(conn, factory);




}






after.
In our case it is JedisConnectionFactory with default settings. The most interesting thing is usePool = true
Suppose that means we can&amp;apos;t use more connections, than Pool allows.
Well.
RedisConnectionUtils#doGetConnection populates  RedisConnectionHolder with RedisConnection from pool to the TransactionSynchronizationManager.bindResource
because:






public static RedisConnection bindConnection(RedisConnectionFactory factory, boolean enableTranactionSupport) {




        return doGetConnection(factory, true, true, enableTranactionSupport);




}






and bind = true.
But RedisConnectionUtils#releaseConnection does a check






// Only release non-transactional/non-bound connections.




        if (!isConnectionTransactional(conn, factory)) {






which returns true and I never see






log.debug("Closing Redis Connection");






And it causes ConnectionPool leak.