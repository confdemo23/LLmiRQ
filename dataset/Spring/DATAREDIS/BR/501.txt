RedisTemplate&apos;s default serializer assumes that its ClassLoader can load application types
By default, RedisTemplate uses a JdkSerializationRedisSerializer that will use the default class loader (typically the app class loader) for deserialization. This assumes that the class loader that loaded RedisTemplate will also be able to load an application&amp;apos;s own classes. This doesn&amp;apos;t hold true when using Spring Boot&amp;apos;s DevTools or in a container where Spring Data Redis is installed as a shared library.
DATAREDIS-427 made it easier to configure the class loader used by JdkSerializationRedisSerializer. Could RedisTemplate be updated to take advantage of this and configure its default JdkSerializationRedisSerializer to use the application context&amp;apos;s ClassLoader?