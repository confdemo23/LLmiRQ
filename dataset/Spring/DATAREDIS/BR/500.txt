executePipelined with RedisCallback uses wrong serializer (RedisTemplate.java)
RedisTemplate.executePipelined with RedisCallback uses wrong serializer when hashKeySerializer is different from  hashValueSerializer. 






    @Test




    public void testExecutePipelinedWidthDifferentHashKeySerializerAndHashValueSerializer() {




        assumeTrue(redisTemplate instanceof RedisTemplate);




        redisTemplate.setKeySerializer(new StringRedisSerializer());




        redisTemplate.setHashKeySerializer(new StringRedisSerializer());




        redisTemplate.setHashValueSerializer(new GenericToStringSerializer&lt;Long&gt;(Long.class));




        redisTemplate.opsForHash().put((K) "foo", "key", 1L);




        List&lt;Object&gt; results = redisTemplate.executePipelined(new RedisCallback() {




            public Object doInRedis(RedisConnection connection) throws DataAccessException {




                connection.hGetAll(((StringRedisSerializer) redisTemplate.getKeySerializer()).serialize("foo"));




                return null;




            }




        });




        assertEquals(((Map) results.get(0)).get("key"), 1L);




    }





