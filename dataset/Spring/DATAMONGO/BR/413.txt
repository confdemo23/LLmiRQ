Using "Or" in repository query yields a ClassCastException
This:
    List&lt;User&gt; findByEmailOrAlias(String email, String alias);
Gives:
2012-03-09 17:19:55,057 [main] DEBUG org.springframework.data.mongodb.repository.query.MongoQueryCreator - Created query { "email" : "a@b.c" , "alias" : "abc" , "$or" : { }}
2012-03-09 17:19:55,062 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate - find using query: { "email" : "a@b.c" , "$or" : { }} fields: null for class: class com.musicalabs.api.model.User in collection: user
Exception in thread "main" java.lang.ClassCastException: com.mongodb.BasicDBObject cannot be cast to java.lang.Iterable
	at org.springframework.data.mongodb.core.QueryMapper.getMappedObject(QueryMapper.java:92)
	at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:1259)
	at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:1248)
	at org.springframework.data.mongodb.core.MongoTemplate.find(MongoTemplate.java:471)
	at org.springframework.data.mongodb.repository.query.AbstractMongoQuery$Execution.readCollection(AbstractMongoQuery.java:125)
	at org.springframework.data.mongodb.repository.query.AbstractMongoQuery$CollectionExecution.execute(AbstractMongoQuery.java:142)
	at org.springframework.data.mongodb.repository.query.AbstractMongoQuery.execute(AbstractMongoQuery.java:88)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:302)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at $Proxy22.findByEmailOrAlias(Unknown Source)
	at com.acme.Fake.main(Fake.java:23)
While that:
    List&lt;User&gt; findByEmailAndAlias(String email, String alias);
works fine.