Document remove doesn&apos;t work when giving collection name as a parameter
I have a document that is put to different kinds of collections, depending on the need. Therefore, I need to use mongoOperations.save(item, "collection") method to save the document. Saving works fine, but removing the item with a call like this: mongoOperations.remove(item, "collection") doesn&amp;apos;t actually remove the document. The remove operation doesn&amp;apos;t fail, but the document still exists in the collection.
Remove works when using spring-data-mongo version 1.0.1 and 1.0.2.
Here&amp;apos;s some test code to show a failing test:






Item item = new Item("kukkuu");




mongoOperations.save(item, "test");




mongoOperations.remove(item, "test");




assertThat(mongoOperations.findAll(Item.class, "test").isEmpty(), is(Boolean.TRUE));






The Item is defined as:






@Document




public class Item {









    @Id




    private String id;




    private String name;









    public Item(String name) {




        this.name = name;




    }









    public String getName() {




        return name;




    }









    public String getId() {




        return id;




    }









    public void setId(String id) {




        this.id = id;




    }









    public void setName(String name) {




        this.name = name;




    }




}






