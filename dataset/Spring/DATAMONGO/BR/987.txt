Problem with lazy loading in @DBRef when getting data using MongoTemplate
The situation is simple: if we reference on an entity class another entity (both annotated with @Document) called Parent and Child. Here is the code:






@Document




class Parent {




     @Id




     private String id;




     private String name;




     @DBref(lazy=true)




     private Child child;









    // getters and setters ommited




}






and the Child class






@Document




class Child {




      @Id




       private String id;




       private String name;




      //getters and setters ommited




}






The following situation should never happen:






Parent parent = new Parent();




parent.setName("Daddy");




mongoTemplate.save(parent); //ok, it is persisted like we expected.




// Than we try to load this same entity from the database




Criteria criteria = Criteria.where("_id").is(parent.getId());




Parent persisted = mongoTemplate.findOne(new Query(criteria), Parent.class);




// The child attribute should be null, right?




assertNull(persisted.getChild()); // it fails






The null attribute is actually an enhanced class generated by CGLib. It should not be. This brings a lot of problems when you, by accident, persist the same entity. I attached a project with the JUnit test which reproduces the problem for you.