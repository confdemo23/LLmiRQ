Repository keyword query findByInId with pageable not returning correctly
I&amp;apos;ve been trying to use the In-keyword with identifiers and making the query pageable. The query returns results but getTotalElements() and getTotalPages() always returns 0. Also when you try to get any other page than 0, no results return. I&amp;apos;ve tried using In with another member other than id and it works as expected. Below is a strip down example I used for testing;
I&amp;apos;ve created 3 types and 10 items per those types, results in a total of 30 items.






@Document




public class Item {









    @Id




    private String id;




    private String type;




}












public interface ItemRepository extends MongoRepository&lt;Item, String&gt; {









    Page&lt;Item&gt; findByIdIn(Collection ids, Pageable pageable);




    Page&lt;Item&gt; findByTypeIn(Collection types, Pageable pageable);




}












@RunWith(SpringJUnit4ClassRunner.class)




@ContextConfiguration(classes = {MongoDbConfig.class})




@TransactionConfiguration(defaultRollback = false)




public class TestPageableIdIn {









    @Autowired




    private ItemRepository itemRepository;




    




    private List&lt;String&gt; allIds = new LinkedList&lt;&gt;();









    @Before




    public void setUp() {




        itemRepository.deleteAll();




        String[] types = {"SWORD", "SHIELD", "ARMOUR"};









        // 10 items per type




        for (String type : types) {




            for (int i = 0; i &lt; 10; i++) {




                String id = UUID.randomUUID().toString();




                allIds.add(id);




                itemRepository.save(new Item(id, type));




            }




        }




    }









    @Test




    public void testPageableIdIn() {




        




        Pageable pageable = new PageRequest(0, 5);




        




        // expect 5 Items returned, total of 10 Items(SWORDS) in 2 Pages




        Page&lt;Item&gt; results = itemRepository.findByTypeIn(Arrays.asList("SWORD"), pageable);




        Assert.assertEquals(5, results.getContent().size());




        Assert.assertEquals(10, results.getTotalElements());




        Assert.assertEquals(2, results.getTotalPages());




        




        // expect 5 Items returned, total of 30 Items in 6 Pages




        results = itemRepository.findByIdIn(allIds, pageable);




        Assert.assertEquals(5, results.getContent().size());




        Assert.assertEquals(30, results.getTotalElements()); // this is returning 0




        Assert.assertEquals(6, results.getTotalPages());     // this is returning 0




    }




}





