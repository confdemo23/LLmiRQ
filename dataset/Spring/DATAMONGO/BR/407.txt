Collection with generics losing element type after $set update
The example that works fine in TestThatWorks.java :

inserting a new object using mongoOps
adding a new element and then update it using mongoOps
querying the data, printing the list, the list still contains the correct element type

The example that does not work as expected in TestThatFails.java :

inserting a new object using mongoOps
adding a new element and then update it using mongoOps
querying the data, printing the list, the list now contains LinkedHashMap instead of the original element type

The difference between the 2 example lies in the parameterized nestedDomain&amp;apos;s List object. Without the parameterization using generics, the list will retain the type. Using generics on the list will result in LinkedHashMap after getting updated on the nestedDomain.
Strangely, the TestThatFails will work fine if the query is using is("bean1") which means the collection element when insertion happens instead of is("bean2"), which is the collection element when update happens.
Please help !