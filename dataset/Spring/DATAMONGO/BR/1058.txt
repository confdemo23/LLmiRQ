Using @Field("foo") with @Dbref breaking behavior.
When transitioning from 1.4.3.RELEASE to 1.6.0.RELEASE, the model below no longer returns with map
Model






@Document(collection="model")




class Model {




	@Id




	ObjectId id;




        




/**




* Currently only works without @Field annotation




*/




    @Field("foo")




	@DBRef




	Map&lt;String, Foo&gt; mapOfFoos ; //assume Foo is a class




}






Repo






public interface ModelDao extends MongoRepository&lt;Model, ObjectId&gt; {




}









public interface FooDao extends MongoRepository&lt;Foo, ObjectId&gt; {




}






Snippet of a unit test






...




Model model = new Model();




Map&lt;String, Foo&gt; mapOfFoos = new HashMap&lt;String, Foo&gt;();




Foo foo = new Foo()




fooDao.save(foo)




mapOfFoo("somestring", foo)




model.setMapOfFoos(mapOfFoo)




modelDao.save(model);




Model  retreivedModel = modelDao.findOne(model.getId());




//retreivedModel.getMapOfFoos() returns null




//EXPECTED (and previous behavior) retreivedModel.getMapOfFoos() not null





