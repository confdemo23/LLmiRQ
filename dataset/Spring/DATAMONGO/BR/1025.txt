Duplicate index creation on embedded documents 
Having the documents:






@CompoundIndexes({ @CompoundIndex(collection="timeRead", name = "eventIdAndChip", def = "{eventId : 1, chip : 1}"),




        @CompoundIndex(collection="timeRead", name = "eventIdAndPublish", def = "{ eventId : 1, publish : 1}"),




        @CompoundIndex(collection="timeRead", name = "chipAndTimeReadTickIndex", def = "{&amp;apos;chip&amp;apos; : -1, &amp;apos;timeReadTick&amp;apos; : 1}") })




@Document




public class TimeRead { }






and 






@Document




public class TimeReadChip {









    private Map&lt;String, TimeRead&gt; timeReads;




    private Map&lt;String, TimeRead&gt; pointNameToTimeRead;




}






The Mongo driver tries to create the same indexes twice: once because they are defined as compound on TimeRead (which is correct), and a second time when parsing the TimeReadChip document (incorrect). I&amp;apos;m assuming it sees the Map&lt;String, TimeRead&gt; and tries to create indexes on timeRead collection (again). This bug was introduced after 1.3.5.RELEASE.