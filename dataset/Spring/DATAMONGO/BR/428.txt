ClassCastException when using outputDatabase option in map-reduce
I have a database with a collection of documents. I am trying to do a mapreduce operation on this collection. When I select a set of mapreduce options such that the result is written to a collection in a different database from my source collection, I get a ClassCastException. Here is a snippet of my code (params is an object that contains String representations of my map, reduce, and finalize functions):






MapReduceOptions options = MapReduceOptions.options()




		.finalizeFunction(params.finalizeFunction)




		.outputDatabase("mapreduceres")




		.outputCollection(collName)




		.outputSharded(true);









MapReduceResults&lt;Object&gt; temp = mongoTemplate.mapReduce(params.collectionId, params.mapFunction,




		params.reduceFunction,options,Object.class);






Here is the exception:






SEVERE: com.mongodb.BasicDBObject cannot be cast to java.lang.String




java.lang.ClassCastException: com.mongodb.BasicDBObject cannot be cast to java.lang.String




	at org.springframework.data.mongodb.core.mapreduce.MapReduceResults.&lt;init&gt;(MapReduceResults.java:52)




	at org.springframework.data.mongodb.core.MongoTemplate.mapReduce(MongoTemplate.java:1026)




	at org.springframework.data.mongodb.core.MongoTemplate.mapReduce(MongoTemplate.java:976)






This is the Spring code that is throwing the exception:






public MapReduceResults(List&lt;T&gt; mappedResults, DBObject rawResults) {




	Assert.notNull(mappedResults);




	Assert.notNull(rawResults);




	this.mappedResults = mappedResults;




	this.rawResults = rawResults;




	parseTiming(rawResults);




	parseCounts(rawResults);




	if (rawResults.get("result") != null) {




		this.outputCollection = (String) rawResults.get("result");   //==== here!




	}






I put a breakpoint here, and I can see the value of the result object. If I do NOT use a different database (i.e., comment out the .outputDatabase("mapreduceres") line above, the result object is indeed a simple string. However, if I DO use a different database (i.e., keep the .outputDatabase("mapreduceres") above), the result object looks like this:






{ "db" : "mapreduceres" , "collection" : "myCollectionName"}






In this case, the cast doesn&amp;apos;t work.