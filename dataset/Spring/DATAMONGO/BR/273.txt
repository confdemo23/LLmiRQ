Collection elements seem to lost their type when persisted
When I persist a list of objects they do not get a _class field in mongo, and come back as a LinkedHashMap rather than the type I expect.






Map&lt;EventParam, Object&gt; params = new HashMap&lt;EventParam, Object&gt;();




params.put(EventParam.USER, new FakeUser("bob"));




params.put(EventParam.VARIABLES, Collections.singletonList(new Variable("var_a", "value for a")));









IEvent event = new Event(EventType.VARIABLES_UPDATE, params);









RecordedServerEvent frame = new RecordedServerEvent((Event)event);




frame.setRecordingId(recordingId);




frame.setFrameId(new ObjectId().toString());




frame.setTimestamp(new Date());














mongoTemplate.insert(frame, COLLECTION_NAME);






gets persisted as:






{ "_id" : ObjectId("4e67ca8ca4b7746a17107034"), "_class" : "___.RecordedServerEvent", "event" : { "type" : "VARIABLES_UPDATE", "params" : { "VARIABLES" : [




	{




		"name" : "var_a",




		"value" : "value for a"




	}




], "USER" : { "name" : "bob", "_class" : "___.FakeUser" } } }, "recordingId" : "1234", "timestamp" : ISODate("2011-09-07T19:48:28.211Z") }






and when I try to deserialize it and use it, it comes back as a LinkedHashMap






Map&lt;String, Object&gt; rawParams = mappingConv.read(Map.class, (DBObject)s.get("params"));









System.out.println(((List)rawParams.get("VARIABLES")).get(0).getClass());   =&gt;   java.util.LinkedHashMap






The behavior I would expect would be to get back a list of objects instantiated to the type they were before being persisted.
The motivation for deserializing this way is related to DATAMONGO-268 where I have to use a custom deserializer for third-party classes that I can&amp;apos;t add a persistence constructor to.