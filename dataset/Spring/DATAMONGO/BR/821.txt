MappingException for $size queries on subcollections containing dbrefs
For repository method definition like below:






@Query("{meanings: {$not: {$size: 0}}}")




Page&lt;Entry&gt; findAllWithMeanings(Pageable pageable);






Entry documents contain meanings field which is a list of @DBRef s. When I remove @DBRef annotation it works ok, but otherwise I get the following exception:






Exception in thread "main" org.springframework.data.mapping.model.MappingException: No mapping metadata found for class com.mongodb.BasicDBObject




	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.createDBRef(MappingMongoConverter.java:729)




	at org.springframework.data.mongodb.core.convert.MappingMongoConverter.toDBRef(MappingMongoConverter.java:288)




	at org.springframework.data.mongodb.core.convert.QueryMapper.convertAssociation(QueryMapper.java:273)




	at org.springframework.data.mongodb.core.convert.QueryMapper.getMappedKeyword(QueryMapper.java:158)




	at org.springframework.data.mongodb.core.convert.QueryMapper.getMappedObject(QueryMapper.java:111)




	at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:1489)




	at org.springframework.data.mongodb.core.MongoTemplate.doFind(MongoTemplate.java:1480)




	at org.springframework.data.mongodb.core.MongoTemplate.find(MongoTemplate.java:527)




	at org.springframework.data.mongodb.repository.query.AbstractMongoQuery$PagedExecution.execute(AbstractMongoQuery.java:205)




	at org.springframework.data.mongodb.repository.query.AbstractMongoQuery.execute(AbstractMongoQuery.java:93)




	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:337)




	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)




	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)










