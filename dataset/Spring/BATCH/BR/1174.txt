Late binding of jobParameters does not work if late binding expression is not preceded or trailed by string
I stumbled upon some strange behavior when using late binding. I&amp;apos;m trying to inject a string that is passed to the batch as a jobParameter. This string is however not inject, if I don&amp;apos;t add a character in front-  of or after the late binding expression.
To replicate this bug try to do the following:
in the restartSample.xml change the flatFileItemReader&amp;apos;s resource from:
&lt;beans:property name="resource" value="classpath:/data/skipJob/input/input#
{jobParameters[run.id]}.txt" /&gt;
to
&lt;beans:property name="resource" value="#{jobParameters[run.id]}
" /&gt;
This results in the following exception:
 java.lang.IllegalStateException: Input resource must exist (reader is in &amp;apos;strict&amp;apos; mode): class path resource [#
{jobParameters[run.id]}]

If you add a character at the end (or the front), like this:
&lt;beans:property name="resource" value="a#{jobParameters[run.id]}
" /&gt;
The following exception is thrown:
java.lang.IllegalStateException: Input resource must exist (reader is in &amp;apos;strict&amp;apos; mode): class path resource [a1]
(This makes sense, as there is no such classpath resource, and the jobParameter run.id which is &amp;apos;1&amp;apos; has been set.)
So, it seems that the late binding of jobParameters does not work if the jobParameter key is concatenated with some other string value...strange. Even stranger, it does not seem to be the case for late binding of stepExecutionContext parameters.
Wasn&amp;apos;t able to locate the code that did the actual late binding, so I&amp;apos;m afraid I don&amp;apos;t have patch ready that you can apply.
