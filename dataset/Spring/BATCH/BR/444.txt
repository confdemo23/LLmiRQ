Remove null check from ExecutionContext#putString
The ExecutionContext putString() method does an null check and throws an IllegalArgumentException if the value is null. (Assert.notNull) but this can cause issues if someone stores a string like: executionContext.putString("key", new String()).  If the job fails and comes back from restart, it will pull a null value from the database, and the execution context will throw an exception.  The underlying map doesn&amp;apos;t really care if it&amp;apos;s null, and it seems like we shouldn&amp;apos;t enforce new semantics.
Here&amp;apos;s a like to the forum thread it was raised in:
http://forum.springframework.org/showthread.php?p=169118&amp;posted=1#post169118
The JdbcCursorItemReader should also be modified to not put an empty string in, which only happens because we&amp;apos;re putting in a comma delimited list of strings representing row numbers that have been skipped.  If it&amp;apos;s empty nothing should be written.