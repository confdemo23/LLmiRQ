That old stateful / stateless thing again....
Step used to have StepExecutorFactory to create stack-confined stateful StepExecutor instances.  Now that StepExecutor is merged with Step it needs to have its own factory.  Or else we go back to the StepExecutor/Factory design.  So Job has a list of StepFactory instead of a list of Steps, and creates a Step for use inside its execute() method.  The simplest possible factory would be a prototype bean lookup, otherwise the factory has to have all the public setters of the Step implementation (maybe now that things are settling down that isn&amp;apos;t so bad).