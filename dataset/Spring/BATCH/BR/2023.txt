@StepScope should default to ScopedProxyMode.TARGET_CLASS
If I use @StepScope on a @Bean method that returns a FlatFileItemReader, I get a ClassCastException:  java.lang.ClassCastException: $Proxy16 cannot be cast to org.springframework.batch.item.file.FlatFileItemReader
That&amp;apos;s because the ScopedProxyMode is INTERFACES, and the proxy created is based on of the interfaces of FlatFileItemReader, and not FlatFileItemReader itself. Since we always have CGLIB when using @Configuration, I see no reason for not changing the default proxyMode of @StepScope to TARGET_CLASS. 
One more argument for the proxyMode TARGET_CLASS: when I change the return type of the @Bean method to ItemReader&lt;xx&gt;, but still return a FlatFileItemReader, I don&amp;apos;t get a ClassCastException, but the ItemStream registration does not work, and the FlatFileItemReader throws an exception on the first read.
Altogether those are serious stumble blocks for people not familiar with the proxying mechanisms in Spring, and we would avoid all of them with the default proxyMode TARGET_CLASS.