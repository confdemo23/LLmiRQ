Infinite loop caused by throwing an Error from the ItemWriter of a skippable step
If a java.lang.Error is thrown from the ItemWriter of a step with skipLimit &gt; 0, then the framework falls into an infinite loop.  It appears that an Error thrown misses the catch block that increments the skip counter, but it still causes the step to skip.  So the effect is that we skip continuously.
The desired effect is that an Error is thrown out of the job and never skips.
This was discovered when using jMock since jMock throws an ExpectationError when an expectation fails.