HibernateCursorItemReader causes OutOfMemoryError when skipping large sets of data
In case of restarting of previously failed job, HibernateCursorItemReader skips already processed records by simply reading them upto desired index, i.e. uses default implementation from AbstractItemCountingItemStreamItemReader.jumpToItem(). This results in all skipped entities being loaded into hibernate session which can lead to OutOfMemoryError in case of large result sets. 
Possible solution:
1) Remove ScrollMode.FORWARD_ONLY from cursor creation (line 198), which will be then defaulted to ScrollMode.SCROLL_INSENSITIVE
2) Override jumpToItem() method in following way:
    @Override
    protected void jumpToItem( int itemIndex ) throws Exception 
{
        cursor.setRowNumber(itemIndex - 1);
    }