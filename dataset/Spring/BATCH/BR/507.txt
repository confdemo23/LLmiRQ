FlatFileItemWriter OutputSource not initialised on FlatFileItemReader.open()
FlatFileItemWriter.OutputSource contains a number of member variables that are only initialised via the FlatFileItemWriter.set methods - for example setShouldDeleteIfExists.
If a writer is closed and then re-opened (ie same FlatFileItemWriter object is reused in same vm), a new OutputSource object is created, but it is not reinitialised so these attributes are defaulted - eg shouldDeleteIfExists defaults to true.
Apologies if this is a product of the way I am using the FlatFileItemWriter.  I am new to Spring and SpringBatch and don&amp;apos;t properly understand the lifecycle of the beans. I might be misusing the FlatFileItemWriter - perhaps it should not be possible to close and then re-open one of these?
I have been using code below based on one of the sample jobs which seems to reuse the same writer on the second run of the jobs. My aim was to reproduce a second potential bug, whereby FlatFileItemWriter won&amp;apos;t restart if it already exists but  no record of it exists in StepExecutionContext (eg if first run of job failed before this step commits for first time), however this bug is preventing me from doing this  - I am dependant on shouldDeleteIfExists being false, however I am finding that it is false on first run (set via my job.xml), but true on second run.
public class FlatFileItemWriterRestartTests extends AbstractBatchLauncherTests {
    public void testLaunchJob() throws Exception {
        final JobParameters jobParameters = new JobParameters();
        logger.info("Starting test");
        JobExecution jobExecution = null;
        try 
{
            jobExecution = launcher.run(getJob(), jobParameters);
        }
        catch (InfrastructureException expected) 
{
            logger.info("Caught Exception");
            logger.info(expected);
            assertTrue("Not planned exception: "+expected.getMessage(), expected.getMessage().toLowerCase().indexOf("planned")&gt;=0);
        }

        // At this point existing FlatFileItemWriter is reused, 
        // but new OutputState  
        // is created, with default shouldDeleteIfExists=true 
        jobExecution = launcher.run(getJob(), jobParameters); 
        assertEquals(BatchStatus.COMPLETED, jobExecution.getStatus());
        logger.info("Completed");
    }
}
For reference I mentioned this on:
http://forum.springframework.org/showthread.php?t=51190