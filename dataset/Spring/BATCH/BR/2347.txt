Memory leak in DefaultJobLoader
To load the jobs and populate the job registry, we use the DefaultJobLoader class provided by Spring batch: https://github.com/spring-projects/spring-batch/blob/587680ba56d03d1acd18a75ee00abea84e81038f/spring-batch-core/src/main/java/org/springframework/batch/core/configuration/support/DefaultJobLoader.java
Internally the DefaultJobLoader maintains two hashmaps:
1) contexts 
2) contextToJobNames
When the clear() method in called, only the first hashmap is cleared.
In most cases it doesn&amp;apos;t cause any issues because applications will usually load their jobs only once. 
For applications such as ours that need to clear loaded jobs and reload them, this causes a memory leak since the DefaultJobLoader retains a reference to the previously loaded jobs, preventing garbage collection.
The fix is trivial to implement and shouldn&amp;apos;t have side effects:
ensure that the &amp;apos;contextToJobNames&amp;apos; map is cleared right after the other one.