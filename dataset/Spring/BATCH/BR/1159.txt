PROCESS_SKIP_COUNT seems not to ever get written to database
Exceptions in readers and writers seems to be handled nicely, but there seems to be a problem throwing skippable exception from processor. StepExecution&amp;apos;s processSkipCount is incremented, skip listeners are called and step listener&amp;apos;s afterStep() gets correct counts in StepExecution has correct counts. But PROCESS_SKIP_COUNT is never incremented in database - allways 0. Sometimes even filterCount is incremented in StepExecution instead of processSkipCount. I tried to debug through sources but got pretty lost I&amp;apos;ve checked that HibernateTemplate.flush() is called everytime in the writer. 
This is part of our parent step configuration (FaultTolerantStepFactoryBean) used for all batches (i believe there should be no problem)
		&lt;property name="retryableExceptionClasses"&gt;
			&lt;list&gt;
				&lt;value&gt;org.springframework.dao.RecoverableDataAccessException&lt;/value&gt;
				&lt;value&gt;org.springframework.dao.TransientDataAccessException&lt;/value&gt;
			&lt;/list&gt;
		&lt;/property&gt;
		&lt;property name="skippableExceptionClasses" value="java.lang.Exception" /&gt;
		&lt;property name="fatalExceptionClasses"&gt;
			&lt;list&gt;
				&lt;value&gt;cz.mycompany.FatalProcessingException&lt;/value&gt;
				&lt;value&gt;org.springframework.batch.core.JobInterruptedException&lt;/value&gt;
			&lt;/list&gt;
		&lt;/property&gt;
Problem appeared to be there quite some time. Previously we used 2.0.0.M2 and it was already there.