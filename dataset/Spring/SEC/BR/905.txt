<protect-pointcut /> pointcuts do not respect method arguments
Suppose you have two methods with the same name but different parameter types along with some further methods. E.g. securing a method with one parameter with an admin role and all other methods (by using *.(..)) with a user role this leads to upredictable results. Depending on which of the two methods you secure, you either get both secured with admin role or all methods of the class are only user secured.
Digging into the sources I suppose the MapBasedDefinitionSource to be the problem. addSecureMethod(Class javaType, String mappedName, ConfigAttributeDefinition attr) only regards method names but does NOT regard parameters.
Furthermore the check for more specificality seems odd to me. If you take the order of the pointcut definitions into account, the first pointcut matching a method should win. I doubt if it is possible at all to find out if one pointcut is a subset or superset of another. SO why not take the first match?
Regards,
Ollie