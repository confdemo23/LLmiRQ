SavedRequest : ClassCastException when calling parameters.get(paramName)
If you are using WebSphere and IBM JSF, the following problem happens:
The fact that WebSphere container puts non-string array objects into the request parameter maps such as String object
causes ClassCastException when ExceptionTranslator instanciates a new SavedRequest instance, 
which executes the following code in its constructor(Line #113):
//SavedRequest class
.
.
.
// Parameters
Map parameters = request.getParameterMap();
Iterator paramNames = parameters.keySet().iterator();
while (paramNames.hasNext()) {
	String paramName = (String) paramNames.next();
	String[] paramValues = (String[]) parameters.get(paramName);
	this.addParameter(paramName, paramValues);
}
.
.
.
Since it&amp;apos;s happening in the constructor, I can&amp;apos;t override this behavior,so 
I have to write my own SavedRequest class that does string-array type check before casting the returned value from the parameter map.
//Custom SavedRequest class
.
.
.
// Parameters
Map parameters = request.getParameterMap();
Iterator paramNames = parameters.keySet().iterator();
while (paramNames.hasNext()) {
	String paramName = (String) paramNames.next();
	Object o =  parameters.get(paramName);
	if(o instanceof String[])
{
		String[] paramValues = (String[])o;
		this.addParameter(paramName, paramValues);
	}
	else
{
		//log
		.
		.
		.
	}
}
.
.
.
The bad thing was I also had to modify other classes which referenced the original SavedRequest object.
Do you think you can fix this issue in the next release?