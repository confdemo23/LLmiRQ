Query string isn&apos;t ignored while url - filterchain pattern matching
While upgrading from Acegi Security 1.0.7 to Spring Security 2.0.2 I noticed that url matching doesn&amp;apos;t work as it was before.
In Acegi I used the following url - filter chaing mapping:
&lt;bean id="filterChainProxy" class="org.acegisecurity.util.FilterChainProxy"&gt;
    &lt;property name="filterInvocationDefinitionSource"&gt;
	&lt;value&gt;
	     CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON 
	     PATTERN_TYPE_APACHE_ANT
                  j_acegi_security_check=httpSessionContextIntegrationFilter,....................			
	    j_acegi_logout=httpSessionContextIntegrationFilter,.......................
                 /*/.htm=httpSessionContextIntegrationFilter,.....................
            &lt;/value&gt;
  &lt;/property&gt;
&lt;/bean&gt;
I Spring Security the same mapping looks as follows:
&lt;bean id="filterChainProxy" class="org.springframework.security.util.FilterChainProxy"&gt;
    &lt;security:filter-chain-map path-type="ant"&gt;
            &lt;security:filter-chain pattern="/j_spring_security_check" filters="httpSessionContextIntegrationFilter, ..............." /&gt;
	&lt;security:filter-chain pattern="/j_spring_security_logout" filters="httpSessionContextIntegrationFilter,....." /&gt;
	&lt;security:filter-chain pattern="/*/.htm" filters="httpSessionContextIntegrationFilter,....." /&gt;			
    &lt;/security:filter-chain-map&gt;	
&lt;/bean&gt;
But  I received NullPointerException while performing some requests.  It appears because these requests bypass filterchain and Security Context isn&amp;apos;t integrated into a session. Such situation occurs for requests which includes parameters in url.
For instance, request url &amp;apos;page1.htm&amp;apos; matches to pattern &amp;apos;/*/.htm&amp;apos; but url &amp;apos;page1.htm?param=value&amp;apos; doesn&amp;apos;t. 
It caused by changes in url - filterchain pattern matching. In Acegi PathBasedFilterInvocationDefinitionMap ignores query string (any symbols after first &amp;apos;?&amp;apos;) but in Spring FilterChainProxy provides full requests url to matcher (in this case AntUrlPathMatcher) :
public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)
            throws IOException, ServletException 
{

        FilterInvocation fi = new FilterInvocation(request, response, chain);
        List filters = getFilters(fi.getRequestUrl());
       .................

}

public List getFilters(String url)  {
      Iterator filterChains = filterChainMap.entrySet().iterator();
        while (filterChains.hasNext()) {
            Map.Entry entry = (Map.Entry) filterChains.next();
            Object path = entry.getKey();
            if (matcher.requiresLowerCaseUrl()) {
                url = url.toLowerCase();
                if (logger.isDebugEnabled()) 
{
                    logger.debug("Converted URL to lowercase, from: &amp;apos;" + url + "&amp;apos;; to: &amp;apos;" + url + "&amp;apos;");
                }
            }
            boolean matched = matcher.pathMatchesUrl(path, url);
             ......
}
To keep backward compatibility I offer to change doFilter() implementation to pass request url without query string into getFilters() method.
