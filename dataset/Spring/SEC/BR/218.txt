RememberMeProcessingFilter adds Authentication token to SecurityContextHolder after AuthenticationException
The RememberMeProcessingFilter always adds a valid Authentication Token to the SecurityContextHolder, even after a AuthenticationException.  For example :

user &amp;apos;joebob&amp;apos; can only have 1 login session at any time (via the ConcurrentSessionController)
person A logs in with &amp;apos;joebob&amp;apos; on his machine, and sets a cookie on his machine to remember his Authentication details
person A closes his browser and after 30 minutes his session in the acegi SessionRegistry times out
person B logs in with &amp;apos;joebob&amp;apos; on his machine - a valid login attempt as there are no other sessions for &amp;apos;joebob&amp;apos; at the moment
person A opens his browser and attempts to log in automatically with the cookie - and is granted access.  Even though his cookie is invalidated (rememberMeServices.loginFail(httpRequest, httpResponse) - he is still granted a valid authentication token for his session.

A fix is to return from doFilter before exiting the AuthenticationException catch block in RememberMeProcessingFilter, before the SecurityContextHolder is updated with a valid AuthenticationToken.
In general there seems to be a lot of potential overlap here with AbstractProcessingFilter, which seems to offer a lot more with successful and unsuccessful authentication attempts - such as offering a failure url to redirect to, and storing the AuthenticationException in the session.
I kinda get the feeling that the RememberMeProcesssingFilter should extend the AbstractProcessingFilter because of this, its just lacks the right hooks - attemptAuthentication only provides the HttpServletRequest, and both the request and response are required for the rememberMeServices.autoLogin() method.