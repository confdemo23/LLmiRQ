Injecting Bean in a class used in custom PermissionEvaluator leads to NoSuchBeanDefinitionException
Autowiring a bean in a class used in a custom PermissionEvaluator leads to NoSuchBeanDefinitionException. If the @Autowire annotation is commented in code, the context loads correctly (but tests obviously then fail).
This is similar to referenced post in spring forums.











public class TestEntityPermission extends AbstractPermission {









    @Autowired // comment this and context loads




    private TestEntityService testEntityService;




    




    public boolean isAllowed(Authentication authentication, Object targetDomainObject,




            String permissionType) {




        //...




    }




}









public class DefaultPermissionEvaluator implements PermissionEvaluator {









    private Map&lt;String, Permission&gt; permissionNameToPermissionMap = new HashMap&lt;&gt;();









	private boolean checkPermissionByDomainObject(Authentication authentication,




            Object targetDomainObject, String permissionValue) {




        String permissionType = getPermissionType(permissionValue);




        String permissionName = getPermissionTarget(permissionValue);




        verifyPermissionIsDefined(permissionName);




        Permission permission = permissionNameToPermissionMap.get(permissionName);




        return permission.isAllowed(authentication, targetDomainObject, permissionType);




    }









}






Attached is a sample App (maven) with the according test case.