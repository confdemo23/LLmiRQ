Create UserDetailsServiceDelegator
Ordering issues can cause the UserDetailsService to be null. To resolve this, a UserDetailsServiceDelegator should be created. An example workaround can be found below:






@Configuration




@EnableWebSecurity




public class SecurityConfig extends WebSecurityConfigurerAdapter {




    private UserDetailsServiceDelegator userDetailsService = new UserDetailsServiceDelegator();









    @Bean




    @Override




    public UserDetailsService userDetailsServiceBean() throws Exception {




        return userDetailsService;




    }














    @Override




    protected void registerAuthentication(




            AuthenticationManagerBuilder auth) throws Exception {




        userDetailsService.setBuilder(auth);




        ...




    }




    




    static final class UserDetailsServiceDelegator implements UserDetailsService {




        private AuthenticationManagerBuilder delegateBuilder;




        private UserDetailsService delegate;




        private final Object delegateMonitor = new Object();









        private void setBuilder(AuthenticationManagerBuilder authentication) {




            this.delegateBuilder = authentication;




        }









        public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException { 




            if(delegate != null) {




                return delegate.loadUserByUsername(username);




            }









            synchronized(delegateMonitor) {




                if (delegate == null) {




                    delegate = this.delegateBuilder.getDefaultUserDetailsService();




                    this.delegateBuilder = null;




                }




            }









            return delegate.loadUserByUsername(username);




        }




    }




}





