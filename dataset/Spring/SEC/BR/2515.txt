Stackoverflow with @Bean AuthenticationManager
This comes from an invalid configuration that tries to expose the AuthenticationManager as a Bean when no authentication has been configured. For example:






@EnableWebSecurity




@Configuration




public class StackOverflowSecurityConfig extends WebSecurityConfigurerAdapter {




    @Override




    @Bean




    public AuthenticationManager authenticationManagerBean()




            throws Exception {




        return super.authenticationManagerBean();




    }




}






The stacktrace when trying to authenticate is this:






Exception in thread "http-nio-8080-exec-1" java.lang.StackOverflowError




	at ch.qos.logback.classic.Logger.isDebugEnabled(Logger.java:490)




	at ch.qos.logback.classic.Logger.isDebugEnabled(Logger.java:486)




	at org.apache.commons.logging.impl.SLF4JLocationAwareLog.isDebugEnabled(SLF4JLocationAwareLog.java:67)




	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:144)




	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator.authenticate(WebSecurityConfigurerAdapter.java:421)




	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:177)




	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator.authenticate(WebSecurityConfigurerAdapter.java:421)




	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:177)




	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator.authenticate(WebSecurityConfigurerAdapter.java:421)




	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:177)




	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator.authenticate(WebSecurityConfigurerAdapter.java:421)




	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:177)




	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator.authenticate(WebSecurityConfigurerAdapter.java:421)




	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:177)




	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator.authenticate(WebSecurityConfigurerAdapter.java:421)




	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:177)




	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator.authenticate(WebSecurityConfigurerAdapter.java:421)




	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:177)




	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator.authenticate(WebSecurityConfigurerAdapter.java:421)




	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:177)




	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator.authenticate(WebSecurityConfigurerAdapter.java:421)




	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:177)









...






Here&amp;apos;s an example project: https://github.com/scratches/sparklr-boot/tree/feature/password
We should provide a better error message when this is misconfigured.