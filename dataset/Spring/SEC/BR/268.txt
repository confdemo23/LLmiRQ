Uninitialized app context problem in HttpSessionEventPublisher 
We&amp;apos;re having a problem on some particular versions of Oracle app server (but not on others, e.g. OC4J 9.0.4) where the application context hasn&amp;apos;t been initialized when the contextInitialized method is called. According to the Javadocs for ServletContextListener, listeners will be notified before servlets and filters have been created. We&amp;apos;re using a ContextLoaderServlet so it probably shouldn&amp;apos;t work at all.
I&amp;apos;d like to change the class to modify the way the app context reference is set, since it isn&amp;apos;t actually needed until session initialization/destruction events are generated. This would perhaps mean calling getWebApplicationContext, rather than getRequiredWebApplicationContext in the contextInitialized method (logging a warning if the app context is null), caching the servlet context  and changing getContext from
    ApplicationContext getContext() 
{
       Assert.notNull(context, "setContext(...) never called, ApplicationContext must not be null");
        return context;
    }

to 
    ApplicationContext getContext() {
       if(context == null) 
{
            setContext( WebApplicationContextUtils.getRequiredWebApplicationContext(cachedServletContext) );       
       }
       return context;
    }
I guess the alternative would be to write a servlet version, similar to the Spring context loader, but that seems unnecessary.