LocalVariableTableParameterNameDiscoverer doesn&apos;t find Generic method parameters
I&amp;apos;m using spring security to secure my service. Here is a sample secured method:
public interface Foo&lt;T extends MyModel&gt; {
	@PreAuthorize("hasPermission(#item, &amp;apos;create&amp;apos;)")
	public T create(T item);
}
In my junit test I get a NullPointerException when spring parses the EL:
java.lang.NullPointerException
	at org.springframework.security.access.expression.method.MethodSecurityEvaluationContext.addArgumentsAsVariables(MethodSecurityEvaluationContext.java:66)
	at org.springframework.security.access.expression.method.MethodSecurityEvaluationContext.lookupVariable(MethodSecurityEvaluationContext.java:48)
	at org.springframework.expression.spel.ExpressionState.lookupVariable(ExpressionState.java:122)
	at org.springframework.expression.spel.ast.VariableReference.getValueInternal(VariableReference.java:52)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:59)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:93)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:98)
	at org.springframework.security.access.expression.ExpressionUtils.evaluateAsBoolean(ExpressionUtils.java:11)
	at org.springframework.security.access.expression.method.ExpressionBasedPreInvocationAdvice.before(ExpressionBasedPreInvocationAdvice.java:42)
	at org.springframework.security.access.prepost.PreInvocationAuthorizationAdviceVoter.vote(PreInvocationAuthorizationAdviceVoter.java:55)
	at org.springframework.security.access.vote.AffirmativeBased.decide(AffirmativeBased.java:50)
	at org.springframework.security.access.intercept.AbstractSecurityInterceptor.beforeInvocation(AbstractSecurityInterceptor.java:204)
	at org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor.invoke(MethodSecurityInterceptor.java:65)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at $Proxy25.create(Unknown Source)
[snip here comes the junit invocation part]
Debugging the offending code, I noticed that:
org.springframework.core.LocalVariableTableParameterNameDiscoverer#getParameterNames(Method method) returns null.
I guess it is because the method&amp;apos;s parameter type is Generic. Can I fix it? Do you have any idea where in the class it&amp;apos;s going "wrong" ?
I&amp;apos;d be happy to fix it and submitt a patch but I&amp;apos;, not sure where I have to change the code.
Cheers,
Jan
