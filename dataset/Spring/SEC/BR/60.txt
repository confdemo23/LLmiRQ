AbstractSecurityInterceptor does not work with detached Hibernate collections
The beforeInvocation method in AbstractSecurityInterceptor class has the following line:
        Assert.isTrue(getSecureObjectClass().isAssignableFrom(object.getClass()), "Security invocation attempted for object " + object
                    + " but AbstractSecurityInterceptor only configured to support secure objects of type: "
                    + getSecureObjectClass());
where the implicit object.toString() causes problems for us with detached Hibernate 3.0
collections. Our code passes an detached org.hibernate.collection.PersistentSet to a DAO
object which initializes it. This works fine in 0.8.0 but is broken in 0.8.3. The root cause
is that it is not safe to call toString() for lazily loaded Hibernate collection that is detached.
I don&amp;apos;t think this is a Hibernate bug as it mimics java.util.Collection toString() behavior. It
would be unsafe for Hibernate to return different values depending on whether the object is
detached or not.
Suggested fix is to either remove the above or make the check configurable so we can
disable it.