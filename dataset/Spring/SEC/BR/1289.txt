Successful registration event
With 3.0M2 and before I used the following code to register successful registrations and save client&amp;apos;s IPs
[code]
public class AuthenticationListener implements ApplicationListener {
    @Override
    public void onApplicationEvent(ApplicationEvent event) {
        if (event instanceof AuthenticationSuccessEvent) 
{
            onAuthenticationSuccessEvent((AuthenticationSuccessEvent) event);
        }
    }
    public void onAuthenticationSuccessEvent(AuthenticationSuccessEvent authenticationSuccessEvent) 
{
        // my code
    }
}
[/code]
With 3.0RC1 there are no AuthenticationSuccessEvent events any more. I&amp;apos;ve found the following comment for org.springframework.security.authentication.DefaultAuthenticationEventPublisher
"The default strategy used by &lt;tt&gt;ProviderManager&lt;/tt&gt; for publishing authentication events."
But when I looked in ProviderManager I&amp;apos;ve found that the default strategy is NullEventPublisher which is created by private field&amp;apos;s initializer.
I thought that it&amp;apos;s possible to inject DefaultAuthenticationEventPublisher with default XML security scheme but I&amp;apos;ve found no entry point to do this.