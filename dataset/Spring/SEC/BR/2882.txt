DefaultLoginPageGeneratingFilter grabs /**/login
I have the following Groovy security configuration in a Spring Boot web app:






@Configuration




@EnableWebSecurity




class SecurityConfig extends WebSecurityConfigurerAdapter {









    @Override




    protected void configure(HttpSecurity http) throws Exception {




        http.




            authorizeRequests().




                antMatchers("/scratch/secured").hasRole("USER").




                antMatchers("/**").permitAll().




                anyRequest().authenticated().




            and().




            formLogin();




    }




}






This does get me the built-in login form at /login, but it also hijacks /foo/something/login. DefaultLoginPageGeneratingFilter#matches appears to treat the url as a suffix instead of as an absolute path. Even though the context path should be /foo/something/login, the conditional at 262 evaluates to true, and the endsWith comparison is used. I can&amp;apos;t get Eclipse to dump the contents of request.getContextPath() right there during debugging.