Failure to create correct @javax.persistence.Column name attribute for non-clashing version field name
EntityMetadata correctly resolves a non-conflicting field name for optimistic locking version support. However, it fails to ensure the @javax.persistence.Column definition has the correct "name" attribute to reflect the resolved non-conflicting field name. It always assumes the column name is "version", even if the resolved non-conflicting field name is, for example, "_version".
Steps to reproduce:
create project com.foo
install jpa -provider HIBERNATE -database HYPERSONIC_IN_MEMORY 
new persistent class jpa -name SomeClass -testAutomatically   
add field string someField
add field string version
A review of SomeClass_Roo_Entity.aj includes:
    @javax.persistence.Version    
    @javax.persistence.Column(name = "version")    
    private java.lang.Integer SomeClass._version;    
This is incorrect and will clash with the user-defined "version" property. The resulting exception when "mvn test" executed:
Caused by: javax.persistence.PersistenceException: [PersistenceUnit: persistenceUnit] Unable to build EntityManagerFactory
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:677)
	at org.hibernate.ejb.HibernatePersistence.createContainerEntityManagerFactory(HibernatePersistence.java:132)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:225)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:288)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1368)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1334)
	... 53 more
Caused by: org.hibernate.MappingException: Repeated column in mapping for entity: com.foo.SomeClass column: version (should be mapped with insert="false" update="false")
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:652)
	at org.hibernate.mapping.PersistentClass.checkPropertyColumnDuplication(PersistentClass.java:674)
	at org.hibernate.mapping.PersistentClass.checkColumnDuplication(PersistentClass.java:696)
	at org.hibernate.mapping.PersistentClass.validate(PersistentClass.java:450)
	at org.hibernate.mapping.RootClass.validate(RootClass.java:192)
	at org.hibernate.cfg.Configuration.validate(Configuration.java:1108)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:1293)
	at org.hibernate.cfg.AnnotationConfiguration.buildSessionFactory(AnnotationConfiguration.java:859)
	at org.hibernate.ejb.Ejb3Configuration.buildEntityManagerFactory(Ejb3Configuration.java:669)