Database reverse engineer a table with a boolean field and property generated incorrectly
If I reverse engineer the following table:






CREATE TABLE app_user




(




  id bigint NOT NULL,




  account_expired boolean NOT NULL,




  -- ...




)






then the following property code is generated for account_expired:






 




    public Boolean AppUser.getAccountExpired() {




        return this.accountExpired;




    }









    public boolean AppUser.isAccountExpired() {




        return this.accountExpired != null &amp;&amp; this.accountExpired;




    }









    public void AppUser.setAccountExpired(Boolean accountExpired) {




        this.accountExpired = accountExpired;




    }






Unfortunately this causes problems when creating or editing an AppUser in the webapp (after generating a web tier with "controller all --package ~.web") - Spring MVC&amp;apos;s doBind method picks up the boolean "is" method and decides that the property is read-only as there is no matching set(boolean) method. This means that you can&amp;apos;t set accountExpired from the web tier.
The fix for me is simple - remove the code:






		// Add boolean accessor for Boolean object fields




		if (field.getFieldType().equals(JavaType.BOOLEAN_OBJECT) &amp;&amp; !hasBooleanPrimitiveAccessor(field)) {




			builder.addMethod(getBooleanPrimitiveAccessor(field));




		}






which I believe is redundant. Any reason why this code is there?
Patch attached.