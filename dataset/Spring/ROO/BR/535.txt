Compiler error on _Roo_Entity.aj  when identifierType is a primitive
I&amp;apos;ve tried to use a primitive type like identifier. This is an example:






E1.java






@Entity




@RooJavaBean




@RooToString




@RooEntity(identifierType=int.class)




public class E1{














    @Size(max = 30)




    private String nombre;









}






Roo generates the ".aj" files with no problems. But when I&amp;apos;ve tried to compile with a &amp;apos;perform package&amp;apos; command Maven says:











[INFO] [aspectj:compile {execution: default}]




[ERROR] The operator == is undefined for the argument type(s) int, null




[WARNING] advice defined in org.springframework.orm.jpa.aspectj.JpaExceptionTranslatorAspect has not been applied [Xlint:adviceDidNotMatch]




[WARNING] advice defined in org.springframework.mock.staticmock.AnnotationDrivenStaticEntityMockingControl has not been applied [Xlint:adviceDidNotMatch]




[WARNING] advice defined in org.springframework.mock.staticmock.AbstractMethodMockingControl has not been applied [Xlint:adviceDidNotMatch]




[INFO] ------------------------------------------------------------------------




[ERROR] BUILD ERROR




[INFO] ------------------------------------------------------------------------




[INFO] Compiler errors : 




error at if (id == null) throw new IllegalArgumentException("An identifier is required to retrieve an instance of E1");        




    ^




/home/jmvivo/projects/test-roo/test_jpa3/src/main/java/es/gva/cit/testjpa3/domain/E1_Roo_Entity.aj:75:0::0 The operator == is undefined for the argument type(s) int, null










