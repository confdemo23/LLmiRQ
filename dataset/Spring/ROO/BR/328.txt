EntityMetadata erroneously attempts to introduce EntityManager when it is already defined in the target type
If a user creates a Roo project and then performs a push-in refactor of all ITD types, Roo will report an error if the user has not yet deleted the @RooEntity annotation(s) from the target types. The error is cleared when @RooEntity is deleted as this indicates to Roo to no longer attempt to introduce an EntityManager field. This is a bug because Roo should always default to a "hands off" approach if the user has already defined a given member in the target type.
Exception fragment:






Method &amp;apos;entityManager&amp;apos; already defined in target type &amp;apos;com.foo.Food&amp;apos; (ITD target &amp;apos;com.foo.Food_Roo_Entity&amp;apos;)




java.lang.IllegalArgumentException: Method &amp;apos;entityManager&amp;apos; already defined in target type &amp;apos;com.foo.Food&amp;apos; (ITD target &amp;apos;com.foo.Food_Roo_Entity&amp;apos;)




    at org.springframework.roo.support.util.Assert.isNull(Assert.java:89)




    at org.springframework.roo.classpath.details.DefaultItdTypeDetailsBuilder.addMethod(DefaultItdTypeDetailsBuilder.java:93)




    at org.springframework.roo.addon.entity.EntityMetadata.&lt;init&gt;(EntityMetadata.java:143)




    at org.springframework.roo.addon.entity.EntityMetadataProvider.getMetadata(EntityMetadataProvider.java:73)





