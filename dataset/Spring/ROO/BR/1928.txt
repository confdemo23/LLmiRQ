Annotations are rejected if they contain binary expressions which refer to a named reference
refined from ROO-1900; upgrade to Roo-1.1.1 creates new failure:
The problem is caused by &amp;apos;complex&amp;apos; String literal, as used in RequestMapping
   static final String URLPATH="myService";
   @RequestMapping("/"+URLPATH)
To reproduce: 
&gt; cd rootest
&gt; roo-dev
roo&gt; project --topLevelPackage mypkg
Then save this file in rootest/src/main/java/mypkg/MyService.java
package mypkg;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
public interface MyService {
    final static String URLPATH = "myService";
    @Controller
    @RequestMapping("/"+URLPATH)
    public static class Cont implements MyService {}
}
[Timer-0] Parsing failure for &amp;apos;C:\Data\Programs\java\rootest\src\main\java\mypkg\MyService.java&amp;apos; (development mode diagnostics)
          java.lang.IllegalArgumentException: Object of class [japa.parser.ast.expr.NameExpr] must be an instance of class japa.parser.ast.expr.StringLiteralExpr
              at org.springframework.roo.support.util.Assert.isInstanceOf(Assert.java:337)
              at org.springframework.roo.support.util.Assert.isInstanceOf(Assert.java:319)
              at org.springframework.roo.classpath.javaparser.details.JavaParserAnnotationMetadata.convert(JavaParserAnnotationMetadata.java:159)
              at org.springframework.roo.classpath.javaparser.details.JavaParserAnnotationMetadata.&lt;init&gt;(JavaParserAnnotationMetadata.java:98)
              at org.springframework.roo.classpath.javaparser.JavaParserClassOrInterfaceTypeDetails.&lt;init&gt;(JavaParserClassOrInterfaceTypeDetails.java:258)
              at org.springframework.roo.classpath.javaparser.JavaParserClassOrInterfaceTypeDetails.&lt;init&gt;(JavaParserClassOrInterfaceTypeDetails.java:297)
              at org.springframework.roo.classpath.javaparser.JavaParserMutableClassOrInterfaceTypeDetails.&lt;init&gt;(JavaParserMutableClassOrInterfaceTypeDetails.java:55)
              at org.springframework.roo.classpath.javaparser.JavaParserClassMetadata.&lt;init&gt;(JavaParserClassMetadata.java:69)
              at org.springframework.roo.classpath.javaparser.JavaParserMetadataProvider.get(JavaParserMetadataProvider.java:163)
              at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:136)
              at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:81)
              at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:179)
              at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.get(AbstractItdMetadataProvider.java:183)
              at org.springframework.roo.metadata.DefaultMetadataService.getInternal(DefaultMetadataService.java:136)
              at org.springframework.roo.metadata.DefaultMetadataService.get(DefaultMetadataService.java:81)
              at org.springframework.roo.classpath.itd.AbstractItdMetadataProvider.notify(AbstractItdMetadataProvider.java:112)
              at org.springframework.roo.metadata.DefaultMetadataService.notify(DefaultMetadataService.java:199)
              at org.springframework.roo.metadata.internal.DefaultMetadataDependencyRegistry.notifyDownstream(DefaultMetadataDependencyRegistry.java:262)
              at org.springframework.roo.classpath.javaparser.JavaParserMetadataProvider.onFileEvent(JavaParserMetadataProvider.java:141)
              at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.publish(PollingFileMonitorService.java:344)
              at org.springframework.roo.file.monitor.polling.PollingFileMonitorService.scanAll(PollingFileMonitorService.java:318)
              at org.springframework.roo.process.manager.internal.DefaultProcessManager.doTransactionally(DefaultProcessManager.java:175)
              at org.springframework.roo.process.manager.internal.DefaultProcessManager.backgroundPoll(DefaultProcessManager.java:122)
              at org.springframework.roo.process.manager.internal.DefaultProcessManager.timerBasedPoll(DefaultProcessManager.java:233)
              at org.springframework.roo.process.manager.internal.DefaultProcessManager$2.run(DefaultProcessManager.java:75)
              at java.util.TimerThread.mainLoop(Timer.java:512)
              at java.util.TimerThread.run(Timer.java:462)
roo&gt;
Possible Workaround:
    static final String URLPATH="myService";
    static final String URLPATH2="/"+URLPATH;
    @RequestMapping(URLPATH2)
... amazingly parse shows no error for this computed string:
    @RequestMapping("/"+"myService")
