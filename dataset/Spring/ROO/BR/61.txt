Failure to detect existing fields with clashing name when introducing identifier field
EntityMetadata fails to detect naming classes if there is an existing field with the same name as the proposed identifier field.
The new version field name is correctly resolved (though also see ROO-60). We need similar logic for the identifier field.
Steps to reproduce:
create project com.foo
install jpa -provider HIBERNATE -database HYPERSONIC_IN_MEMORY 
new persistent class jpa -name SomeClass -testAutomatically   
add field string someField
Running "mvn test" at this point will pass. If you then "add field string id -class com.foo.SomeClass", it will give an ITD error when the tests are compiled:
compiler errors : 
error at public java.lang.String SomeClass.getId() {    
                                  ^^
/home/balex/t/src/main/java/com/foo/SomeClass_Roo_JavaBean.aj:13:0::0 intertype declaration from com.foo.SomeClass_Roo_Entity conflicts with intertype declaration: java.lang.String com.foo.SomeClass.getId() from com.foo.SomeClass_Roo_JavaBean
error at public java.lang.Long SomeClass.getId() {    
                                ^^