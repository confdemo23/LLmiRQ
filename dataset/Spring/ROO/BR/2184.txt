Use of generalization causes chaos in JSP fields 
Create/update/view JSPs generated using Roo 1.1.1.RELEASE show attributes in same order as defined in class *.java file (in Roo shell input order). In Roo 1.1.2.RELEASE when generalization is used it makes chaos in fields order. 
Normal 1.1.1. order is parrent class fields (in correct order) and then child class fields (in correct order). In 1.1.2. fields are mixed and it makes no sense.
Simple example script and screens of JSP generated by both Roo versions are attached.   