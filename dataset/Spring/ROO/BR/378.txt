Tests are failing when @OneToOne relationship is present
Here are the steps to reproduce:






 




roo&gt; project --topLevelPackage com.test --projectName Test --template STANDARD_PROJECT




roo&gt; persistence setup --provider HIBERNATE --database HYPERSONIC_IN_MEMORY




roo&gt; entity --name Region --testAutomatically




roo&gt; field string --fieldName name




roo&gt; entity --name Survey --testAutomatically




roo&gt; field string --fieldName name




roo&gt; perform tests






Everything works as expected.
In my case you can only have one survey per region.  And you can create a region without creating a survey.
So I manually (because I don&amp;apos;t see a Roo command to add one-to-one relationship) add the following:
in Survey.java






 




    @NotNull




    @OneToOne(cascade = CascadeType.ALL, optional=false)




    @JoinColumn(name = "region_id")




    private Region region;






in Region.java






 




    @OneToOne(mappedBy="region", optional=true)




    private Survey survey;






I now run the tests again:  






 




roo&gt; perform tests




-------------------------------------------------------




 T E S T S




-------------------------------------------------------




Running com.test.RegionIntegrationTest




Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.755 sec




Running com.test.SurveyIntegrationTest




Tests run: 9, Failures: 0, Errors: 8, Skipped: 0, Time elapsed: 0.094 sec &lt;&lt;&lt; FAILURE!









Results :









Tests in error: 




  testFlush(com.test.SurveyIntegrationTest)




  testMerge(com.test.SurveyIntegrationTest)




  testPersist(com.test.SurveyIntegrationTest)




  testRemove(com.test.SurveyIntegrationTest)




  testCountSurveys(com.test.SurveyIntegrationTest)




  testFindSurvey(com.test.SurveyIntegrationTest)




  testFindAllSurveys(com.test.SurveyIntegrationTest)




  testFindSurveyEntries(com.test.SurveyIntegrationTest)









Tests run: 18, Failures: 0, Errors: 8, Skipped: 0






Looking at the Survey&amp;apos;s integration test report:
javax.persistence.PersistenceException: org.hibernate.PropertyValueException: not-null property references a null or transient value: com.test.Survey.region
I believe the problem is in the Survey&amp;apos;s data on demand (region is being set to null):






     




public Survey SurveyDataOnDemand.getNewTransientSurvey(int index) {    




    com.test.Survey obj = new com.test.Survey();        




    obj.setName("name_" + index);        




    obj.setRegion(null);        




    return obj;        




}    





 