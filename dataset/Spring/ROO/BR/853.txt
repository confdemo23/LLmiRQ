AddOn template still requires package name like com.*.roo.addon, although such limitation seems superflous after migration to OSGi 
When calling project --topLevelPackage de.mycompany.roo.example.addon --template ROO_ADDON_SIMPLE , I get
java.lang.IllegalArgumentException: Roo add-ons must have a top-level package starting with .com or .net or .org; eg com.mycompany.myproject.roo.addon
I understand, that such naming convention might have been necessary for efficient classpath scanning or so, but I think, after migration to osgi, this limitation can now be dropped.
Two reasons for this:
1) Not all companies have com or net or org domains...
2) When a company (or someone else) decides to contribute several roo addons, the package name will typically start with something like  de.mycompany.roo.name_of_the_addon.*  I is not so nice to have to include "roo" a second time at the end of the package name ...
BTW.: Only the shell command enforces this naming restriction. We created our POM for the http://code.google.com/p/spring-roo-equals-roo-addon/ by hand and there was no error at runtime, although we did not adhere to the naming convention... 