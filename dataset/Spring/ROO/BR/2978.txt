Cyclic dependency in multi-module project when business module focussed after web scaffold

Run this script:






project --topLevelPackage com.sample




module create --topLevelPackage ~.core --moduleName my




jpa setup --database H2_IN_MEMORY --provider HIBERNATE




entity jpa --class ~.Book




field string --fieldName title




module focus --moduleName ~




module create --topLevelPackage ~.web --moduleName web




web mvc setup




web mvc scaffold --backingType my|~.Book --class web|~.BookController




module focus --moduleName my






Roo incorrectly makes the "my" module depend on the "web" module:






...




Updated my|ROOT/pom.xml [added dependency com.sample.web:web:0.1.0.BUILD-SNAPSHOT]




...






You can confirm this is invalid by running "mvn validate":






[INFO] Scanning for projects...




[ERROR] The projects in the reactor contain a cyclic reference: Edge between &amp;apos;Vertex{label=&amp;apos;com.sample.web:web:0.1.0.BUILD-SNAPSHOT&amp;apos;}&amp;apos; and &amp;apos;Vertex{label=&amp;apos;com.sample.core:my:0.1.0.BUILD-SNAPSHOT&amp;apos;}&amp;apos; introduces to cycle in the graph com.sample.core:my:0.1.0.BUILD-SNAPSHOT --&gt; com.sample.web:web:0.1.0.BUILD-SNAPSHOT --&gt; com.sample.core:my:0.1.0.BUILD-SNAPSHOT -&gt; [Help 1]




[ERROR] 




[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.




[ERROR] Re-run Maven using the -X switch to enable full debug logging.




[ERROR] 




[ERROR] For more information about the errors and possible solutions, please read the following articles:




[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/ProjectCycleException







The workaround is to edit the "my" module&amp;apos;s POM and delete the dependency on the "web" module&amp;apos;s WAR file.
The bug doesn&amp;apos;t occur if you remove the final "module focus" command from the above script (running it separately via the shell doesn&amp;apos;t add the dependency, oddly).
The impact of this is that scripts need to issue all necessary commands to the non-web modules (e.g. creating entities, services, and repositories) before creating any web modules.