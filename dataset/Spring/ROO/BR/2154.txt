DataOnDemand overwrites default field values.
Not sure if this is doable or not, but currently given a @RooEntity as follows:
class BaseEntity
private Boolean inactive = Boolean.FALSE;
Roo generates a BaseEntityDataOnDemand that does this:
BaseEntity obj = new BaseEntity();
obj.setInactive(null);
Is a bit of a pain.  Obvious workarounds, but maybe its an easy fix.