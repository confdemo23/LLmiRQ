Exceptions when Roo ends
I am getting exceptions when a Roo script ends.  Everything generated by Roo seems to work OK, but it is disconcerting.  I have seen two exceptions - one involving Zip, one involving a Timer:



EXCEPTION 1 **



... snip&gt; ...
quit
// Spring Roo 1.1.0.M2 [rev 2034662] log closed at 2010-06-21 15:48:36
Milliseconds required: 74451
Total execution time 82226 ms
ERROR: JarContent: Unable to read bytes. (java.lang.IllegalStateException: zip file closed)
java.lang.IllegalStateException: zip file closed
	at java.util.zip.ZipFile.ensureOpen(ZipFile.java:403)
	at java.util.zip.ZipFile.getEntry(ZipFile.java:148)
	at java.util.jar.JarFile.getEntry(JarFile.java:208)
	at org.apache.felix.framework.util.JarFileX.getEntry(JarFileX.java:61)
	at org.apache.felix.framework.cache.JarContent.getEntryAsBytes(JarContent.java:120)
	at org.apache.felix.framework.ModuleImpl$ModuleClassLoader.findClass(ModuleImpl.java:1781)
	at org.apache.felix.framework.ModuleImpl.findClassOrResourceByDelegation(ModuleImpl.java:758)
	at org.apache.felix.framework.ModuleImpl.access$100(ModuleImpl.java:61)
	at org.apache.felix.framework.ModuleImpl$ModuleClassLoader.loadClass(ModuleImpl.java:1733)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:248)
	at org.springframework.roo.process.manager.internal.DefaultProcessManager.logException(DefaultProcessManager.java:143)
	at org.springframework.roo.process.manager.internal.DefaultProcessManager.backgroundPoll(DefaultProcessManager.java:117)
	at org.springframework.roo.process.manager.internal.DefaultProcessManager.timerBasedPoll(DefaultProcessManager.java:225)
	at org.springframework.roo.process.manager.internal.DefaultProcessManager$2.run(DefaultProcessManager.java:75)
	at java.util.TimerThread.mainLoop(Timer.java:512)
	at java.util.TimerThread.run(Timer.java:462)
Roo exited with code 0



EXCEPTION 2 **



quit
// Spring Roo 1.1.0.M2 [rev 2034662] log closed at 2010-06-21 15:48:36
Milliseconds required: 79280
[Timer-1] java.lang.NullPointerException
	at org.springframework.roo.process.manager.internal.DefaultProcessManager.doTransactionally(DefaultProcessManager.java:192)
	at org.springframework.roo.process.manager.internal.DefaultProcessManager.backgroundPoll(DefaultProcessManager.java:114)
	at org.springframework.roo.process.manager.internal.DefaultProcessManager.timerBasedPoll(DefaultProcessManager.java:225)
	at org.springframework.roo.process.manager.internal.DefaultProcessManager$2.run(DefaultProcessManager.java:75)
	at java.util.TimerThread.mainLoop(Timer.java:512)
	at java.util.TimerThread.run(Timer.java:462)
