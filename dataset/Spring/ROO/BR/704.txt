spring:eval in  display.tagx  leads to errors for properties of type Map, since no converters are registered.
[Rev. 692]
ROO-702 introduced &lt;spring:eval&gt; in display.tagx.
Since in the generated show.jspx, Map-typed properties are not excluded (like in create.jspx and update.jspx), and no Converters are registered for Map-&gt;String in the controller there is the following exception:






org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from [java.util.Map] to [java.lang.String]




	at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:136)




	at org.springframework.expression.spel.support.StandardTypeConverter.convertValue(StandardTypeConverter.java:70)




	at org.springframework.expression.common.ExpressionUtils.convertTypedValue(ExpressionUtils.java:68)




	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:98)




	at org.springframework.web.servlet.tags.EvalTag.doEndTag(EvalTag.java:108)




	at org.apache.jsp.tag.web.form.fields.display_tagx._jspx_meth_spring_005feval_005f0(display_tagx.java:498)




	at org.apache.jsp.tag.web.form.fields.display_tagx._jspx_meth_c_005fotherwise_005f0(display_tagx.java:471)




	at org.apache.jsp.tag.web.form.fields.display_tagx._jspx_meth_c_005fchoose_005f0(display_tagx.java:352)




	at org.apache.jsp.tag.web.form.fields.display_tagx.doTag(display_tagx.java:200)




	at org.apache.jsp.WEB_002dINF.views.questions.show_jspx._jspx_meth_field_005fdisplay_005f1(show_jspx.java:134)




	at org.apache.jsp.WEB_002dINF.views.questions.show_jspx.access$1(show_jspx.java:117)




	at org.apache.jsp.WEB_002dINF.views.questions.show_jspx$Helper.invoke0(show_jspx.java:221)




	at org.apache.jsp.WEB_002dINF.views.questions.show_jspx$Helper.invoke(show_jspx.java:244)






Proposed solution:  Add converter for Map properties or suppress Map properties in show views (and maybe also in list view, if use of spring:eval is planned in table.tagx as well) 