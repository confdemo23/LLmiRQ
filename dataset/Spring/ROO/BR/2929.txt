Unexpected capitalization of instance variable causes compiler error for Entity Types that start with multiple capital letters
For entity types whose name begins with more than one capital letter, code that does not compile is being generated.
For example, in SWOTWeaknessController_Roo_Controller.aj, the following code was generated for the DELETE method:
  @RequestMapping(value = "/
{id}", method = RequestMethod.DELETE)
    public String SWOTWeaknessController.delete(@PathVariable("id") Long id, @RequestParam(value = "page", required = false) Integer page, @RequestParam(value = "size", required = false) Integer size, Model uiModel) {
        SWOTWeakness SWOTWeakness = SWOTWeakness.findSWOTWeakness(id);   &lt;=== THIS LINE HAS ERROR due to SWOTWeakness instance variable
        SWOTWeakness.remove();

The problem is that the instance variable "SWOTWeakness" has the same name as the class "SWOTWeakness", which results in the error:
[ERROR] error at SWOTWeakness SWOTWeakness = SWOTWeakness.findSWOTWeakness(id);
[ERROR] ^^^
[ERROR] D:\LYNIADEclipseWorkspace\LYNHP019\src\main\java\com\lyniad\web\SWOTWeaknessController_Roo_Controller.aj:93:0::0
 The local variable SWOTWeakness may not have been initialized

The problem does not occur for classes that follow the more conventional naming of beginning with a single capital letter. For example, the same code for a class for an entity type named "Tactic" is fine:

  @RequestMapping(value = "/{id}
", method = RequestMethod.DELETE)
    public String TacticController.delete(@PathVariable("id") Long id, @RequestParam(value = "page", required = false) Integer page, @RequestParam(value = "size", required = false) Integer size, Model uiModel) {
        Tactic tactic = Tactic.findTactic(id);    &lt;=== This line is fine
        tactic.remove();
Suggested fix: The code which determines the upper/lower case of the instance variable needs to ensure that the resulting instance variable name is different from the class name
The workaround is to simply rename the entity, in the above case to "SwotWeakness", although that change must be propagated to object models, documentation, code that references the entity type, etc.  So the workaround is a chore, but doable.
