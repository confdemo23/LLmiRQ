Integration Test Error STS 2.3.3M1 with ROO 1.1.0M1
Executing this script (with changing the db properties where needed) works fine






// Spring Roo 1.1.0.M1 [rev 3a0b8a3] log opened at 2010-05-21 20:43:39




project --topLevelPackage com.test --projectName Test




persistence setup --provider HIBERNATE --database MYSQL 




entity --class ~.Parent --testAutomatically 




entity --class ~.Child --testAutomatically 




field reference --fieldName parent --type com.test.Parent --notNull




// Setup the database.properties file for the database 




perform tests






That ends up with a test ChildIntegrationTest ... running this through STS 2.3.3 (not via Maven) this test fails with ....






javax.validation.ConstraintViolationException: validation failed for classes [com.test.Child] during persist time for groups [javax.validation.groups.Default, ]




	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.validate(BeanValidationEventListener.java:132)




	at org.hibernate.cfg.beanvalidation.BeanValidationEventListener.onPreInsert(BeanValidationEventListener.java:71)




	at org.hibernate.action.EntityIdentityInsertAction.preInsert(EntityIdentityInsertAction.java:159)




	at org.hibernate.action.EntityIdentityInsertAction.execute(EntityIdentityInsertAction.java:65)




	at org.hibernate.engine.ActionQueue.execute(ActionQueue.java:268)






And I traced this down through debugging .... to in the Parent Data on Demand Aspect






public Parent ParentDataOnDemand.getRandomParent() {




        init();




        Parent obj = data.get(rnd.nextInt(data.size()));




        return Parent.findParent(obj.getId());




    }






The get Parent.findParent call is returning null. And this is being called during the ChildDataOnDemand init method which then goes and tries to save the Child with a null parent which causes the validation exception.
It also doesn&amp;apos;t seem to happen with HyperSonic, I&amp;apos;m using innodb for the tables, and I tried changing the dialect for hibernate to the innodb one but still the same problem.
