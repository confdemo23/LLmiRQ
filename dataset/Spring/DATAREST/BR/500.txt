Rendering of lazy-loading proxies fails
Problem is that the nested lazy loading proxy is not unpacked correctly, see the linked example project for further details.
The code in 





org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.doWithReferencedProperty(RootResourceInformation, Serializable, String, Function&lt;ReferencedProperty, ResourceSupport&gt;, HttpMethod)




PersistentEntity&lt;?, ?&gt; persistentEntity = repoRequest.getPersistentEntity();




PersistentProperty&lt;?&gt; prop = persistentEntity.getPersistentProperty(propertyPath);




...




PersistentPropertyAccessor accessor = persistentEntity.getPropertyAccessor(domainObj);




Object propVal = accessor.getProperty(prop);






traverses the product property of the Category which returns the proxied version of the product instance. This instance cannot be serialized. We have to find a way to unwrap that proxy (probably still in JPA) or make it somehow serializable (in a way that works for other proxy mechanisms too...)
The test case: shouldBeAbleToResolveLazyLoadingProxyForProductInCategory demonstrates the problem.