Custom @RestResource path shows up as link href, but doesn&apos;t load data
SDR 2.3.0 Fowler.
I have Service and ServiceInstance entities. The relationship is many-one.
On the Service side I have the following:






    @OneToMany(mappedBy = "service", cascade = CascadeType.ALL, orphanRemoval = true)




    @RestResource(rel = "service-instances", path = "service-instances")




    private List&lt;ServiceInstance&gt; serviceInstances = new ArrayList&lt;&gt;();






On the ServiceInstance side I have






@ManyToOne




@JoinColumn(name = "service_id")




@RestResource(rel = "s:service", path = "service")




private Service service;






though I don&amp;apos;t think that matters.
When I get a single Service resource, the links are what I expect:






    GET http://localhost:8080/api/services/17




    




    {




      "key" : "upp",




      "_links" : {




        "self" : {




          "href" : "http://localhost:8080/api/services/17{?projection}",




          "templated" : true




        },




        "s:service-instances" : {




          "href" : "http://localhost:8080/api/services/17/service-instances"




        },




        ...




    }






But when I try to load the s:service-instances resource at http://localhost:8080/api/services/17/service-instances, I get a 404.
If I go to http://localhost:8080/api/services/17/serviceInstances, I can see the data.
So @RestResource(path) appears to control the link href, but not the actual route to the data.