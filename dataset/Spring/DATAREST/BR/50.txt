Properties with null values are always omitted from the JSON
When I export a repository using RepositoryRestMvcConfiguration the JSON representation I get back from the exported resources omits any property whose value is null.
What I want:






{




  "links": ...snip...,




  "content": [




    {




      "links": ...snip...,




      "content": [




        "someProperty": "non null value",




        "someOtherProperty": null




      ]




    }




  ]




}






What I actually get:






{




  "links": ...snip...,




  "content": [




    {




      "links": ...snip...,




      "content": [




        "someProperty": "non null value",




      ]




    }




  ]




}






I think this is because properties with null values are always omitted when converting from an object to a resource. See EntityToResourceConverter&amp;apos;s convert method, which contains this snippet:






if(null != (val = attrMeta.getValue().get(source))) {




  entityDto.put(name, val);




}






This behavior may sometimes be desirable but it seems incorrect for the framework to assume that it is always desirable.
It would be great if there was a way to specify the desired handling of null property values. A configuration option (somewhere) seems ideal; a hook method to override would also work.
I could replace the entire EntityToResourceConverter with a custom converter but this is a lot of framework code to branch just to remove one if statement.