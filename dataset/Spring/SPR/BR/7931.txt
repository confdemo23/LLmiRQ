Checking for @XmlRootElement annotation should be made optional in Jaxb2Marshaller 
The Jaxb2Marshaller is only supporting classes annotated with @XmlRootElement currently and there&amp;apos;s no way to override that behaviour as supportsInternal(Class, boolean) is private. There are cases when you want to (un)marshal classes that are @XmlType annotated only. Especially when working with XJC, you get the @XmlRootElement annotation only for classes that have their xsd:simpleType or xsd:complexType nested inside the xsd:element declaration (see this blog entry for why that&amp;apos;s the case). However, if you have a type that can be reused and used as a root element&amp;apos;s type, XJC will not create the @XmlRootElement annotation but rather a factory method inside the ObjectFactory class. To get those classes (un)marshalled, you currently have to copy large parts of Jaxb2Marshaller as there&amp;apos;s no way to disable the check for the annotation. So it would be cool if this was configurable through a bean property or at least changeable so that a subclass could potentially call supportsInternal(clazz, false).