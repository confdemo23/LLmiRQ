Using defaultContentType property in ContentNegotiatingViewResolver throws java.lang.UnsupportedOperationException
In my application I have a ContentNegotiatingViewResolver set to handle html , xml and json. Following is the beans declaration:







&lt;bean




    class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver"




    p:order="1"&gt;




    &lt;property name="mediaTypes"&gt;




      &lt;map&gt;




        &lt;entry key="html" value="text/html"/&gt;




        &lt;entry key="xml" value="application/xml" /&gt;




        &lt;entry key="json" value="application/json" /&gt;




      &lt;/map&gt;




    &lt;/property&gt;




    &lt;property name="defaultViews"&gt;




      &lt;list&gt;




        &lt;bean class="org.springframework.web.servlet.view.xml.MarshallingView"&gt;




          &lt;property name="marshaller"&gt;




            &lt;bean class="org.springframework.oxm.xstream.XStreamMarshaller"




              p:autodetectAnnotations="true" /&gt;




          &lt;/property&gt;




        &lt;/bean&gt;




        &lt;bean




          class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" /&gt;




      &lt;/list&gt;




    &lt;/property&gt;




    &lt;property name="ignoreAcceptHeader" value="true"/&gt;




    &lt;property name="defaultContentType" value="application/xml"/&gt;




  &lt;/bean&gt;









  &lt;bean id="jspViewResolver"




    class="org.springframework.web.servlet.view.InternalResourceViewResolver"




    p:prefix="/WEB-INF/jsp/" p:suffix=".jsp" p:order="2" /&gt;






//
As seen in the code I turned off acceptHeader and want to have a default content type of application/xml. When I access the page without an explicit extension I get a java.lang.UnsupportedOperationException:
java.lang.UnsupportedOperationException
        at java.util.AbstractList.set(AbstractList.java:115)
        at java.util.AbstractList$ListItr.set(AbstractList.java:412)
        at java.util.Collections.sort(Collections.java:121)
        at org.springframework.web.servlet.view.ContentNegotiatingViewResolver.resolveViewName(ContentNegotiatingViewResolver.java:344)
        at org.springframework.web.servlet.DispatcherServlet.resolveViewName(DispatcherServlet.java:1105)
        at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1052)
        at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:808)
        at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:726)
        at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:636)
        at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:545)
      ...