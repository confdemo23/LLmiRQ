Allow @Configuration classes to self-@ComponentScan
I am using AnnotationConfigWebApplicationContext and XML-free testing support with @ContextConfiguration(classes=...). When pointed @Configuration class contains @ComponentScan with a package containing that class:






package com.example.foo;









@Configuration




@ComponentScan(basePackages = "com.example.foo")




public class Config { }






I get unexpected exception:






org.springframework.context.annotation.ConflictingBeanDefinitionException: Annotation-specified bean name &amp;apos;config&amp;apos; for bean class [com.example.foo.Config] conflicts with existing, non-compatible bean definition of same name and class [com.example.foo.Config]






While I understand why it happens, IMHO Spring should handle this case and simply ignore @Configuration found in scanned package if it has already been provided in AnnotationConfigWebApplicationContext.
Test case attached. On branch master you&amp;apos;ll find a test case failing, branch fix fixes the problem by simply @Config to another package.