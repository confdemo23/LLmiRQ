Improve query validation by creating explicit EntityManager instance
org.springframework.data.jpa.repository.query.SimpleJpaQuery






SimpleJpaQuery(JpaQueryMethod method, EntityManager em, String queryString) {  









    




  // Try to create a Query object already to fail fast  




  if (!method.isNativeQuery()) {  




    try {  




      em.createQuery(query.getQuery());  




    } catch (RuntimeException e) {  




      // Needed as there&amp;apos;s ambiguities in how an invalid query string shall be expressed by the persistence provider  




      // http://java.net/projects/jpa-spec/lists/jsr338-experts/archive/2012-07/message/17  




      throw e instanceof IllegalArgumentException ? e : new IllegalArgumentException(e);  




    }  




  }  




    




}  






create Query but not close because org.springframework.orm.jpa.SharedEntityManagerCreator
when execute Query:






if (method.getName().equals("getResultList") || method.getName().equals("getSingleResult") ||  




  method.getName().equals("executeUpdate")) {  




  EntityManagerFactoryUtils.closeEntityManager(this.em);  




}






to close the EntityManager. Simple solution:






EntityManager target = null;




// Try to create a Query object already to fail fast




if (!method.isNativeQuery()) {




 try {




  target = em.getEntityManagerFactory().createEntityManager();




  target.createQuery(query.getQuery());




 } catch (RuntimeException e) {




  // Needed as there&amp;apos;s ambiguities in how an invalid query string shall be expressed by the persistence provider




  // http://java.net/projects/jpa-spec/lists/jsr338-experts/archive/2012-07/message/17




  throw e instanceof IllegalArgumentException ? e : new IllegalArgumentException(e);




 } finally {




  EntityManagerFactoryUtils.closeEntityManager(target);




 }




}





 