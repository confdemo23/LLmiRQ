Special characters not allowed anymore in named binding parameter
Migration from 1.2.0 to 1.5.2 leads to regression in terms of support of accentuated characters in named binding parameters. The problem comes form the use of \w+ in regular expression to match named parameter.  One solution would be to use "\p
{L}
+" instead (see the JavaDoc of Pattern).
The code that might be improved is in the static field PARAMETER_BINDING_PATTERN in the enum ParameterBindingParser of org.springframework.data.jpa.repository.query.StringQuery class.






public static void main(String[] args) {




  




  String frenchWord = "abonns";









  Pattern pOK = Pattern.compile("\\p\{L\}+", Pattern.CASE_INSENSITIVE);




  Matcher matcherOK = pOK.matcher(frenchWord);




  System.out.println(frenchWord + " matches " +  pOK.pattern() + " : " + matcherOK.matches());




		




  Pattern pKO = Pattern.compile("\\w+", Pattern.CASE_INSENSITIVE);




  Matcher matcherKO = pKO.matcher(frenchWord);




  System.out.println(frenchWord + " matches " +  pKO.pattern() + " : " + matcherKO.matches());




}






I modified several of my source files because I needed the update, but I am a bit frustrated. It would be nice to check elsewhere the use of \w+ in Spring data regular expression. Thank you very much in advance to bring back the support of native languages everywhere, just like Java does.