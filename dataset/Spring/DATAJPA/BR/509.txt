Entity name used in &apos;count&apos; queries ignores the entity name set in ORM mapping file
To return the entity name, DefaultJpaEntityMetadata always uses either the entity class name or the name parameter of the Entity annotation.






public String getEntityName() {




  Entity entity = domainType.getAnnotation(Entity.class);




  boolean hasName = null != entity &amp;&amp; StringUtils.hasText(entity.name());




  return hasName ? entity.name() : domainType.getSimpleName();




}






If the entity name has been configured in an ORM mapping file, this is ignored, e.g.:






&lt;entity name="car" class="com.sample.CarImpl"&gt;




  ...




&lt;/entity&gt;






This means that an exception is thrown when using the count or exists methods of the Spring Data repositories. Specifically (longer trace attached): 






Caused by: java.lang.IllegalArgumentException: org.hibernate.hql.internal.ast.QuerySyntaxException: CarImpl is not mapped [select count(*) from CarImpl x WHERE x.carId = :carId AND 1 = 1]




	at org.hibernate.ejb.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1364)




	at org.hibernate.ejb.AbstractEntityManagerImpl.convert(AbstractEntityManagerImpl.java:1300)




	at org.hibernate.ejb.AbstractEntityManagerImpl.createQuery(AbstractEntityManagerImpl.java:309)





