Not specifying the ASC clause results in a double ORDER BY clause
I have a query with an ORDER BY clause.






@Query("SELECT a FROM Admin a " + 




       "WHERE LOWER(a.firstname) LIKE LOWER(CONCAT(&amp;apos;%&amp;apos;, :searchTerm, &amp;apos;%&amp;apos;))" + 




       "   OR LOWER(a.lastname) LIKE LOWER(CONCAT(&amp;apos;%&amp;apos;, :searchTerm, &amp;apos;%&amp;apos;))" +




       "   OR LOWER(a.email) LIKE LOWER(CONCAT(&amp;apos;%&amp;apos;, :searchTerm, &amp;apos;%&amp;apos;))" +




       "   OR LOWER(a.login) LIKE LOWER(CONCAT(&amp;apos;%&amp;apos;, :searchTerm, &amp;apos;%&amp;apos;))" +




       "ORDER BY a.lastname, a.firstname")")




public Page&lt;Admin&gt; search(@Param("searchTerm") String searchTerm, Pageable page);






The ORDER BY clause does not specify any ASC nor DESC clause assuming the default ASC clause would be used.
But instead, the generated query looks like:






SELECT a FROM com.thalasoft.learnintouch.core.jpa.domain.Admin a 




WHERE LOWER(a.firstname) LIKE LOWER(CONCAT(&amp;apos;%&amp;apos;, :searchTerm, &amp;apos;%&amp;apos;)) 




   OR LOWER(a.lastname) LIKE LOWER(CONCAT(&amp;apos;%&amp;apos;, :searchTerm, &amp;apos;%&amp;apos;)) 




   OR LOWER(a.email) LIKE LOWER(CONCAT(&amp;apos;%&amp;apos;, :searchTerm, &amp;apos;%&amp;apos;))




   OR LOWER(a.login) LIKE LOWER(CONCAT(&amp;apos;%&amp;apos;, :searchTerm, &amp;apos;%&amp;apos;))




ORDER BY a.lastname, a.firstname order by a.lastname asc, a.firstname asc






It shows two ORDER BY clauses. If I explicitly add the ASC clause then the query is fine.