Result of Specifications.not(..) produces wrong Specification when combined directly with other Specifications
The specification constructed as 






Specifications spec = Specifications.not(spec1).and(spec2);






results in a Specification without the negation, i.e. SQL like SELECT ... WHERE (...) AND (...) instead of SELECT ... WHERE NOT (...) AND (...). 
This seems to happen because the negation implemented by overriding the Specification.toPredicate() method. 
A fix is to implement negation like the other operations, that is






public static &lt;T&gt; MySpecifications&lt;T&gt; not(final Specification&lt;T&gt; spec) {









   return new MySpecifications&lt;T&gt;(new Specification&lt;T&gt;() {









      public Predicate toPredicate(Root&lt;T&gt; root, CriteriaQuery&lt;?&gt; query, CriteriaBuilder builder) {




         return builder.not(spec.toPredicate(root, query, builder));




      }




   });




}






A workaround is to always wrap negation in a Specification, e.g.






Specifications spec = Specifications.where(Specifications.not(spec1)).and(spec2);





