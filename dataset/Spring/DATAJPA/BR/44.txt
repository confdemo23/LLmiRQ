Using named queries fails for methods not returning an entity
We are migrating from Hades and were very surprised to find exceptions in the JPA NamedQuery parsing.  The queries are defined on the entities.  The ones triggering the exceptions do not return entities.  I think that this is permitted by the specification and did work fine with Hades and Hibernate.  Here is an example:






@NamedQuery(name = "CountryAgreement.getLatestAgreementVersion", query = "select max(version) from CountryAgreement c where c.country.id = ?1 ")






The repository method Long getLatestAgreementVersion(Long countryId); and exception:
Caused by: java.lang.IllegalArgumentException: No property getLatestAgreement found for type class java.lang.Long
	at org.springframework.data.repository.query.parser.Property.&lt;init&gt;(Property.java:66)
	at org.springframework.data.repository.query.parser.Property.&lt;init&gt;(Property.java:100)
	at org.springframework.data.repository.query.parser.Property.create(Property.java:302)
	at org.springframework.data.repository.query.parser.Property.create(Property.java:268)
	at org.springframework.data.repository.query.parser.Property.from(Property.java:227)
	at org.springframework.data.repository.query.parser.Property.from(Property.java:215)
	at org.springframework.data.repository.query.parser.Part.&lt;init&gt;(Part.java:48)
	at org.springframework.data.repository.query.parser.PartTree$OrPart.&lt;init&gt;(PartTree.java:242)
	at org.springframework.data.repository.query.parser.PartTree.buildTree(PartTree.java:101)
	at org.springframework.data.repository.query.parser.PartTree.&lt;init&gt;(PartTree.java:77)
	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.&lt;init&gt;(PartTreeJpaQuery.java:51)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:100)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:176)
	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:73)
	at org.springframework.data.repository.support.RepositoryFactorySupport$QueryExecuterMethodInterceptor.&lt;init&gt;(RepositoryFactorySupport.java:259)
	at org.springframework.data.repository.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:143)
	at org.springframework.data.repository.support.RepositoryFactoryBeanSupport.getObject(RepositoryFactoryBeanSupport.java:107)
	at org.springframework.data.repository.support.RepositoryFactoryBeanSupport.getObject(RepositoryFactoryBeanSupport.java:36)
	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:142)
	... 36 more