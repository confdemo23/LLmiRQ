Using Java 8 named parameter prevents positional query parameter binding
When I turned on parameter naming in the java 8 compiler all the non named parameters I have no longer work.
In other words, Spring Data JPA insists on using the parameter name...
Simple Example:






    @Query("select r from Role r where ?1 member of r.permissions")




    public List&lt;Role&gt; findByPermission(Permission permission);






Works fine without parameter names added to compiler.
When I turn on the inclusion of parameter names I get this error:
Using named parameters for method public abstract java.util.List com.xxx.RoleRepository.findByPermission(com.xxx.Permission) but parameter &amp;apos;permission&amp;apos; not found in annotated query &amp;apos;select r from AshesRole r where ?1 member of r.permissions&amp;apos;!
And if I now change it to:






    @Query("select r from AshesRole r where :permission member of r.permissions")




    public List&lt;Role&gt; findByPermission(Permission permission);






It works again...
This could be by design - I understand that if it is the case. i.e. when you turn on parameter name inclusion then you must name all your parameters.
A fall back to "non named" would be ideal if scanning with parameter names is not successful but that might be too much overhead.
Though another option would be to allow the user to turn off using named parameters even when available. Developers might require parameter names in classes for some unrelated purpose and turning it on would break all their JPA queries (as they have not used it up to now).
Maybe making it configurable per repository is an alternative...