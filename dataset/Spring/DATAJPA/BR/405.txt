Custom repository method doesn&apos;t parse OrderBy clause properly
Currently, there are some custom repository method names with OrderBy clauses that are parsed properly.  Setting aside the database design issues, if you had a database that looked like:






CREATE TABLE project(




  key VARCHAR(8) PRIMARY KEY,




  name VARCHAR(64) NOT NULL




);






That table is mapped to an entity that looks like:






@Entity




public final class Project {









    @Id




    private volatile String key;









    private volatile String name;









    Project() {




    }









    public String getKey() {




        return this.key;




    }









    public String getName() {




        return this.name;




    }









}






The repository used to access this entity looks like:






public interface ProjectRepository extends JpaRepository&lt;Project, String&gt; {









    List&lt;Project&gt; findAllOrderByKeyAsc();









}






When the application starts up, you&amp;apos;ll end up with an exception that says:






Caused by: org.springframework.data.mapping.PropertyReferenceException: No property asc found for type java.lang.String




	at org.springframework.data.mapping.PropertyPath.&lt;init&gt;(PropertyPath.java:75)




	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:327)




	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:307)




	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:330)




	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:353)




	at org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:307)




	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:271)




	at org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:245)




	at org.springframework.data.repository.query.parser.Part.&lt;init&gt;(Part.java:72)




	at org.springframework.data.repository.query.parser.PartTree$OrPart.&lt;init&gt;(PartTree.java:188)




	at org.springframework.data.repository.query.parser.PartTree$Predicate.buildTree(PartTree.java:277)




	at org.springframework.data.repository.query.parser.PartTree$Predicate.&lt;init&gt;(PartTree.java:257)




	at org.springframework.data.repository.query.parser.PartTree.&lt;init&gt;(PartTree.java:71)




	at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.&lt;init&gt;(PartTreeJpaQuery.java:57)




	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:90)




	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:162)




	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:68)




	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.&lt;init&gt;(RepositoryFactorySupport.java:290)




	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:158)




	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.getObject(RepositoryFactoryBeanSupport.java:162)




	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.getObject(RepositoryFactoryBeanSupport.java:44)




	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:144)






This is obviously an error, although I don&amp;apos;t have enough of a grasp of the parsing logic to understand where it might be.  A note is that if I use a findAll(new Sort("key")), it works fine.  So I&amp;apos;ve got a work around, but I&amp;apos;d like to encapsulate the ordering in a specific method on the repository.
I&amp;apos;m free to talk through the issue and try snapshots if needed.