ORC MemoryManager thread checks are fatal, should WARN 
The MemoryManager is tied to a WriterOptions on create, which can occur in a different thread from the writer calls.
This is unexpected, but safe and needs a warning not a fatal.



  /**

   * Light weight thread-safety check for multi-threaded access patterns

   */

  private void checkOwner() {

    Preconditions.checkArgument(ownerLock.isHeldByCurrentThread(),

        "Owner thread expected %s, got %s",

        ownerLock.getOwner(),

        Thread.currentThread());

  }



