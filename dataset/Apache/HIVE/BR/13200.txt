Aggregation functions returning empty rows on partitioned columns
Running aggregation functions like MAX, MIN, DISTINCT against partitioned columns will return empty rows if table has property: &amp;apos;skip.header.line.count&amp;apos;=&amp;apos;1&amp;apos;
Reproduce:

DROP TABLE IF EXISTS test;



CREATE TABLE test (a int) 

PARTITIONED BY (b int) 

ROW FORMAT DELIMITED FIELDS TERMINATED BY &amp;apos;|&amp;apos; 

TBLPROPERTIES(&amp;apos;skip.header.line.count&amp;apos;=&amp;apos;1&amp;apos;);



INSERT OVERWRITE TABLE test PARTITION (b = 1) VALUES (1), (2), (3), (4);

INSERT OVERWRITE TABLE test PARTITION (b = 2) VALUES (1), (2), (3), (4);



SELECT * FROM test;



SELECT DISTINCT b FROM test;

SELECT MAX(b) FROM test;

SELECT DISTINCT a FROM test;



The output:

0: jdbc:hive2://localhost:10000/default&gt; SELECT * FROM test;

+---------+---------+--+

| test.a  | test.b  |

+---------+---------+--+

| 2       | 1       |

| 3       | 1       |

| 4       | 1       |

| 2       | 2       |

| 3       | 2       |

| 4       | 2       |

+---------+---------+--+

6 rows selected (0.631 seconds)



0: jdbc:hive2://localhost:10000/default&gt; SELECT DISTINCT b FROM test;

+----+--+

| b  |

+----+--+

+----+--+

No rows selected (47.229 seconds)



0: jdbc:hive2://localhost:10000/default&gt; SELECT MAX(b) FROM test;

+-------+--+

|  _c0  |

+-------+--+

| NULL  |

+-------+--+

1 row selected (49.508 seconds)



0: jdbc:hive2://localhost:10000/default&gt; SELECT DISTINCT a FROM test;

+----+--+

| a  |

+----+--+

| 2  |

| 3  |

| 4  |

+----+--+

3 rows selected (46.859 seconds)


