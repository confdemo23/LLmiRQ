LazyBinaryObjectInspector.getPrimitiveJavaObject copies beyond length of underlying BytesWritable
LazyBinaryObjectInspector.getPrimitiveJavaObject copies the full capacity of the LazyBinary&amp;apos;s underlying BytesWritable object, which can be greater than the size of the actual contents. 
This leads to additional characters at the end of the ByteArrayRef returned. When the LazyBinary object gets re-used, there can be remnants of the later portion of previous entry. 
This was not seen while reading through hive queries, which I think is because a copy elsewhere seems to create LazyBinary with length == capacity. (probably LazyBinary copy constructor). This was seen when MR or pig used Hcatalog to read the data.