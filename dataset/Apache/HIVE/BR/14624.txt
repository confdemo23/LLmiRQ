LLAP: Use FQDN when submitting work to LLAP 



llap-client/src/java/org/apache/hadoop/hive/llap/registry/impl/LlapFixedRegistryImpl.java:                + socketAddress.getHostName());

llap-client/src/java/org/apache/hadoop/hive/llap/registry/impl/LlapFixedRegistryImpl.java:            host = socketAddress.getHostName();

llap-common/src/java/org/apache/hadoop/hive/llap/metrics/MetricsUtils.java:  public static String getHostName() {

llap-common/src/java/org/apache/hadoop/hive/llap/metrics/MetricsUtils.java:      return InetAddress.getLocalHost().getHostName();

llap-ext-client/src/java/org/apache/hadoop/hive/llap/LlapBaseInputFormat.java:    String name = address.getHostName();

llap-ext-client/src/java/org/apache/hadoop/hive/llap/LlapBaseInputFormat.java:    builder.setAmHost(address.getHostName());

llap-server/src/java/org/apache/hadoop/hive/llap/daemon/impl/AMReporter.java:    nodeId = LlapNodeId.getInstance(localAddress.get().getHostName(), localAddress.get().getPort());

llap-server/src/java/org/apache/hadoop/hive/llap/daemon/impl/ContainerRunnerImpl.java:        localAddress.get().getHostName(), vertex.getDagName(), qIdProto.getDagIndex(),

llap-server/src/java/org/apache/hadoop/hive/llap/daemon/impl/ContainerRunnerImpl.java:          new ExecutionContextImpl(localAddress.get().getHostName()), env,

llap-server/src/java/org/apache/hadoop/hive/llap/daemon/impl/LlapDaemon.java:    String hostName = MetricsUtils.getHostName();

llap-server/src/java/org/apache/hadoop/hive/llap/daemon/impl/LlapProtocolServerImpl.java:        .setBindAddress(addr.getHostName())

llap-server/src/java/org/apache/hadoop/hive/llap/daemon/impl/TaskRunnerCallable.java:          request.getContainerIdString(), executionContext.getHostName(), vertex.getDagName(),

llap-server/src/java/org/apache/hadoop/hive/llap/io/api/impl/LlapIoImpl.java:    String displayName = "LlapDaemonCacheMetrics-" + MetricsUtils.getHostName();

llap-server/src/java/org/apache/hadoop/hive/llap/io/api/impl/LlapIoImpl.java:    displayName = "LlapDaemonIOMetrics-" + MetricsUtils.getHostName();

llap-server/src/test/org/apache/hadoop/hive/llap/daemon/impl/TestLlapDaemonProtocolServerImpl.java:          new LlapProtocolClientImpl(new Configuration(), serverAddr.getHostName(),

llap-tez/src/java/org/apache/hadoop/hive/llap/tezplugins/LlapTaskCommunicator.java:    builder.setAmHost(getAddress().getHostName());

llap-tez/src/java/org/apache/hadoop/hive/llap/tezplugins/LlapTaskSchedulerService.java:      String displayName = "LlapTaskSchedulerMetrics-" + MetricsUtils.getHostName();



In systems where the hostnames do not match FQDN, calling the getCanonicalHostName() will allow for resolution of the hostname when accessing from a different base domain.