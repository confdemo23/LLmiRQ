CXFRS client gets "Response timeout" exception when used with Camel transport
When a CXFRS client is used with Camel transport:



  &lt;cxf:rsClient id="rsClient" address="camel://direct:cxf.in" ...&gt;



it throws the following exception waiting for a response from the target REST server:



javax.ws.rs.ProcessingException: Response timeout

    at org.apache.cxf.jaxrs.client.AbstractClient.waitForResponseCode(AbstractClient.java:617)

    at org.apache.cxf.jaxrs.client.AbstractClient.checkClientException(AbstractClient.java:598)

    at org.apache.cxf.jaxrs.client.AbstractClient.preProcessResult(AbstractClient.java:580)

    at org.apache.cxf.jaxrs.client.WebClient.doResponse(WebClient.java:1098)

    at org.apache.cxf.jaxrs.client.WebClient.doChainedInvocation(WebClient.java:1035)

    at org.apache.cxf.jaxrs.client.WebClient.doInvoke(WebClient.java:892)

    at org.apache.cxf.jaxrs.client.WebClient.doInvoke(WebClient.java:863)

    at org.apache.cxf.jaxrs.client.WebClient.invoke(WebClient.java:329)

    at org.apache.camel.component.cxf.jaxrs.CxfRsProducer.invokeHttpClient(CxfRsProducer.java:210)

    at org.apache.camel.component.cxf.jaxrs.CxfRsProducer.process(CxfRsProducer.java:89)

    [...]



unless you explicitly remap the following header:



    &lt;setHeader headerName="org.apache.cxf.message.Message.RESPONSE_CODE"&gt;

        &lt;simple&gt;${headers.CamelHttpResponseCode}&lt;/simple&gt;

    &lt;/setHeader&gt;


