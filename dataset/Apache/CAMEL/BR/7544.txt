XML DSL with customId attribute cannot be read by Camel
The XSD allows to specify customId="true" id="foo" in the route elements. But when reading the route using spring you get a parse error in spring.



Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name &amp;apos;fromFile&amp;apos;: Error setting property values; nested exception is org.springframework.beans.NotWritablePropertyException: Invalid property &amp;apos;customId&amp;apos; of bean class [org.apache.camel.spring.CamelEndpointFactoryBean]: Bean property &amp;apos;customId&amp;apos; is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?

	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1453)

	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1158)

	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)

	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:458)

	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:296)

	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:223)

	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:293)

	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:194)

	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:610)

	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:932)

	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:479)

	at org.springframework.context.support.FileSystemXmlApplicationContext.&lt;init&gt;(FileSystemXmlApplicationContext.java:140)

	at org.springframework.context.support.FileSystemXmlApplicationContext.&lt;init&gt;(FileSystemXmlApplicationContext.java:94)

	at org.apache.camel.spring.Main.createDefaultApplicationContext(Main.java:176)

	at org.apache.camel.spring.Main.doStart(Main.java:140)

	at org.apache.camel.support.ServiceSupport.start(ServiceSupport.java:61)

	at org.apache.camel.main.MainSupport.run(MainSupport.java:148)

	at org.apache.camel.main.MainSupport.run(MainSupport.java:352)

	at org.apache.camel.spring.Main.main(Main.java:73)

	... 6 more

Caused by: org.springframework.beans.NotWritablePropertyException: Invalid property &amp;apos;customId&amp;apos; of bean class [org.apache.camel.spring.CamelEndpointFactoryBean]: Bean property &amp;apos;customId&amp;apos; is not writable or has an invalid setter method. Does the parameter type of the setter match the return type of the getter?

	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:1043)

	at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:903)

	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:75)

	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:57)

	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1450)

	... 24 more

[ERROR] *************************************


