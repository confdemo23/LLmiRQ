Double input without output produce exception
Turn trace on.
Run this route:
		from("timer://kickoff_1?period=10000&amp;delay=1");
As expected there is output from Trace Interceptor every 10 sec.
Now run this route:
		from("timer://kickoff_1?period=10000&amp;delay=1").
		from("timer://kickoff_2?period=10000&amp;delay=2");
You will get exception:
2008-09-22 06:03:01,871 [d=10000&amp;delay=2] INFO  TraceInterceptor               - ID-ubuntu/50540-1222063381751/2-1 -&gt; interceptor1 Interceptor[Delegate(null)] InOnly Properties:
{org.apache.camel.timer.name=kickoff_2, org.apache.camel.timer.firedTime=Mon Sep 22 06:03:01 GMT 2008, org.apache.camel.timer.period=10000}
 Headers:
{firedTime=Mon Sep 22 06:03:01 GMT 2008}
 BodyType:null Body:Message: null
2008-09-22 06:03:01,872 [d=10000&amp;delay=2] ERROR DeadLetterChannel              - Failed delivery for exchangeId: ID-ubuntu/50540-1222063381751/0-0. On delivery attempt: 0 caught: java.lang.NullPointerException
java.lang.NullPointerException
	at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:69)
	at org.apache.camel.util.AsyncProcessorHelper.process(AsyncProcessorHelper.java:41)
	at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:50)
	at org.apache.camel.processor.DelegateProcessor.processNext(DelegateProcessor.java:50)
	at org.apache.camel.processor.DelegateProcessor.proceed(DelegateProcessor.java:79)
	at org.apache.camel.processor.interceptor.TraceInterceptor.process(TraceInterceptor.java:67)
	at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:69)
	at org.apache.camel.processor.DeadLetterChannel.process(DeadLetterChannel.java:174)
	at org.apache.camel.processor.DeadLetterChannel.process(DeadLetterChannel.java:96)
	at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:57)
	at org.apache.camel.util.AsyncProcessorHelper.process(AsyncProcessorHelper.java:41)
	at org.apache.camel.management.InstrumentationProcessor.process(InstrumentationProcessor.java:50)
	at org.apache.camel.processor.DelegateProcessor.processNext(DelegateProcessor.java:50)
	at org.apache.camel.processor.DelegateProcessor.proceed(DelegateProcessor.java:79)
	at org.apache.camel.processor.interceptor.TraceInterceptor.process(TraceInterceptor.java:67)
	at org.apache.camel.impl.converter.AsyncProcessorTypeConverter$ProcessorToAsyncProcessorBridge.process(AsyncProcessorTypeConverter.java:43)
	at org.apache.camel.processor.UnitOfWorkProcessor.process(UnitOfWorkProcessor.java:39)
	at org.apache.camel.util.AsyncProcessorHelper.process(AsyncProcessorHelper.java:41)
	at org.apache.camel.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:66)
	at org.apache.camel.component.timer.TimerConsumer.sendTimerExchange(TimerConsumer.java:98)
	at org.apache.camel.component.timer.TimerConsumer$1.run(TimerConsumer.java:49)
	at java.util.TimerThread.mainLoop(Timer.java:512)
	at java.util.TimerThread.run(Timer.java:462)
Why single input works fine and two produce an exception?