Camel HTTP binding incorrectly filters out the headers
Camel does not filter out internal headers when creating HTTP response. The internal headers like "CamelBeanMultiParameterArray" occur in HTTP response.
The reason is that in the following piece of code (from DefaultHttpBinding.java, around line 157):

        for (String key : message.getHeaders().keySet()) {
            String value = message.getHeader(key, String.class);
            if (headerFilterStrategy != null
                    &amp;&amp; !headerFilterStrategy.applyFilterToCamelHeaders(key, value, exchange)) {
                response.setHeader(key, value);
            }
        }


the "key" returned is lowercase, even in case the real header is "CamelBeanMultiParameterArray" (because CaseInsensitiveMap is used, which turns all keys to lowercase). Since pattern match in DefaultHeaderFilterStrategy is case-sensitive, the header is not filter out when filling the response headers.
The suggested solution is to make pattern case-insensitive.