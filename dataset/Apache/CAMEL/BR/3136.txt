cxfbean creates another instance of the class instead of directly using the referenced bean
... this makes it impossible to inject properties to the @WebService class
&lt;camelContext&gt;
        &lt;route&gt;
            &lt;from uri="...." /&gt;
            &lt;to uri="cxfbean:handler" /&gt;
        &lt;/route&gt;
&lt;/camelContext&gt;
&lt;bean id="handler" class="a.b.c.Handler"&gt;
        &lt;property name="prop1" value="5" /&gt;
&lt;/bean&gt;
when "handler" is created by Spring, its &amp;apos;prop1&amp;apos; is set to &amp;apos;5&amp;apos;
when the cxfbean:handler is triggered, the &amp;apos;prop1&amp;apos; is null, because CXF created another instance of Handler instead of using the one created by Spring