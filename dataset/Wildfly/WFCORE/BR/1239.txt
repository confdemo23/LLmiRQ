Embedded API is confusing re process types
The embedded API has gotten a bit confusing with respect to names and types, primarily the use of the word "server" in a number of placing where the relevant thing could either be an embedded standalone server or an embedded host controller. 
Originally I saw this module as just being an internal implementation detail for the CLI, used by the offline CLI feature, but now we&amp;apos;ve opened it up for use by things like Arquillian&amp;apos;s WildFly integration, so I want to clean this API up a bit.
I see two minor breaking changes needed:
1) The HostController interface has an odd "public HostController getHostController()" method that logically would only return &amp;apos;this&amp;apos;. I could keep this but it&amp;apos;s not needed and I&amp;apos;d rather get rid of it.
2) The HostController interface&amp;apos;s start() method does not throw a checked exception, while the equivalent start() on StandaloneServer does. To do anything coherent I need to unify the exception handling. HostController is extremely unlikely to be used outside wf core, while StandaloneServer is used, and removing a checked exception from StandaloneServer would be a breaking change or any user that catches it, so instead I will add the exception to HostController.start().