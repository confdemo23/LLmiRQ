Future returned from Bootstrap.startup(...0) and ServerService.getValue() may never complete
A test I&amp;apos;m writing that uses the CLI embed-server command hung forever:






"main" #1 prio=5 os_prio=31 tid=0x00007fd461007800 nid=0x1303 in Object.wait() [0x0000000102c67000]




   java.lang.Thread.State: WAITING (on object monitor)




	at java.lang.Object.wait(Native Method)




	at java.lang.Object.wait(Object.java:502)




	at org.jboss.threads.AsyncFutureTask.await(AsyncFutureTask.java:192)




	- locked &lt;0x00000007b8d69eb0&gt; (a org.jboss.as.server.FutureServiceContainer)




	at org.jboss.threads.AsyncFutureTask.get(AsyncFutureTask.java:266)




	- locked &lt;0x00000007b8d69eb0&gt; (a org.jboss.as.server.FutureServiceContainer)




	at org.wildfly.core.embedded.EmbeddedStandAloneServerFactory$StandaloneServerImpl.start(EmbeddedStandAloneServerFactory.java:306)






The boot.log showed boot did not complete:











2015-08-23 12:04:37,572 ERROR [org.jboss.as.controller.management-operation] (Controller Boot Thread) WFLYCTL0013: Operation ("internal-model-validation") failed - address: ([("subsystem" =&gt; "xts")]) - failure description: "WFLYCTL0172: host is required"




2015-08-23 12:04:37,573 FATAL [org.jboss.as.server] (Controller Boot Thread) WFLYSRV0056: Server boot has failed in an unrecoverable manner; exiting. See previous messages for details.






The problem is the failure never results in operationFailed(...) being called on the AsyncFutureTask returned by ServerService.getValue().
This probably only affects the embedded CLI and WildFly Swarm; other code does not block on this future.
I would not be surprised if a similar problem exists with the Host Controller and the CLI&amp;apos;s embed-host-controller command.