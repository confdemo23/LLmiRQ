Inconsistent read-resource results with host scoped roles
Setting up host scoped roles as follows https://gist.github.com/heiko-braun/0dc810ed04db8739defd there are inconsistent results in the filtering. When using a role which only selects the master there is no access-control response header showing the filtered resources, and the slave wrongly appears in the results:






[domain@localhost:9990 /] /host=*:read-resource{roles=master-monitor}




{




    "outcome" =&gt; "success",




    "result" =&gt; [




        {




            "address" =&gt; [("host" =&gt; "master")],




            "outcome" =&gt; "success",




            "result" =&gt; {




                "directory-grouping" =&gt; "by-server",




                "domain-controller" =&gt; {"local" =&gt; {}},




                "management-major-version" =&gt; 4,




                "management-micro-version" =&gt; 0,




                "management-minor-version" =&gt; 0,




                "master" =&gt; true,




                "name" =&gt; "master",




                "namespaces" =&gt; [],




                "organization" =&gt; undefined,




                "product-name" =&gt; "WildFly Core",




                "product-version" =&gt; "2.0.0.CR6-SNAPSHOT",




                "release-codename" =&gt; "Kenny",




                "release-version" =&gt; "2.0.0.CR6-SNAPSHOT",




                "schema-locations" =&gt; [],




                "core-service" =&gt; {




                    "host-environment" =&gt; undefined,




                    "platform-mbean" =&gt; undefined,




                    "management" =&gt; undefined,




                    "discovery-options" =&gt; undefined,




                    "ignored-resources" =&gt; undefined,




                    "patching" =&gt; undefined,




                    "module-loading" =&gt; undefined




                },




                "extension" =&gt; {"org.jboss.as.jmx" =&gt; undefined},




                "interface" =&gt; {




                    "management" =&gt; undefined,




                    "public" =&gt; undefined,




                    "unsecure" =&gt; undefined




                },




                "jvm" =&gt; {"default" =&gt; undefined},




                "path" =&gt; undefined,




                "server" =&gt; {




                    "server-one" =&gt; undefined,




                    "server-two" =&gt; undefined,




                    "server-three" =&gt; undefined




                },




                "server-config" =&gt; {




                    "server-one" =&gt; undefined,




                    "server-two" =&gt; undefined,




                    "server-three" =&gt; undefined




                },




                "socket-binding-group" =&gt; undefined,




                "subsystem" =&gt; {"jmx" =&gt; undefined},




                "system-property" =&gt; undefined




            }




        },




        {




            "address" =&gt; [("host" =&gt; "localhost")],




            "outcome" =&gt; "success",




            "result" =&gt; undefined




        }




    ]




}






When using a role that only selects the slave we get a proper access-control header






[domain@localhost:9990 /] /host=*:read-resource{roles=slave-maintainer}




{




    "outcome" =&gt; "success",




    "result" =&gt; [{




        "address" =&gt; [("host" =&gt; "localhost")],




        "outcome" =&gt; "success",




        "result" =&gt; undefined




    }],




    "response-headers" =&gt; {"access-control" =&gt; [{




        "absolute-address" =&gt; [],




        "relative-address" =&gt; [],




        "filtered-children-types" =&gt; ["host"]




    }]}






The same output on master with WFCORE-994 applied:






[domain@localhost:9990 /] /host=*:read-resource{roles=slave-maintainer}




{




    "outcome" =&gt; "success",




    "result" =&gt; [{




        "address" =&gt; [("host" =&gt; "slave")],




        "outcome" =&gt; "success",




        "result" =&gt; {




            "directory-grouping" =&gt; "by-server",




            "domain-controller" =&gt; {"remote" =&gt; {




                "protocol" =&gt; undefined,




                "port" =&gt; undefined,




                "host" =&gt; undefined,




                "username" =&gt; undefined,




                "ignore-unused-configuration" =&gt; undefined,




                "admin-only-policy" =&gt; undefined,




                "security-realm" =&gt; "ManagementRealm"




            }},




            "management-major-version" =&gt; 4,




            "management-micro-version" =&gt; 0,




            "management-minor-version" =&gt; 0,




            "master" =&gt; false,




            "name" =&gt; "slave",




            "namespaces" =&gt; [],




            "organization" =&gt; undefined,




            "product-name" =&gt; undefined,




            "product-version" =&gt; undefined,




            "release-codename" =&gt; "Kenny",




            "release-version" =&gt; "2.0.0.CR6-SNAPSHOT",




            "schema-locations" =&gt; [],




            "core-service" =&gt; {




                "host-environment" =&gt; undefined,




                "platform-mbean" =&gt; undefined,




                "management" =&gt; undefined,




                "discovery-options" =&gt; undefined,




                "ignored-resources" =&gt; undefined,




                "patching" =&gt; undefined,




                "module-loading" =&gt; undefined




            },




            "extension" =&gt; {"org.jboss.as.jmx" =&gt; undefined},




            "interface" =&gt; {




                "management" =&gt; undefined,




                "public" =&gt; undefined,




                "unsecure" =&gt; undefined




            },




            "jvm" =&gt; {"default" =&gt; undefined},




            "path" =&gt; undefined,




            "server" =&gt; {




                "server-one" =&gt; undefined,




                "server-two" =&gt; undefined




            },




            "server-config" =&gt; {




                "server-one" =&gt; undefined,




                "server-two" =&gt; undefined




            },




            "socket-binding-group" =&gt; undefined,




            "subsystem" =&gt; {"jmx" =&gt; undefined},




            "system-property" =&gt; undefined




        }




    }],




    "response-headers" =&gt; {"access-control" =&gt; [{




        "absolute-address" =&gt; [],




        "relative-address" =&gt; [],




        "filtered-children-types" =&gt; ["host"]




    }]}




}






master-monitor should behave the same as slave-maintainer.