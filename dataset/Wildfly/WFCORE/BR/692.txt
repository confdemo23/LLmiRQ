read-children-names(include-aliases=true) can return phantom results
If another resource exists with the same key as the target address of a resource alias, the read-children-names(include-aliases=true) operation can return phantom results.
Here&amp;apos;s an example:
I have a alias registered that translates:






/subsystem=infinispan/cache-container=*/local-cache=*/file-store=FILE_STORE






to:






/subsystem=infinispan/cache-container=*/local-cache=*/store=file






Additionally, I have a resource named:






/subsystem=infinispan/cache-container=*/local-cache=*/store=none






If I create a cache that uses store=none, the results of a read-children-names(child-type=file-store, include-aliases=true) operation includes the FILE_STORE resource, even though the target resource (i.e. file=store) does not exist.
This additionally causes the /subsystem=infinispan:read-resource(include-aliases=true, recursive=true) operation to fail.