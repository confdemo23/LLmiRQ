HostProcessReloadHandler does not reset the HostRunningModeControl&apos;s restartMode
The ReloadContext created by HostProcessReloadHandler sets the HostRunningModeControl&amp;apos;s restartMode but then it never gets restored to the default value. The doReload() method of the ReloadContext should restore it. This ensures the ServerInventoryService.stop() only uses the value set by HostProcessReloadHandler once, for that one reload.
A concern here is that ServerInventoryService only goes into its "shutdownServers" logic if the restartMode == RestartMode.SERVERS. Which, due to this bug, it will be following any HC reload. But if we restore the default value of restartMode, that is null, and null != RestartMode.SERVERS. So the ""shutdownServers" logic will no longer kick in. But should it? Should the default value of restartMode be "null"? Or should it be RestartMode.SERVERS? If we change the default from null, then the behavior when no reload has happened will change.
Basically we need to decide whether the "shutdownServers" logic should happen by default.