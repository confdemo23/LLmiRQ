Unable to overlay resource in subunit/zip/jar file
It is possible to overlay resource directly in deployed jar, however, same resource can not be properly overlayed if said jar is deployed as part of ear ( possibly war as well ).
Example:
jar (xxx.jar):
/org/test/ejb/EJBImpl.class
/org/test/ejb/resourceToOverlya.txt
ear(yyy.ear) - war seems to be the subject of this as well
/xxx.jar
Overlay #1( over jar)
overlay target: xxx.jar/org/test/ejb/resourceToOverlya.txt
Result: proper deployment(EJB is deployed), resource has been overlayed
Overlay #2( over jar inside ear )
overlay target: org/test/ejb/resourceToOverlya.txt
Result: bad deployment, no EJB deployed, overlay target has been overlayed
Reason of such outcome is that VFS.exists() does not recognize JavaZipFileSystem$ZipNode/Entry as zipped archive and does not dive into children.
So what happens in here is as follows. When EAR is deployed OverlayProcessor kicks in at:
https://github.com/wildfly/wildfly-core/blob/master/server/src/main/java/org/jboss/as/server/deployment/DeploymentOverlayDeploymentUnitProcessor.java#L107
For this example ear/jar pair, first pair of values:
mountPoint: /content/yyy.ear/xxx.jar/org/test/ejb/resourceToOverlya.txt
parent:  /content/yyy.ear/xxx.jar/org/test/ejb
Outcome of exists() call == false, should be true.
this will iterate up to parent == /content/yyy.ear/xxx.jar
At this point, &amp;apos;createParents&amp;apos; contain some entries and 
https://github.com/wildfly/wildfly-core/blob/master/server/src/main/java/org/jboss/as/server/deployment/DeploymentOverlayDeploymentUnitProcessor.java#L114
will create tmp/virtual mounts for:

/content/yyy.ear/xxx.jar/org/test/ejb
/content/yyy.ear/xxx.jar/org/test
/content/yyy.ear/xxx.jar/org

What it will essentially do is create overlay for whole &amp;apos;org&amp;apos; package! The VirtualFile.getChildren() will return tmp mounted VirtualFile for &amp;apos;org&amp;apos; entry: https://github.com/jbossas/jboss-vfs/blob/master/src/main/java/org/jboss/vfs/VirtualFile.java#L335
There is part of code which should remove &amp;apos;submount&amp;apos; if there is directory entry: https://github.com/jbossas/jboss-vfs/blob/master/src/main/java/org/jboss/vfs/VirtualFile.java#L345 however ( if I remember correctly) &amp;apos;org&amp;apos; tmp mount ends up twice in &amp;apos;submounts&amp;apos;
When VirtualFile.getChildren is called for &amp;apos;this&amp;apos; == /content/yyy.ear/xxx.jar ( in this case it is properly removed) and when &amp;apos;this&amp;apos; ==  /content/yyy.ear/xxx.jar/org - in which case it derails getChildren and diverts into tmp mount.
Now about https://github.com/jbossas/jboss-vfs/blob/master/src/main/java/org/jboss/vfs/spi/JavaZipFileSystem.java#L355
What happens here, for ear deployment - it dives recursively into &amp;apos;find&amp;apos; until &amp;apos;target&amp;apos; is equal to &amp;apos;/content/yyy.ear/xxx.jar&amp;apos; at this target.getParent() == &amp;apos;mountPoint&amp;apos; == &amp;apos;/content/yyy.ear&amp;apos;.
At this point &amp;apos;find&amp;apos; will get result ZipNode == /content/yyy.ear and fetch child &amp;apos;xxx.jar&amp;apos; and pop back up one notch in the call stack. However the &amp;apos;xxx.jar&amp;apos; entry does not have any children, hence there is no way to fetch next child in line &amp;apos;org&amp;apos;.