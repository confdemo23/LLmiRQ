Mail Service should be restarted after server is added/modifed
I&amp;apos;m finding that the mail service is not honoring the association with a specific outbound socket binding.
Configuration of Mail Session and Socket Binding:






[standalone@localhost:9990 /] /subsystem=mail/mail-session=java\:jboss\/mail\/ALR/server=smtp:read-resource




{




    "outcome" =&gt; "success",




    "result" =&gt; {




        "outbound-socket-binding-ref" =&gt; "mail-smtp-25000",




        "password" =&gt; undefined,




        "ssl" =&gt; false,




        "tls" =&gt; false,




        "username" =&gt; undefined




    }




}




[standalone@localhost:9990 /] /socket-binding-group=standard-sockets/remote-destination-outbound-socket-binding=mail-smtp-25000:read-resource(recursive="true")




{




    "outcome" =&gt; "success",




    "result" =&gt; {




        "fixed-source-port" =&gt; false,




        "host" =&gt; "localhost",




        "port" =&gt; 25000,




        "source-interface" =&gt; undefined,




        "source-port" =&gt; undefined




    }




}






Code to inject the Mail Session:






@Resource(lookup = "java:jboss/mail/ALR")




    private Session mailSession;






This injection succeeds, as I&amp;apos;d expect based on the tests: 
https://github.com/wildfly/wildfly/blob/master/testsuite/integration/basic/src/test/java/org/jboss/as/test/integration/mail/annotation/StatelessMail.java#L46
However, when using this to send mail, getting the default port of "25", not "25000" as I&amp;apos;ve specified in the config:






[0m[0m23:54:17,102 INFO  [stdout] (default task-1) DEBUG: getProvider() returning javax.mail.Provider[TRANSPORT,smtp,com.sun.mail.smtp.SMTPTransport,Oracle]




[0m[0m23:54:17,103 INFO  [stdout] (default task-1) DEBUG SMTP: useEhlo true, useAuth false




[0m[0m23:54:17,103 INFO  [stdout] (default task-1) DEBUG SMTP: trying to connect to host "localhost", port 25, isSSL false






I don&amp;apos;t see anything in the testsuite attempting to broker mail through a non-default configuration.