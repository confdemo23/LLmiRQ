Clustering tests intermittently fail mainly because they do not clean their deployments properly
Almost all clustering tests from the testsuite deploys what they need to perform the test, but almost none of those tests do undeploy of their deployments. Then, if the tests are run in an unexpected order (different JVM) or if some of them fail their deployments keeps at servers and often cause a failure of subsequent tests.
For example RemoteStatelessFailoverTestCase(ejb3) stops CONTAINER-1 in the middle of a testLoadBalance method and never tries to undeploy DEPLOYMENT_1 from it. So if it hits any failure in the subsequent this.establishView(listener, NODES[1]); the CONTAINER-1 will never be started up again by RemoteStatelessFailoverTestCase and hence will never be cleaned up by Arquillian which normally undeploys all deployments from the running custom containers on after-class event. And then StatefulFailoverTestCase fails with 






org.jboss.as.test.clustering.ViewChangeListenerServlet threw exception:




java.lang.InterruptedException: Cluster &amp;apos;ejb&amp;apos; failed to establish view [node-1/ejb] within 15000 ms.  Current view is: [node-0/ejb, node-1/ejb]






Another frequent issue with clustering tests is that they blindly deploy the same deployments manytimes which leads to duplicate deploy failures.