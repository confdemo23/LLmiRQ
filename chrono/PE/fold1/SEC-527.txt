Serialization Error in ACL cacheing (new acls packages)
A java.io.NotSerializableException is thrown when the ehCache which backs EhCacheBasedAclCache decides that it needs to overflow to disk.
As a workaround I have configured the ehCache to NOT overflow to disk by setting setOverflowToDisk(boolean) to false in the spring config of the EhCacheFactoryBean.  This hides the problem and stops my logs filling up with not serializable exceptions, but shouldn&amp;apos;t be considered a fix.
A snippet of the exception is shown below.
2007-08-14 13:58:55,458 ERROR [net.sf.ehcache.store.DiskStore] - &lt;aclCacheCache: Failed to write element to disk &amp;apos;org.acegisecurity.acls.objectidentity.ObjectIdentityImpl[Java Type: class com.my.code.MyAclProtectedObject; Identifier: 11102]&amp;apos;. Initial cause was org.acegisecurity.acls.domain.AclAuthorizationStrategyImpl&gt;
java.io.NotSerializableException: org.acegisecurity.acls.domain.AclAuthorizationStrategyImpl
The exception occurs because AclImpl (the class of the object being cached) implements Serializable, but not all of it&amp;apos;s member variables do, and the member variables which do not implement Serializable are not declared as transient.
Member var                                                                      Serializable   
==================
Acl parentAcl                                                                    yes
AclAuthorizationStrategy aclAuthorizationStrategy           no
AuditLogger auditLogger                                                  no
List aces                                                                           yes  (but contents AccessControlEntry are not)
ObjectIdentity objectIdentity                                             yes
Serializable id                                                                    yes
Sid owner                                                                          no
Sid[] loadedSids                                                                no
boolean entriesInheriting                                                  yes
My thoughts are that the classes of serveral of these member variables (e.g. SID and AccessControlEntry) should implement serializable, but other such as AuditLogger and AclAuthorizationStratagy probably should not, and as such either be removed from the AclImpl class, or declared as transient.  If declared as transient the EhCacheBasedAclCache would need to inject these properties back into AclImpls when they are retrieved from the cache, is this always possible i.e. can we always guarantee that there will be only one AclAuthorizationStrategy being used?
I&amp;apos;d be happy to help anyone resolve this problem, but will be unavailable from mid September to end October 2007.