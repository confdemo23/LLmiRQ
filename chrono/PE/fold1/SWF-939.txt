Locating of flow definitions broken when base-path not being used
A previously functional SWF 2.0.3 based application has stopped working after upgrading to SWF 2.0.4
Flow definitions are no longer being found due to the change re: using flow definition path as the flow id, rather than the flow definition file name.
	&lt;webflow:flow-executor id="flowExecutor" flow-registry="flowRegistry"&gt;
		&lt;webflow:flow-execution-repository max-executions="1" max-execution-snapshots="30" /&gt;
	   	&lt;webflow:flow-execution-listeners&gt;
			&lt;webflow:listener ref="securityFlowExecutionListener" /&gt;
		&lt;/webflow:flow-execution-listeners&gt;
	&lt;/webflow:flow-executor&gt;
	&lt;!-- The registry of executable flow definitions --&gt;
	&lt;webflow:flow-registry id="flowRegistry" flow-builder-services="facesFlowBuilderServices"&gt;
		&lt;webflow:flow-location-pattern value="/WEB-INF/flow/*/.xml"/&gt;
	&lt;/webflow:flow-registry&gt;
	&lt;!-- Configures the Spring Web Flow JSF integration --&gt;
	&lt;faces:flow-builder-services id="facesFlowBuilderServices" /&gt;
The flow definition located at /WEB-INF/flow/login/login.xml gets stored in the flowDefinitionRegistry
with an id of "login" in both SWF 2.0.3 and 2.0.4.
However, when attempting to request the flow - SWF 2.0.3 looks for "login" in the registry,
where as SWF 2.0.4 looks for "flow/login" and fails to find it.
I believe this is due to a shift in approach to wishing to use the flow definition&amp;apos;s path as the flow id, rather than the flow name.
The piece of code for determining the flow id when a request comes in is DefaultFlowUrlHandler.getFlowId().
SWF 2.0.3 implementation returns "login" as the id -
	public String getFlowId(HttpServletRequest request) {
		String pathInfo = request.getPathInfo();
		if (pathInfo != null) 
{
			return pathInfo.substring(1);
		}
 else 
{
			. . . 
		}
	}
SWF 2.0.4 implementation returns "flow/login" as the id -
	public String getFlowId(HttpServletRequest request) 
{
		return WebUtils.extractFilenameFromUrlPath(urlPathHelper.getLookupPathForRequest(request));
	}

As SWF 2.0.4 is a point release hopefully it shouldn&amp;apos;t be breaking existing applications.