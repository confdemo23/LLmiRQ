CXF component&apos;s CamelDestination gets configured twice
CamelTransportFactory does not need to call
"configurer.configurationBean(destination)" as it has been performed
by CamelDestination..initConfig() in its constructor.  

Index: components/camel-cxf/src/main/java/org/apache/camel/component/cxf/transport/CamelTransportFactory.java
===================================================================
--- components/camel-cxf/src/main/java/org/apache/camel/component/cxf/transport/CamelTransportFactory.java	(revision 675685)
+++ components/camel-cxf/src/main/java/org/apache/camel/component/cxf/transport/CamelTransportFactory.java	(working copy)
@@ -26,7 +26,6 @@
 
 import org.apache.camel.CamelContext;
 import org.apache.cxf.Bus;
-import org.apache.cxf.configuration.Configurer;
 import org.apache.cxf.service.model.EndpointInfo;
 import org.apache.cxf.transport.AbstractTransportFactory;
 import org.apache.cxf.transport.Conduit;
@@ -87,12 +86,7 @@
     }
 
     public Destination getDestination(EndpointInfo endpointInfo) throws IOException {
-        CamelDestination destination = new CamelDestination(camelContext, bus, this, endpointInfo);
-        Configurer configurer = bus.getExtension(Configurer.class);
-        if (null != configurer) {
-            configurer.configureBean(destination);
-        }
-        return destination;
+        return new CamelDestination(camelContext, bus, this, endpointInfo);
     }
 
     public Set&lt;String&gt; getUriPrefixes() {

