Non Transactional RabbitTemplate Uses Container Transactional Channel
When running a RabbitTemplate on a transactional container thread, the container channel is used, even if the RabbitTemplate is not marked transactional.
Consider the case where you wish to publish a message when there&amp;apos;s an error, while rejecting the inbound message. If the container is transactional, the published message is rolled back.
If you publish with a template that is not transactional, the publish should occur on a new channel.






RabbitResourceHolder resourceHolder = (RabbitResourceHolder) TransactionSynchronizationManager




		.getResource(connectionFactory);




if (resourceHolder != null) {




	Channel channel = resourceFactory.getChannel(resourceHolder);




	if (channel != null) {




		return resourceHolder;




	}




}






We should never return the resourceHolder if the resourceFactory.isSynchedLocalTransactionAllowed() is false.