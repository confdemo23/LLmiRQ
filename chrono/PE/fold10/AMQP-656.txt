Unable to refer to the default exchange using @Argument within a @RabbitListener
It seems you are unable to use @Argument annotations that use empty strings to refer to the default exchange.  For example, you should be able to configure a queue to use the default exchange as part of the dead letter config similar to the following:






@RabbitListener(bindings =




        @QueueBinding(




            value = @Queue(




                value = "app.events.myEvent",




                durable = "true",




                exclusive = "false",




                autoDelete = "false",




                arguments = {




                        @Argument(name="x-dead-letter-exchange", value = ""),




                        @Argument(name="x-dead-letter-routing-key", value="app.dlq")




                }),




            exchange = @Exchange(value="amq.topic", durable = "true", type = "topic"),




            key="event.app.myEvent.v1"




        ))






This fails though as spring seems to not send the empty string.  I tried being creative with using things like SPEL that would evaluate to an empty string, but same result.
If I use bean configs I am able to get the configuration I want using something like the following, the issue is just with the annotation based config.






    @Bean




    public Queue appMyEventQueue() {




        return QueueBuilder.durable("app.events.myEvent")




            .withArgument("x-dead-letter-exchange", "")




            .withArgument("x-dead-letter-routing-key", deadLetterQueue().getName())




            .build();




    }





