Missing indexes in associations involving generic types
When an association between documents involves generic types, the type information is not correctly inferred at startup time resulting in missing indexes.
Please, see https://github.com/agustisanchez/SpringDataMongoDBBug, for code samples.
Given:

class Book with index on "ISBN" attribute
super class AbstractProduct with index on "name" attribute
class ProductWrapper holding attribute "content" of generic type "T extends AbstractProduct"

When defining a class Catalog with a list of "wrapped" books:

List&lt;ProductWrapper&lt;Book&gt;&gt; books2 = new ArrayList&lt;&gt;

The index "name" inherited from AbstractProduct is created (book2.content.name) inside "catalog" , but the index defined on the Book class itself (isbn) is not created as Spring Data Mongo is only inferring type infromation from the ProductWrapper class definition (ProductWrapper &lt;T extends AbstractProduct&gt;).
Spring Data MongoDB should be able to infer type information from the list declaration ( List&lt;ProductWrapper&lt;Book&gt;&gt; ), becoming aware that Catalog contains a list of Books, hence indexes defined on Book should be created.
If the wrapper class is defined as ProductWrapper&lt;T&gt;, then no indexes are created at all on Catalog.books2.content.