Cannot communicate with the server if port offset property is set
In Hawkular Metrics, we use the Wildfly Maven Plugin to deploy our app and test its REST interface.
It is configured as follows:






&lt;properties&gt;




  &lt;wildfly-maven-plugin.skip&gt;false&lt;/wildfly-maven-plugin.skip&gt;




  &lt;!-- IMPORTANT: The port must be the port offset + 8080. --&gt;




  &lt;base-uri&gt;127.0.0.1:55977/hawkular/metrics&lt;/base-uri&gt;




  &lt;wildfly.port.offset&gt;47897&lt;/wildfly.port.offset&gt;




  &lt;!-- IMPORTANT: The management port must be the port offset + 9990. --&gt;




  &lt;wildfly.management.port&gt;57887&lt;/wildfly.management.port&gt;




  &lt;wildfly.logging.console.level&gt;ERROR&lt;/wildfly.logging.console.level&gt;




  &lt;wildfly.logging.file.level&gt;ERROR&lt;/wildfly.logging.file.level&gt;




  &lt;terminal-event.timeout&gt;10&lt;/terminal-event.timeout&gt;




&lt;/properties&gt;






and






&lt;plugin&gt;




  &lt;groupId&gt;org.wildfly.plugins&lt;/groupId&gt;




  &lt;artifactId&gt;wildfly-maven-plugin&lt;/artifactId&gt;




  &lt;configuration&gt;




    &lt;skip&gt;${wildfly-maven-plugin.skip}&lt;/skip&gt;




    &lt;port&gt;${wildfly.management.port}&lt;/port&gt;




  &lt;/configuration&gt;




  &lt;executions&gt;




    &lt;execution&gt;




      &lt;id&gt;start-wildfly&lt;/id&gt;




      &lt;phase&gt;pre-integration-test&lt;/phase&gt;




      &lt;goals&gt;




        &lt;goal&gt;start&lt;/goal&gt;




      &lt;/goals&gt;




      &lt;configuration&gt;




        &lt;serverConfig&gt;standalone-test.xml&lt;/serverConfig&gt;




        &lt;javaOpts&gt;




          &lt;javaOpt&gt;-Xms64m&lt;/javaOpt&gt;




          &lt;javaOpt&gt;-Xmx512m&lt;/javaOpt&gt;




          &lt;javaOpt&gt;-Xss256k&lt;/javaOpt&gt;




          &lt;javaOpt&gt;-Djava.net.preferIPv4Stack=true&lt;/javaOpt&gt;




          &lt;javaOpt&gt;-Dsun.rmi.dgc.client.gcInterval=3600000&lt;/javaOpt&gt;




          &lt;javaOpt&gt;-Dsun.rmi.dgc.server.gcInterval=3600000&lt;/javaOpt&gt;




          &lt;javaOpt&gt;-Djboss.socket.binding.port-offset=${wildfly.port.offset}&lt;/javaOpt&gt;




          &lt;javaOpt&gt;-Djboss.server.config.dir=${project.build.directory}/wildfly-configuration&lt;/javaOpt&gt;




          &lt;javaOpt&gt;-Dcassandra.keyspace=${cassandra.keyspace}&lt;/javaOpt&gt;




          &lt;javaOpt&gt;-Dcassandra.resetdb&lt;/javaOpt&gt;




          &lt;javaOpt&gt;-Dhawkular.metrics.waitForService&lt;/javaOpt&gt;




          &lt;javaOpt&gt;-Dhawkular.metrics.use-virtual-clock=true&lt;/javaOpt&gt;




          &lt;javaOpt&gt;-Dhawkular.terminal-event.timeout=${terminal-event.timeout}&lt;/javaOpt&gt;




          &lt;javaOpt&gt;-Dhawkular.metrics.allowed-cors-origins=http://test.hawkular.org,https://secure.hawkular.io&lt;/javaOpt&gt;




          &lt;javaOpt&gt;-Xdebug&lt;/javaOpt&gt;




          &lt;javaOpt&gt;-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8787&lt;/javaOpt&gt;




        &lt;/javaOpts&gt;




      &lt;/configuration&gt;




    &lt;/execution&gt;




    &lt;execution&gt;




      &lt;id&gt;deploy-webapp&lt;/id&gt;




      &lt;phase&gt;pre-integration-test&lt;/phase&gt;




      &lt;goals&gt;




        &lt;goal&gt;deploy-artifact&lt;/goal&gt;




      &lt;/goals&gt;




      &lt;configuration&gt;




        &lt;groupId&gt;${project.groupId}&lt;/groupId&gt;




        &lt;artifactId&gt;hawkular-metrics-api-jaxrs&lt;/artifactId&gt;




        &lt;name&gt;hawkular-metric-rest.war&lt;/name&gt;




      &lt;/configuration&gt;




    &lt;/execution&gt;




    &lt;execution&gt;




      &lt;id&gt;stop-wildfly&lt;/id&gt;




      &lt;phase&gt;post-integration-test&lt;/phase&gt;




      &lt;goals&gt;




        &lt;goal&gt;shutdown&lt;/goal&gt;




      &lt;/goals&gt;




    &lt;/execution&gt;




  &lt;/executions&gt;




&lt;/plugin&gt;






It worked well until we tried to upgrade to 1.1.0.Alpha3. It seems that the changes for WFMP-12 prevent us from setting a port offset.
In the best case (offset is small), the management client can&amp;apos;t communicate with the server. In the worst case (offset is large), the server does not even start because the calculated management port is out of range.