Field-local generics information not honored
In my project, we have an entity called NormalizedProfile, which is a huge collection of generic ListField s. Each listField is a list of Value s plus some metadata. And Value is a (well) single "value" plus some metadata. In our case, atomic "value" is either primitive wrapper, Object or Enum, never a collection (in case it is relevant).
Value&lt;T&gt; gets its generic type from ListField&lt;T&gt; it is enclosed in. Nothing fancy.
In addition to standard java SpringDataMongo config, we customise MappingMongoConverter to stop save and use "_class" field. No polymorphic behaviour is needed in our case, so why not.
Problem is with Object- and Enum- generalized ListField s. After they are saved, they never read as a real object and returned as LHM instead. When I use java.util.List instead of our custom structure, everything works fine.
Please see attached minimal test - j.u.List&lt;Education&gt; testcase succeeds and ListField&lt;Education&gt; fails.