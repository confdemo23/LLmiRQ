Possible memoryleak when convertBodyTo is used in a dynamicRouter
We have implemented a while loop using a dynamicRouter.
The dynamicRouter looks like this:
&lt;dynamicRouter&gt;
  &lt;header&gt;someheadername&lt;/header&gt;
&lt;/dynamicRouter&gt;
where someheadername refers to another route using direct:routename
The route that handles direct:routename looks like this:
&lt;bean ref="someref"/&gt;
&lt;convertBodyTo type="java.lang.String"/&gt;
The someref-bean just puts some data in the body and header and would also be responsible to set the value of someheadername=null to exit the dynamicRouter.
During execution of these routes we see that heapusage increases until OOM if the dynamicRouter does not exit before OOM. The number of instances of DefaultMessage also keeps increasing.
If we remove the &lt;convertBodyTo&gt; from the route we do not get OOM and the number of instances of DefaultMessage is stable and low.
The same also happens if we replace &lt;convertBodyTo&gt; with a &lt;transform&gt;.