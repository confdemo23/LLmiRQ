The batch namespace can not be used with allowBeanDefinitionOverriding=false
Problem description
It is not possible to use the batch namespace in spring configuration files if the allowBeanDefinitionOverriding is set to false in the application context. The application context loading fails with a org.springframework.beans.factory.parsing.BeanDefinitionParsingException exception.
This is caused by the JobParser and InlineFlowParser from package org.springframework.batch.core.configuration.xml. JobParser creates for non abstract job definition a SimpleFlow which is unfortunately registered under the same bean name as the job parsed by the JobParser - the problematic code is on line 120 of the JobParser. The application context loading fails as 2 beans with the same names are going to be registered. The first one is a factory bean for SimpleFlow and the second one is a factory bean for FlowJob.
This fact is visible also from logs when the allowBeanDefinitionOverriding is set to true:






org.springframework.beans.factory.support.DefaultListableBeanFactory registerBeanDefinition




INFO: Overriding bean definition for bean &amp;apos;dummyJob&amp;apos;: replacing [Generic bean: class [org.springframework.batch.core.configuration.xml.SimpleFlowFactoryBean]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Generic bean: class [org.springframework.batch.core.configuration.xml.JobParserJobFactoryBean]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]






I have attached a very simple application to this issue, which contains 2 unit tests. One with allowBeanDefinitionOverriding=true and another one with allowBeanDefinitionOverriding=false. The second one fails with the org.springframework.beans.factory.parsing.BeanDefinitionParsingException exception.
Possible fix
The factory bean for SimpleFlow could be represented by a random name (or by a prefix/suffix added to the bean name of the FlowJob&amp;apos;s factroy bean), as the SimpleFlow is just a bean which will be not used as a "main", standalone bean, but it is used only as the flow attribute of the SimpleFlow. So its bean name is not important, however it should named differently as its owner FlowJob. The current implementation of the InlineFlowParser uses the same value for the flow name and for the bean name. If flow name is important and it makes no sense to use a random name or a modified name, then an additional value should be provided for the InlineFlowParser&amp;apos;s constructor, which will be the bean name to use.
