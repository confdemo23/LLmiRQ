FlowExecutionImpl: handleException ignores result of another handleException
method handleException of class org.springframework.webflow.engine.impl.FlowExecutionImpl calls recursively if another exception during processing of original exception happens, but
no further check about result of exception handling (from recursive method) will be done. As result effort of another exception handling call will be ignored and oldest exception will rethrown 
&lt;code&gt;
boolean handled = false;
		try {
			if (tryStateHandlers(exception, context) || tryFlowHandlers(exception, context)) 
{
				handled = true;
			}
		} catch (FlowExecutionException newException) 
{
			// exception handling itself resulted in a new FlowExecutionException, try to handle it
			handleException(newException, context);
		}
		if (!handled) {
			if (logger.isDebugEnabled()) 
{
				logger.debug("Rethrowing unhandled flow execution exception");
			}
			throw exception;
		}
&lt;/code&gt;
One of possible solution is to give method return value or to store variable handled in ThreadLocal, finally do not forget to re-throw latest not original exception if handling completely failed.