Dependency injection problem with step scoped anonymous inner bean
XML spring context sample :
    &lt;bean id="john" class="java.lang.String"&gt;
        &lt;constructor-arg index="0" value="John"/&gt;
    &lt;/bean&gt;
    &lt;bean id="jane" class="java.lang.String"&gt;
        &lt;constructor-arg index="0" value="Jane"/&gt;
    &lt;/bean&gt;
    &lt;batch:job id="firstJob" job-repository="jobRepository"&gt;
        &lt;batch:step id="firstJobFirstStep" next="firstJobSecondStep"&gt;
            &lt;batch:tasklet&gt;
                &lt;bean class="spring.batch.test.InnerBeanStepScopedTest$Hello" scope="step"&gt;
                    &lt;property name="name" ref="jane"/&gt;
                &lt;/bean&gt;
            &lt;/batch:tasklet&gt;
        &lt;/batch:step&gt;
        &lt;batch:step id="firstJobSecondStep"&gt;
            &lt;batch:tasklet&gt;
                &lt;bean class="spring.batch.test.InnerBeanStepScopedTest$Hello" scope="step"&gt;
                    &lt;property name="name" ref="john"/&gt;
                &lt;/bean&gt;
            &lt;/batch:tasklet&gt;
        &lt;/batch:step&gt;
    &lt;/batch:job&gt;
The output produced is:
    19:08:03.885 [main] INFO  s.b.t.InnerBeanStepScopedTest$Hello - Hello John!
    19:08:03.975 [main] INFO  s.b.t.InnerBeanStepScopedTest$Hello - Hello John!
Now, the question is: where is Jane? :o)
If the two tasklets are unscoped (just remove scope="step") then the ouput is:
    19:13:20.801 [main] INFO  s.b.t.InnerBeanStepScopedTest$Hello - Hello Jane!
    19:13:20.921 [main] INFO  s.b.t.InnerBeanStepScopedTest$Hello - Hello John!
Yes, Jan is back!
So, dependency injection fails on step scoped inner anonymous beans. 
Workaround: name inner beans with an id attribute... but it&amp;apos;s boring (me).