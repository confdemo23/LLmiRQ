org.apache.camel.component.bean.BeanInfo not working properly with mocked Interfaces
The BeanInfo-Class shows the same behaviour as ClassUtils-Class from Spring 3.0.x (see Spring Issue 7066, https://jira.springsource.org/browse/SPR-7066).
When working with mock objects created by mockito using an interface the getSuperclass()-Method returns java.lang.Object and the method to called on the mock can&amp;apos;t be found. 
While looking around for a solution I found the path applied in Spring (see https://fisheye.springsource.org/browse/spring-framework/trunk/org.springframework.core/src/main/java/org/springframework/util/ClassUtils.java?content-type=text/vnd.viewcvs-markup&amp;r1=3227&amp;r2=3228).
In method 
public static Class&lt;?&gt; getUserClass(Class&lt;?&gt; clazz) 
the code
return (clazz != null &amp;&amp; clazz.getName().contains(CGLIB_CLASS_SEPARATOR) ?  clazz.getSuperclass() : clazz);
is replaced by 
if (clazz != null &amp;&amp; clazz.getName().contains(CGLIB_CLASS_SEPARATOR)) {
    Class&lt;?&gt; superClass = clazz.getSuperclass();
    if (superClass != null &amp;&amp; !Object.class.equals(superClass)) 
{
         return superClass;
    }
}
return clazz;
While waiting for a fix in BeanInfo class a workaround is to mock the concrete class not the interface, but this makes the test code more complicated if several classes implement the same interface.
A Wor