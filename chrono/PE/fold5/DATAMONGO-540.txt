MongoTemplate upsert and findOne handle id queries differently
With a domain object class that has @Id annotated property:






public class Item {




  @Id




  private String id;




  






If these objects are upserted using MongoTemplate and the resulting object is then fetched with exactly the same query using findOne() method, the upsert fails silently (ie. no exception or error messages in debug logs) but findOne() returns the correct object (in applications point of view).






Query query = new Query(Criteria.where("id").is(identifier));




mongoTemplate.upsert(query, update, collectionName);




Item item = mongoTemplate.findOne(query, Item.class, collectionName);






In mongod logs:






Thu Sep 13 14:25:51 [conn91] update db.collection query: { id: "foo" } update: { $inc: { totalClickCount: 1 } } 0ms




Thu Sep 13 14:25:51 [conn91] query db.collection query: { _id: "foo" } ntoreturn:1 idhack:1 reslen:61 0ms






This shows that in upsert method, id in the query is resolved to id, whereas in findOne() method it is resolved to _id. 
Because of this, the upsert creates or updates a document {id : "foo", _id : 
{"$oid" : &lt;something&gt;}
 ...} but findOne returns the document {_id : "foo" ...}
If I change the property in query to _id like this: 






Query query = new Query(Criteria.where("_id").is(identifier));






everything works as expected.
Now I know, having browsed through this project&amp;apos;s JIRA, that it is confusing to use id-property and @Id at the same time and should be avoided. The problem here is, IMO, that MongoTemplate methods resolve these queries differently leading to confusing results.
The example works as expected (upsert() succeeds and findOne() returns the created object) up until 1.0.2.