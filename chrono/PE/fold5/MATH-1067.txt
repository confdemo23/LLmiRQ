Stack overflow in Beta.regularizedBeta
In org.apache.commons.math3.special.Beta.regularizedBeta(double,double,double,double,int), the case
 } else if (x &gt; (a + 1.0) / (a + b + 2.0)) 
{

      ret = 1.0 - regularizedBeta(1.0 - x, b, a, epsilon, maxIterations);

}
 
is prone to infinite recursion: If x is approximately the tested value, then 1-x is approximately the tested value in the recursion. Thus, due to loss of precision after the subtraction, this condition can be true for the recursive call as well.
Example:
double x= Double.longBitsToDouble(4597303555101269224L);
double a= Double.longBitsToDouble(4634227472812299606L);
double b = Double.longBitsToDouble(4642050131540049920L);
System.out.println(x &gt; (a + 1.0) / (a + b + 2.0));
System.out.println(1-x&gt;(b + 1.0) / (b + a + 2.0));
System.out.println(1-(1-x)&gt;(a + 1.0) / (a + b + 2.0));
Possible solution: change the condition to
x &gt; (a + 1.0) / (a + b + 2.0) &amp;&amp; 1-x&lt;=(b + 1.0) / (b + a + 2.0)