DomainClassConverter should gracefully return null for null sources or empty strings
I&amp;apos;ve noticed an important issue related to automatic web binding of String id to Domain class.
Imagine the use case where you have an Order domain class which has a ManyToOne reference to Customer.
When posting a new Order where Order.customer == "" then a converter exception is thrown:






Failed to convert property value of type java.lang.String to required type org.mycomp.domain.Customer for property customer; nested exception is org.springframework.core.convert.ConversionFailedException: Failed to convert from type java.lang.String to type @javax.validation.constraints.NotNull @javax.persistence.ManyToOne org.mycomp.domain.Customer for value &amp;apos;; nested exception is org.springframework.dao.InvalidDataAccessApiUsageException: The given id must not be null!; nested exception is java.lang.IllegalArgumentException: The given id must not be null!






I think it should not try to convert to Domain class if id is null or empty.
And note that for optional references this even might even cause a complete blocker?
This is the code I used:






&lt;form:select path="customer"&gt;




	&lt;form:option value="" label="Select" /&gt;




	&lt;form:options items="${customers}" itemValue="id"&gt;&lt;/form:options&gt;




&lt;/form:select&gt;






