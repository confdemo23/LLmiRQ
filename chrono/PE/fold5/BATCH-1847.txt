scope="step" inheritance from parent bean definitions causes odd effects
In a Spring Batch project we (Ewan Benfield and myself) found that Spring Batch was attempting to instantiate a bean defined as abstract in its context (abstract="true") when marked with step scope (scope="step").  Note that scope should be inheritable).
In an attempt to reproduce the issue outside of the project an odd error was instead noted that the child bean cannot be instantiated due to not having a matching constructor (despite the abstract bean and its child having only default constructors).  The project for this attempt is included.  The exact error given is "BeanCreationException: Error creating bean with name &amp;apos;concrete&amp;apos; defined in class path resource [abstractstepscope/AbstractStepScopeTest-context.xml]: 1 constructor arguments specified but no matching constructor found in bean &amp;apos;concrete&amp;apos; (hint: specify index and/or type arguments for simple parameters to avoid type ambiguities)".
Note that if the Spring Batch beans are removed or if the scope is defined on the child (also or instead of the parent) no error is given when running the provided test "AbstractStepScopeTest".
Although tested only against Spring Batch 2.1.8 I assume this affects subsequent releases as nothing in org.springframework.batch.core.scope appears to have changed for a while.
We&amp;apos;ve worked around the issue by placing the attribute scope="step" on the child bean definitions instead.