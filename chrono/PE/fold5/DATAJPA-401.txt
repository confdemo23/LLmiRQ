Unnecessary OUTER JOIN are generated for querying one single table
Since Spring Data JPA 1.2.1, unnecessary outer joins are generated when a single table is queried, which can take 10000 times longer to execute when the table contains millions of records. With log4jdbc we see the generated query and its execution time. Here are "simplified" statements of the SQL statements (our table contain many more columns).
In Spring Data JPA 1.2.0 and lower, the following statement was generated:






select order0_.ID as order1_14_ from ORDER order0_ where order0__.CUSTOMER_ID=123456 




Execution time : 2 ms






In Spring Data JPA 1.2.1 and higher, the following statement is generated:






select order0_.ID as order1_14_ from ORDER order0_ left outer join CUSTOMER customer1_ on order0_.CUSTOMER_ID=customer1_.ID where customer1_.ID=123456 




Execution time : 18842 ms






This problem was introduced by DATAJPA-277 which is included in 1.2.1. In attachment, there is a patch against 1.2.1 which makes this behavior configurable. When the JPA field is annotated with @ManyToOne(optional=false) or @OneToOne(optional=false) the outer joins are replaced with regular inner joins. Please feel free to enhance the patch if you find it appropriate.