in DefaultStepExecutionAggregator.aggregate(...) the aggregation of processor.skipCount is missing
 





org.springframework.batch.core.partition.support.DefaultStepExecutionAggregator






            public void aggregate(StepExecution result, Collection&lt;StepExecution&gt; executions) {




                        Assert.notNull(result, "To aggregate into a result it must be non-null.");




                        if (executions == null) {




                                   return;




                        }




                        for (StepExecution stepExecution : executions) {




                                   BatchStatus status = stepExecution.getStatus();




                                   result.setStatus(BatchStatus.max(result.getStatus(), status));




                                   result.setExitStatus(result.getExitStatus().and(stepExecution.getExitStatus()));




                                   result.setCommitCount(result.getCommitCount() + stepExecution.getCommitCount());




                                   result.setRollbackCount(result.getRollbackCount() + stepExecution.getRollbackCount());




                                   result.setReadCount(result.getReadCount() + stepExecution.getReadCount());




                                   result.setReadSkipCount(result.getReadSkipCount() + stepExecution.getReadSkipCount());




                                   result.setWriteCount(result.getWriteCount() + stepExecution.getWriteCount());




                                   result.setWriteSkipCount(result.getWriteSkipCount() + stepExecution.getWriteSkipCount());




                        }




            }











result.setProcessSkipCount(result.getProcessSkipCount() + stepExecution.getProcessSkipCount()); is missing inside the loop
