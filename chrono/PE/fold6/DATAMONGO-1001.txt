Can&apos;t save/update lazy load object
Test case:






@Document




public class Child {




    @Id




    private String id;




    private String name;




   //gets/sets




}









@Document




public class Parent {




    @Id




    private String id;




    @DBRef(lazy = true)




    Child child;




   //gets/sets




}









@Test




    public void test01() {









        final Child b = new Child();




        b.setName("name");




        this.mongoTemplate.save(b);









        final Parent tmpl = new Parent();




        tmpl.setChild(b);




        this.mongoTemplate.save(tmpl);









        final Criteria criteria = Criteria.where("child").is(tmpl.getChild());




        final Parent parent = this.mongoTemplate.findOne(Query.query(criteria), Parent.class);




        assertNotNull(parent.getChild().getName());









        final Child relatedChild = parent.getChild();




        final String contentId = relatedChild.getId();




        relatedChild.setName("changing name");









        this.mongoTemplate.save(relatedChild);









        final Child child = this.mongoTemplate.findById(contentId, Child.class);




        System.out.println(child.getName());




        assertEquals(relatedChild.getName(), child.getName());




    }






Lazy loaded references are not being updated.
Should parent.getChild() return the real entity instance and not the proxy instance?
