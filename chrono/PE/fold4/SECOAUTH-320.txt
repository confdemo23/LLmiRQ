Wrong http code (500 instead of 403) returned on InsufficientScopeException when using SpEL expressions for security contstraints

I have the following configuration:






&lt;http pattern="/service/**" entry-point-ref="oauthAuthenticationEntryPoint" use-expressions="true" xmlns="http://www.springframework.org/schema/security"&gt;		




    &lt;intercept-url pattern="/service/**" 




        method="GET" 




        access="#oauth2.clientHasRole(&amp;apos;ROLE_CLIENT&amp;apos;) and hasRole(&amp;apos;ROLE_USER&amp;apos;) and #oauth2.hasScope(&amp;apos;SCOPE&amp;apos;)"  /&gt;




    &lt;custom-filter ref="resourceServerFilter" after="PRE_AUTH_FILTER" /&gt;




    &lt;access-denied-handler ref="oauthAccessDeniedHandler"/&gt;




    &lt;expression-handler ref="oauthWebExpressionHandler" /&gt;




&lt;/http&gt;






When I try to do a request with the wrong scope a InsufficientScopeException is thrown. But it is exception is just handled by Tomcat from what I can see, not before. This results in a "500 Internal Server Error", not a "403 Forbidden" which I expected. 