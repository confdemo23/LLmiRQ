Implicit Flow serializer drops String values from OAuth2AccessToken 
Inside the AuthorizationEndpoint&amp;apos;s appendAccessToken function, which is called during the implicit flow, there was a check to see whether the value of the map was either a primitive or a wrapped primitive, using Spring&amp;apos;s ClassUtils. This check ruled out the String class being used in additionalInformation. Removal of the check allows Strings, and indeed all other objects with an appropriate .toString() call, to be serialized as expected. 
I should point out that without this change, we can&amp;apos;t issue id_tokens from the implicit flow since they come through as Strings.
Pull request removes this check and adds documentation to the token interface&amp;apos;s "getAdditionalInformation" method.
This almost mirrors what happens in the Jackson serializer, which uses a JSON object writer instead of a simple toString. Therefore, a possible longer-term solution would be to use a pluggable serialization system for data to be tacked to the return URI. But barring that, this solution works for the basic case.