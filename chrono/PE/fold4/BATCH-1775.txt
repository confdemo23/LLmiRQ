Inner beans of same type inside <chunk/> elements with scope ="step" leads to mistaken override of bean definitions
I&amp;apos;v the following job configuration: 






&lt;batch:job id="file2fileJob"&gt;




	&lt;batch:step id="file2fileJobStep1"&gt;




		&lt;batch:tasklet&gt;




			&lt;batch:chunk commit-interval="1" writer="itemToStringFlatFileItemWriter"&gt;




				&lt;batch:reader&gt;




					&lt;bean class="org.springframework.batch.item.file.FlatFileItemReader" scope="step"&gt;




						&lt;property name="resource" value="#{jobParameters[&amp;apos;input.file.name&amp;apos;]}" /&gt;




						&lt;property name="lineMapper"&gt;




							&lt;bean class="org.springframework.batch.item.file.mapping.PassThroughLineMapper" /&gt;




						&lt;/property&gt;




					&lt;/bean&gt;




				&lt;/batch:reader&gt;




			&lt;/batch:chunk&gt;




		&lt;/batch:tasklet&gt;




	&lt;/batch:step&gt;




&lt;/batch:job&gt;






and the following test: 






@Test




public void file2fileJob() throws Exception {




	/* setup */




	Map&lt;String, JobParameter&gt; parameters = new HashMap&lt;String, JobParameter&gt;();




	parameters.put("input.file.name", new JobParameter("users.csv"));




	File output = testFolder.newFile("output.txt");




	output.createNewFile();




	parameters.put("output.file.name", new JobParameter("file:" + output.getAbsolutePath()));




	/* exercise */




	launcher.run(file2fileJob, new JobParameters(parameters));




	/* verify */




	Resource input = new ClassPathResource("users.csv");




	assertEquals("Input and output should be equal", FileUtils.readLines(input.getFile()), FileUtils.readLines(output));




}






The test is successful. 
But if I had the following job configuration:






&lt;batch:job id="file2DatabaseJob"&gt;




	&lt;batch:step id="file2DatabaseJobStep1"&gt;




		&lt;batch:tasklet&gt;




			&lt;batch:chunk commit-interval="1" writer="itemToStringFlatFileItemWriter"&gt;




			&lt;!-- TODO - save the User in the database --&gt;




				&lt;batch:reader&gt;




					&lt;bean class="org.springframework.batch.item.file.FlatFileItemReader" scope="step"&gt;




						&lt;property name="resource" value="#{jobParameters[&amp;apos;input.file.name&amp;apos;]}" /&gt;




						&lt;property name="lineMapper"&gt;




							&lt;bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper"&gt;




								&lt;property name="lineTokenizer"&gt;




									&lt;bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer" /&gt;




								&lt;/property&gt;




								&lt;property name="fieldSetMapper"&gt;




									&lt;bean class="org.springframework.batch.UserFieldSetMapper" /&gt;




								&lt;/property&gt;




							&lt;/bean&gt;




						&lt;/property&gt;




					&lt;/bean&gt;




				&lt;/batch:reader&gt;




			&lt;/batch:chunk&gt;




		&lt;/batch:tasklet&gt;




	&lt;/batch:step&gt;




&lt;/batch:job&gt;






the same test fails because the &amp;apos;file2fileJobStep1&amp;apos; lineMapper is no more a PassThroughLineMapper but the same as the file2DatabaseJobStep1 lineMapper... 
If I remove the scope attribute (and update the resource value to an hard-coded value) of the file2fileJobStep1 reader, the test is successful again.  