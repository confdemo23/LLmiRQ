MongoTemplate fails to correctly report a js file not found on classpath while calling mapReduce
Consider the follwoing code snippet:






String mapFunction = "classpath:js/map.js";




String reduceFunction = "classpath:js/reduce.js";




MapReduceOptions mapReduceOptions = new MapReduceOptions();




mapReduceOptions.outputCollection("outColl");









MapReduceResults&lt;MRResult&gt; results =mongo.mapReduce("myColl", mapFunction, reduceFunction, mapReduceOptions, MRResult.class);






If map.js or reduce.js are not found on the classpath, function replaceWithResourceIfNecessary silently ignores this and considers the string classpath:map.js as the map function. Following debug statement is printed which is not very helpful and does not create any suspicion.






2011-11-21 08:20:27,906 [main] DEBUG org.springframework.data.mongodb.core.MongoTemplate - Executing MapReduce on collection [myColl], mapFunction [classpath:map.js], reduceFunction [classpath:reduce.js]






This leads to the following error which is also not helpful in debugging:






2011-11-21 08:20:27,926 [main] WARN  org.springframework.data.mongodb.core.MongoTemplate - Command execution of { "mapreduce" : "myColl" , "map" : "classpath:map.js" , "reduce" : "classpath:reduce.js" , "verbose" : true , "out" : { "replace" : "outColl"}} failed: db assertion failure






Error description on the mongod log is also useless:






Mon Nov 21 08:20:27 [conn9] JS Error: SyntaxError: missing ; before statement nofile_a:0




Mon Nov 21 08:20:27 [conn9] mr failed, removing collection :: caused by :: 13598 couldn&amp;apos;t compile code for: _map






So, it becomes really hard to debug that the real problem is missing js file on the classpath.
Catching and ignoring exception in method protected String replaceWithResourceIfNecessary(String function) is a bad thing to do.











} catch (Exception e) {




	// ignore - could be embedded JavaScript text




}





