Transacted routes don&apos;t allow custom error handlers to mark exception as handled AND set rollback only
If a route is transacted using transacted(), and a custom error handler is registered using onException() which handles the exception using handled(), creates a custom error response, and marks the transaction to be rolled back using rollback(), Camel wraps a non-existent &amp;apos;null&amp;apos; exception with a TransactedRuntimeCamelException in TransactionErrorHandler.wrapTransactedRuntimeException() and throws the TRCE, causing the custom error response to be ignored. 
Route looks like:
		// configure error handler for all routes
		onException(Exception.class).handled(true).to("bean:transformerBean?method=exceptionToResponse").rollback();
		from("cxfrs://bean:categoriesEndpoint").transacted()
			.choice()...
Basically the application wants to handle exceptions by sending a custom error message back to the route client, and also mark transactions for rollback. 
Attached patch checks for the presence of an exception, and only raises a TRCE if its not null. 