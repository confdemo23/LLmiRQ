Non-public @RepositoryEventHandler are not made accessible prior to reflective invocation
To reproduce:
1. Register a non-public @RepositoryEventHandler class with at least one @HandleBeforeCreate, @HandleBeforeSave, etc. method.
2. Try to create / save an entity through its repository.
3. Notice the following exception:






java.lang.IllegalStateException: Could not access method: Class org.springframework.util.ReflectionUtils can not access a member of class com.example.MyEventHandler with modifiers "public"




	at org.springframework.util.ReflectionUtils.handleReflectionException(ReflectionUtils.java:271)




	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:214)




	at org.springframework.data.rest.core.event.AnnotatedEventHandlerInvoker.onApplicationEvent(AnnotatedEventHandlerInvoker.java:92)






The fix is to setAccessible(true) on the method prior to invoking it at AnnotatedEventHandler:92. 