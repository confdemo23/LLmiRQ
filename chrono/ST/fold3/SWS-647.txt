PayloadValidatingInterceptor throws IllegalArgumentException when passed a schema collection
When I configure the PayloadValidatingInterceptor to refer to a CommonsXsdSchemaCollection, I get the following error when my web service is invoked:






org.springframework.beans.factory.BeanCreationException: Error creating bean with name &amp;apos;validatingInterceptor&amp;apos; defined in ServletContext resource [/WEB-INF/spring-ws-servlet.xml]: Error setting property values; nested exception is org.springframework.beans.PropertyBatchUpdateException; nested PropertyAccessExceptions (1) are:




PropertyAccessException 1: org.springframework.beans.MethodInvocationException: Property &amp;apos;xsdSchemaCollection&amp;apos; threw exception; nested exception is java.lang.IllegalArgumentException: Path must not be null




	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1341)




	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1067)




	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:511)




	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:450)




	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:290)




	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)




	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:287)




	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:189)




	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:557)




	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)




	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)




	at org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext(FrameworkServlet.java:402)




	at org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext(FrameworkServlet.java:316)




	at org.springframework.web.servlet.FrameworkServlet.initServletBean(FrameworkServlet.java:282)




	at org.springframework.web.servlet.HttpServletBean.init(HttpServletBean.java:126)




	at javax.servlet.GenericServlet.init(GenericServlet.java:241)




	at weblogic.servlet.internal.StubSecurityHelper$ServletInitAction.run(StubSecurityHelper.java:283)




	at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)




	at weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)




	at weblogic.servlet.internal.StubSecurityHelper.createServlet(StubSecurityHelper.java:64)




	at weblogic.servlet.internal.StubLifecycleHelper.createOneInstance(StubLifecycleHelper.java:58)




	at weblogic.servlet.internal.StubLifecycleHelper.(StubLifecycleHelper.java:48)




	at weblogic.servlet.internal.ServletStubImpl.prepareServlet(ServletStubImpl.java:539)




	at weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:243)




	at weblogic.servlet.internal.ServletStubImpl.execute(ServletStubImpl.java:183)




	at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.doIt(WebAppServletContext.java:3686)




	at weblogic.servlet.internal.WebAppServletContext$ServletInvocationAction.run(WebAppServletContext.java:3650)




	at weblogic.security.acl.internal.AuthenticatedSubject.doAs(AuthenticatedSubject.java:321)




	at weblogic.security.service.SecurityManager.runAs(SecurityManager.java:121)




	at weblogic.servlet.internal.WebAppServletContext.securedExecute(WebAppServletContext.java:2268)




	at weblogic.servlet.internal.WebAppServletContext.execute(WebAppServletContext.java:2174)




	at weblogic.servlet.internal.ServletRequestImpl.run(ServletRequestImpl.java:1446)




	at weblogic.work.ExecuteThread.execute(ExecuteThread.java:201)




	at weblogic.work.ExecuteThread.run(ExecuteThread.java:173)




Caused by: org.springframework.beans.PropertyBatchUpdateException; nested PropertyAccessExceptions (1) are:




PropertyAccessException 1: org.springframework.beans.MethodInvocationException: Property &amp;apos;xsdSchemaCollection&amp;apos; threw exception; nested exception is java.lang.IllegalArgumentException: Path must not be null




	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:102)




	at org.springframework.beans.AbstractPropertyAccessor.setPropertyValues(AbstractPropertyAccessor.java:58)




	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyPropertyValues(AbstractAutowireCapableBeanFactory.java:1338)




	... 33 more






-------------------------
Here&amp;apos;s my spring bean config:






    &lt;bean id="validatingInterceptor" class="org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptor"&gt;




        &lt;property name="xsdSchemaCollection" ref="schemaCollection" /&gt;




        &lt;property name="validateRequest" value="true" /&gt;




        &lt;property name="validateResponse" value="true" /&gt;




    &lt;/bean&gt;









    &lt;bean id="schemaCollection" class="org.springframework.xml.xsd.commons.CommonsXsdSchemaCollection"&gt;




        &lt;property name="xsds"&gt;




            &lt;list&gt;




                &lt;value&gt;classpath:schemas/CommonTypes.xsd&lt;/value&gt;




                &lt;value&gt;classpath:schemas/TakeService.xsd&lt;/value&gt;




            &lt;/list&gt;




        &lt;/property&gt;




        &lt;property name="inline" value="true" /&gt;




    &lt;/bean&gt;






------------------------
The workaround is to explicit set the "schemas" property, thus duplicating the XSD paths in the config (which is not ideal):






    &lt;bean id="validatingInterceptor" class="org.springframework.ws.soap.server.endpoint.interceptor.PayloadValidatingInterceptor"&gt;




        &lt;property name="schemas"&gt;




            &lt;list&gt;




                &lt;value&gt;classpath:schemas/CommonTypes.xsd&lt;/value&gt;




                &lt;value&gt;classpath:schemas/TakeService.xsd&lt;/value&gt;




            &lt;/list&gt;




        &lt;/property&gt;




        &lt;property name="validateRequest" value="true" /&gt;




        &lt;property name="validateResponse" value="true" /&gt;




    &lt;/bean&gt;






