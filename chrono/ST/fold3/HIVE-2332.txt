If all of the parameters of distinct functions are exists in group by columns, query fails in runtime
select sum(key_int1), sum(distinct key_int1) from t1 group by key_int1;
fails with message..



FAILED: Execution Error, return code 2 from org.apache.hadoop.hive.ql.exec.MapRedTask



hadoop says..



Caused by: java.lang.IndexOutOfBoundsException: Index: 1, Size: 1

	at java.util.ArrayList.RangeCheck(ArrayList.java:547)

	at java.util.ArrayList.get(ArrayList.java:322)

	at org.apache.hadoop.hive.serde2.objectinspector.StandardStructObjectInspector.init(StandardStructObjectInspector.java:95)

	at org.apache.hadoop.hive.serde2.objectinspector.StandardStructObjectInspector.(StandardStructObjectInspector.java:86)

	at org.apache.hadoop.hive.serde2.objectinspector.ObjectInspectorFactory.getStandardStructObjectInspector(ObjectInspectorFactory.java:252)

	at org.apache.hadoop.hive.ql.exec.ReduceSinkOperator.initEvaluatorsAndReturnStruct(ReduceSinkOperator.java:188)

	at org.apache.hadoop.hive.ql.exec.ReduceSinkOperator.processOp(ReduceSinkOperator.java:197)

	at org.apache.hadoop.hive.ql.exec.Operator.process(Operator.java:471)

	at org.apache.hadoop.hive.ql.exec.Operator.forward(Operator.java:744)

	at org.apache.hadoop.hive.ql.exec.TableScanOperator.processOp(TableScanOperator.java:85)

	at org.apache.hadoop.hive.ql.exec.Operator.process(Operator.java:471)

	at org.apache.hadoop.hive.ql.exec.Operator.forward(Operator.java:744)

	at org.apache.hadoop.hive.ql.exec.MapOperator.process(MapOperator.java:532)



I think the deficient number of key expression, compared to number of key column, is the problem, which should be equal or more. 
Would it be solved if add some key expression? I&amp;apos;ll try.