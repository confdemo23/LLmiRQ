ServletContextResource.isReadable() returns "true" for directories
Consider this configuration:






&lt;mvc:resources mapping="/static/**" location="/WEB-INF/resources/immutable/"/&gt;






The resource directory /WEB-INF/resources/immutable/ contains several files and subdirectories. One subdirectory is called images.
A browser request to /static/nonexistingfile.png results in a 404 HTTP error. But a request to /static/images (existing directory, without a file name specified) results in a FileNotFoundException:






java.io.FileNotFoundException: Could not open ServletContext resource [/WEB-INF/resources/immutable/images]




        at org.springframework.web.context.support.ServletContextResource.getInputStream(ServletContextResource.java:118) ~[spring-web-3.1.0.RELEASE.jar:3.1.0.RELEASE]




        at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.writeContent(ResourceHttpRequestHandler.java:240) ~[spring-webmvc-3.1.0.RELEASE.jar:3.1.0.RELEASE]




        at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:141) ~[spring-webmvc-3.1.0.RELEASE.jar:3.1.0.RELEASE]




        at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:49) ~[spring-webmvc-3.1.0.RELEASE.jar:3.1.0.RELEASE]




        at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:900) ~[spring-webmvc-3.1.0.RELEASE.jar:3.1.0.RELEASE]




        at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:827) ~[spring-webmvc-3.1.0.RELEASE.jar:3.1.0.RELEASE]




        at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882) ~[spring-webmvc-3.1.0.RELEASE.jar:3.1.0.RELEASE]




        at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778) ~[spring-webmvc-3.1.0.RELEASE.jar:3.1.0.RELEASE]




        at javax.servlet.http.HttpServlet.service(HttpServlet.java:621) ~[servlet-api.jar:na]




        at javax.servlet.http.HttpServlet.service(HttpServlet.java:722) ~[servlet-api.jar:na]






I think the getResource(HttpServletRequest) method in ResourceHttpRequestHandler should also check if the requested resources is a File.
On a high volume website this can cause tons of FileNotFoundExceptions due to robot visits. This is why I classified this issue with major priority.