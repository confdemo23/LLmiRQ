Count queries should be issued without ORDER BY clause
I have the following query method:






@Query("SELECT a FROM AdminModule a WHERE a.admin = :admin ORDER BY a.module")




public Page&lt;AdminModule&gt; findByAdmin(@Param("admin") Admin admin, Pageable page);






The test is:






@Test




public void testFindByAdmin() {




  Page&lt;AdminModule&gt; adminModules = adminModuleRepository.findByAdmin(admin0, new PageRequest(0, 10));




  assertEquals(1, adminModules.getContent().size());




  assertEquals(adminModule0.getModule(), adminModules.getContent().get(0).getModule());




  adminModules = adminModuleRepository.findByAdmin(admin1, new PageRequest(0, 10));




  assertEquals(10, adminModules.getContent().size());




  assertEquals(adminModule1.getModule(), adminModules.getContent().get(0).getModule());




  assertEquals(adminModule2.getModule(), adminModules.getContent().get(1).getModule());




  adminModules = adminModuleRepository.findByAdmin(admin1, new PageRequest(1, 10));




  assertEquals(manyAdminModules.get(8).getModule(), adminModules.getContent().get(0).getModule());




  assertEquals(manyAdminModules.get(9).getModule(), adminModules.getContent().get(1).getModule());




}






It is successful when run against the MySQL database. But when run against the H2 database, it gives the following error:






2013-07-25 12:10:40,560 DEBUG  [sqlonly]  org.hibernate.jdbc.AbstractBatcher.getResultSet(AbstractBatcher.java:208)




6. select count(adminmodul0_.id) as col_0_0_ from admin_module adminmodul0_ where adminmodul0_.admin_id=4362




order by adminmodul0_.module




2013-07-25 12:10:40,588 ERROR  [sqlonly]  org.hibernate.jdbc.AbstractBatcher.getResultSet(AbstractBatcher.java:208)




6. select count(adminmodul0_.id) as col_0_0_ from admin_module adminmodul0_ where adminmodul0_.admin_id=4362 order by adminmodul0_.module




org.h2.jdbc.JdbcSQLException: Column "ADMINMODUL0_.MODULE" must be in the GROUP BY list; SQL statement:




select count(adminmodul0_.id) as col_0_0_ from admin_module adminmodul0_ where adminmodul0_.admin_id=? order by adminmodul0_.module [90016-172]






I&amp;apos;m using the following:






  &lt;properties&gt;




    &lt;hibernate.version&gt;3.6.10.Final&lt;/hibernate.version&gt;




  &lt;/properties&gt;









    &lt;dependency&gt;




      &lt;groupId&gt;org.hibernate&lt;/groupId&gt;




      &lt;artifactId&gt;hibernate-core&lt;/artifactId&gt;




      &lt;version&gt;${hibernate.version}&lt;/version&gt;




    &lt;/dependency&gt;




    &lt;dependency&gt;




      &lt;groupId&gt;org.hibernate&lt;/groupId&gt;




      &lt;artifactId&gt;hibernate-entitymanager&lt;/artifactId&gt;




      &lt;version&gt;${hibernate.version}&lt;/version&gt;




    &lt;/dependency&gt;




    &lt;dependency&gt;




      &lt;groupId&gt;org.springframework.data&lt;/groupId&gt;




      &lt;artifactId&gt;spring-data-jpa&lt;/artifactId&gt;




      &lt;version&gt;1.3.4.RELEASE&lt;/version&gt;




    &lt;/dependency&gt;




    &lt;dependency&gt;




      &lt;groupId&gt;org.hibernate&lt;/groupId&gt;




      &lt;artifactId&gt;hibernate-annotations&lt;/artifactId&gt;




      &lt;version&gt;3.5.6-Final&lt;/version&gt;




    &lt;/dependency&gt;




    &lt;dependency&gt;




      &lt;groupId&gt;org.hibernate.javax.persistence&lt;/groupId&gt;




      &lt;artifactId&gt;hibernate-jpa-2.0-api&lt;/artifactId&gt;




      &lt;version&gt;1.0.1.Final&lt;/version&gt;




    &lt;/dependency&gt;




    &lt;dependency&gt;




      &lt;groupId&gt;com.h2database&lt;/groupId&gt;




      &lt;artifactId&gt;h2&lt;/artifactId&gt;




      &lt;version&gt;1.3.172&lt;/version&gt;




    &lt;/dependency&gt;





