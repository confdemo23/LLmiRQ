New LIKE expression handling breaks backward compatibility
This is a followup to DATAJPA-292: the new behaviour of LIKE expressions is uncompatible with older queries.
For example I have this method:






@Query("FROM User j WHERE j.name LIKE :pattern OR j.description LIKE :pattern")




Page&lt;User&gt; searchUsers(@Param("pattern") String pattern, Pageable page);






That I used to give the client the freedom to choose the pattern, so he could just pass "%" to browse all users, "%substring%" or "alex%" to filter them at will.
Up to Spring Data JPA 1.3.0 that works fine, but with 1.3.1 and above the web app can&amp;apos;t start any more with this error:






Caused by: java.lang.IllegalArgumentException: Illegal like pattern :pattern!




	at org.springframework.data.jpa.repository.query.StringQuery.getLikeTypeFrom(StringQuery.java:205)




	at org.springframework.data.jpa.repository.query.StringQuery.parseLikeBindings(StringQuery.java:155)




	at org.springframework.data.jpa.repository.query.StringQuery.&lt;init&gt;(StringQuery.java:68)




	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.&lt;init&gt;(SimpleJpaQuery.java:53)




	at org.springframework.data.jpa.repository.query.SimpleJpaQuery.fromQueryAnnotation(SimpleJpaQuery.java:138)




	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$DeclaredQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:114)




	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:160)




	at org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:68)




	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.&lt;init&gt;(RepositoryFactorySupport.java:279)




	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:147)




	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.getObject(RepositoryFactoryBeanSupport.java:153)




	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.getObject(RepositoryFactoryBeanSupport.java:43)




	at org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:142)






