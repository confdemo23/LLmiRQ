ArrayIndexOutOfBoundsException - HBASE-backed views&apos; query with JOINs
The stack:

2016-09-13T09:38:49,972 ERROR [186b4545-65b5-4bfc-bc8e-3e14e251bb12 main] exec.Task: Job Submission failed with exception &amp;apos;java.lang.ArrayIndexOutOfBoundsException(1)&amp;apos;

java.lang.ArrayIndexOutOfBoundsException: 1

        at org.apache.hadoop.hive.hbase.HiveHBaseTableInputFormat.createFilterScan(HiveHBaseTableInputFormat.java:224)

        at org.apache.hadoop.hive.hbase.HiveHBaseTableInputFormat.getSplitsInternal(HiveHBaseTableInputFormat.java:492)

        at org.apache.hadoop.hive.hbase.HiveHBaseTableInputFormat.getSplits(HiveHBaseTableInputFormat.java:449)

        at org.apache.hadoop.hive.ql.io.HiveInputFormat.addSplitsForGroup(HiveInputFormat.java:370)

        at org.apache.hadoop.hive.ql.io.HiveInputFormat.getSplits(HiveInputFormat.java:466)

        at org.apache.hadoop.hive.ql.io.CombineHiveInputFormat.getCombineSplits(CombineHiveInputFormat.java:356)

        at org.apache.hadoop.hive.ql.io.CombineHiveInputFormat.getSplits(CombineHiveInputFormat.java:546)

        at org.apache.hadoop.mapreduce.JobSubmitter.writeOldSplits(JobSubmitter.java:329)

        at org.apache.hadoop.mapreduce.JobSubmitter.writeSplits(JobSubmitter.java:320)

        at org.apache.hadoop.mapreduce.JobSubmitter.submitJobInternal(JobSubmitter.java:196)

        at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1290)

        at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1287)

        at java.security.AccessController.doPrivileged(Native Method)

        at javax.security.auth.Subject.doAs(Subject.java:415)

        at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1657)

        at org.apache.hadoop.mapreduce.Job.submit(Job.java:1287)

        at org.apache.hadoop.mapred.JobClient$1.run(JobClient.java:575)

        at org.apache.hadoop.mapred.JobClient$1.run(JobClient.java:570)





Repro:

CREATE TABLE HBASE_TABLE_TEST_1(

  cvalue string ,

  pk string,

 ccount int   )

ROW FORMAT SERDE

  &amp;apos;org.apache.hadoop.hive.hbase.HBaseSerDe&amp;apos;

STORED BY

  &amp;apos;org.apache.hadoop.hive.hbase.HBaseStorageHandler&amp;apos;

WITH SERDEPROPERTIES (

  &amp;apos;hbase.columns.mapping&amp;apos;=&amp;apos;cf:val,:key,cf2:count&amp;apos;,

  &amp;apos;hbase.scan.cache&amp;apos;=&amp;apos;500&amp;apos;,

  &amp;apos;hbase.scan.cacheblocks&amp;apos;=&amp;apos;false&amp;apos;,

  &amp;apos;serialization.format&amp;apos;=&amp;apos;1&amp;apos;)

TBLPROPERTIES (

  &amp;apos;hbase.table.name&amp;apos;=&amp;apos;hbase_table_test_1&amp;apos;,

  &amp;apos;serialization.null.format&amp;apos;=&amp;apos;&amp;apos;  );





  CREATE VIEW VIEW_HBASE_TABLE_TEST_1 AS SELECT hbase_table_test_1.cvalue,hbase_table_test_1.pk,hbase_table_test_1.ccount FROM hbase_table_test_1 WHERE hbase_table_test_1.ccount IS NOT NULL;



CREATE TABLE HBASE_TABLE_TEST_2(

  cvalue string ,

    pk string ,

   ccount int  )

ROW FORMAT SERDE

  &amp;apos;org.apache.hadoop.hive.hbase.HBaseSerDe&amp;apos;

STORED BY

  &amp;apos;org.apache.hadoop.hive.hbase.HBaseStorageHandler&amp;apos;

WITH SERDEPROPERTIES (

  &amp;apos;hbase.columns.mapping&amp;apos;=&amp;apos;cf:val,:key,cf2:count&amp;apos;,

  &amp;apos;hbase.scan.cache&amp;apos;=&amp;apos;500&amp;apos;,

  &amp;apos;hbase.scan.cacheblocks&amp;apos;=&amp;apos;false&amp;apos;,

  &amp;apos;serialization.format&amp;apos;=&amp;apos;1&amp;apos;)

TBLPROPERTIES (

  &amp;apos;hbase.table.name&amp;apos;=&amp;apos;hbase_table_test_2&amp;apos;,

  &amp;apos;serialization.null.format&amp;apos;=&amp;apos;&amp;apos;);





CREATE VIEW VIEW_HBASE_TABLE_TEST_2 AS SELECT hbase_table_test_2.cvalue,hbase_table_test_2.pk,hbase_table_test_2.ccount FROM hbase_table_test_2 WHERE  hbase_table_test_2.pk &gt;=&amp;apos;3-0000h-0&amp;apos; AND hbase_table_test_2.pk &lt;= &amp;apos;3-0000h-g&amp;apos; AND hbase_table_test_2.ccount IS NOT NULL;



set hive.auto.convert.join=false;



  SELECT  p.cvalue cvalue

FROM `VIEW_HBASE_TABLE_TEST_1` `p`

LEFT OUTER JOIN `VIEW_HBASE_TABLE_TEST_2` `A1`

ON `p`.cvalue = `A1`.cvalue

LEFT OUTER JOIN `VIEW_HBASE_TABLE_TEST_1` `A2`

ON `p`.cvalue = `A2`.cvalue;





