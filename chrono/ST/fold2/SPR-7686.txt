NullPointerException in InjectionMetadata
When using SpringBeanAutowiringSupport.processInjectionBasedOnServletContext() 
a NullPointerException is raised in 
InjectionMetadata.checkPropertySkipping(PropertyValues pvs)






protected boolean checkPropertySkipping(PropertyValues pvs) {




  if (this.skip == null) {




    synchronized (pvs) { // &lt;-- NullPointerException




      if (this.skip == null) {






in AutowiredAnnotationBeanPostProcessor.processInjection(Object bean)
metadata inject is called with null for PropertyValues






public void processInjection(Object bean) throws BeansException {




  Class&lt;?&gt; clazz = bean.getClass();




  InjectionMetadata metadata = findAutowiringMetadata(clazz);




  try {




    metadata.inject(bean, null, null); // &lt;-- pvs is null




  }




  catch (Throwable ex) {




    throw new BeanCreationException("Injection of autowired dependencies failed for class [" + clazz + "]", ex);




  }




}






Here is the stack trace:






java.lang.NullPointerException




 	at org.springframework.beans.factory.annotation.InjectionMetadata$InjectedElement.checkPropertySkipping(InjectionMetadata.java:171)




 	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredMethodElement.inject(AutowiredAnnotationBeanPostProcessor.java:526)




 	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:84)




 	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.processInjection(AutowiredAnnotationBeanPostProcessor.java:300)




 	at org.springframework.web.context.support.SpringBeanAutowiringSupport.processInjectionBasedOnServletContext(SpringBeanAutowiringSupport.java:110)





