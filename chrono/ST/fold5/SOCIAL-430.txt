OAuth2Template.createRestTemplate() throws NPE when useParametersForClientAuthentication is false
In OAuth2Template.createRestTemplate(), a new RestTemplate is created which does not instantiate the List&lt;ClientHttpRequestInterceptor&gt; interceptors defined in the InterceptingHttpAccessor superclass.
When OAuth2Template&amp;apos;s instance variable useParametersForClientAuthentication is false, a new PreemptiveBasicAuthClientHttpRequestInterceptor is added to the RestTemplate&amp;apos;s List of Interceptors despite that List never being instantiated. This causes a NullPointerException.
Relevant code from OAuth2Template.createRestTemplate():






RestTemplate restTemplate = new RestTemplate(requestFactory);




List&lt;HttpMessageConverter&lt;?&gt;&gt; converters = new ArrayList&lt;HttpMessageConverter&lt;?&gt;&gt;(2);




converters.add(new FormHttpMessageConverter());




converters.add(new FormMapHttpMessageConverter());




converters.add(new MappingJackson2HttpMessageConverter());




restTemplate.setMessageConverters(converters);




if (!useParametersForClientAuthentication) {




	restTemplate.getInterceptors().add(new PreemptiveBasicAuthClientHttpRequestInterceptor(clientId, clientSecret));




}






Stacktrace:

Caused by: java.lang.NullPointerException
at org.springframework.social.oauth2.OAuth2Template.createRestTemplate(OAuth2Template.java:212)
at org.springframework.social.oauth2.OAuth2Template.getRestTemplate(OAuth2Template.java:253)
at org.springframework.social.oauth2.OAuth2Template.postForAccessGrant(OAuth2Template.java:230)
at org.springframework.social.oauth2.OAuth2Template.exchangeCredentialsForAccess(OAuth2Template.java:156)
at com.myapp.android.ApplicationController$2.doInBackground(ApplicationController.java:109)
at com.myapp.android.ApplicationController$2.doInBackground(ApplicationController.java:99)
at android.os.AsyncTask$2.call(AsyncTask.java:287)
at java.util.concurrent.FutureTask.run(FutureTask.java:234)
at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:230)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1080)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:573)
at java.lang.Thread.run(Thread.java:856)