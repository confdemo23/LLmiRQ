server-config operations "leaks" to server&apos;s resources
Start a regular domain
Any operations on server children with the same names that server-config operations (:start, :stop, :restart, :kill) are executed instead of being rejected because the actual resources at the operation address does not define them.
Examples:






[domain@localhost:9990 /] /host=master/server=server-one/subsystem=undertow:start




{




    "outcome" =&gt; "failed",




    "failure-description" =&gt; "WFLYCTL0158: Operation handler failed: java.util.NoSuchElementException: No child &amp;apos;undertow&amp;apos; exists",




    "rolled-back" =&gt; true




}









=&gt;









[Host Controller] 16:15:30,231 ERROR [org.jboss.as.controller.management-operation] (management-handler-thread - 15) WFLYCTL0013: Operation ("restart") failed - address: ([




[Host Controller]     ("host" =&gt; "master"),




[Host Controller]     ("server" =&gt; "server-one"),




[Host Controller]     ("subsystem" =&gt; "undertow")




[Host Controller] ]) - failure description: "WFLYHC0047: Cannot restart server undertow as it is not currently started; it is STOPPED"




[Host Controller] 16:18:43,764 ERROR [org.jboss.as.controller.management-operation] (management-handler-thread - 18) WFLYCTL0013: Operation ("start") failed - address: ([




[Host Controller]     ("host" =&gt; "master"),




[Host Controller]     ("server" =&gt; "server-one"),




[Host Controller]     ("subsystem" =&gt; "undertow")




[Host Controller] ]): java.util.NoSuchElementException: No child &amp;apos;undertow&amp;apos; exists




[Host Controller]       at org.jboss.dmr.ModelValue.requireChild(ModelValue.java:369)




[Host Controller]       at org.jboss.dmr.ObjectModelValue.requireChild(ObjectModelValue.java:299)




[Host Controller]       at org.jboss.dmr.ModelNode.require(ModelNode.java:870)




[Host Controller]       at org.jboss.as.host.controller.ManagedServerBootCmdFactory.&lt;init&gt;(ManagedServerBootCmdFactory.java:93)




[Host Controller]       at org.jboss.as.host.controller.ServerInventoryImpl.createBootFactory(ServerInventoryImpl.java:629)




[Host Controller]       at org.jboss.as.host.controller.ServerInventoryImpl.startServer(ServerInventoryImpl.java:200)




[Host Controller]       at org.jboss.as.host.controller.operations.ServerStartHandler$1.execute(ServerStartHandler.java:110)




[Host Controller]       at org.jboss.as.controller.AbstractOperationContext.executeStep(AbstractOperationContext.java:728)




[Host Controller]       at org.jboss.as.controller.AbstractOperationContext.doCompleteStep(AbstractOperationContext.java:563)




[Host Controller]       at org.jboss.as.controller.AbstractOperationContext.completeStepInternal(AbstractOperationContext.java:336)




[Host Controller]       at org.jboss.as.controller.AbstractOperationContext.executeOperation(AbstractOperationContext.java:312)




[Host Controller]       at org.jboss.as.controller.OperationContextImpl.executeOperation(OperationContextImpl.java:1160)




[Host Controller]       at org.jboss.as.controller.ModelControllerImpl.internalExecute(ModelControllerImpl.java:356)




[Host Controller]       at org.jboss.as.controller.ModelControllerImpl.execute(ModelControllerImpl.java:215)




[Host Controller]       at org.jboss.as.controller.remote.ModelControllerClientOperationHandler$ExecuteRequestHandler.doExecute(ModelControllerClientOperationHandler.java:220)




[Host Controller]       at org.jboss.as.controller.remote.ModelControllerClientOperationHandler$ExecuteRequestHandler.access$300(ModelControllerClientOperationHandler.java:147)




[Host Controller]       at org.jboss.as.controller.remote.ModelControllerClientOperationHandler$ExecuteRequestHandler$1$1.run(ModelControllerClientOperationHandler.java:169)




[Host Controller]       at org.jboss.as.controller.remote.ModelControllerClientOperationHandler$ExecuteRequestHandler$1$1.run(ModelControllerClientOperationHandler.java:165)




[Host Controller]       at java.security.AccessController.doPrivileged(Native Method)




[Host Controller]       at javax.security.auth.Subject.doAs(Subject.java:422)




[Host Controller]       at org.jboss.as.controller.AccessAuditContext.doAs(AccessAuditContext.java:94)




[Host Controller]       at org.jboss.as.controller.remote.ModelControllerClientOperationHandler$ExecuteRequestHandler$1.execute(ModelControllerClientOperationHandler.java:165)




[Host Controller]       at org.jboss.as.protocol.mgmt.AbstractMessageHandler$2$1.doExecute(AbstractMessageHandler.java:298)




[Host Controller]       at org.jboss.as.protocol.mgmt.AbstractMessageHandler$AsyncTaskRunner.run(AbstractMessageHandler.java:518)




[Host Controller]       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)




[Host Controller]       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)




[Host Controller]       at java.lang.Thread.run(Thread.java:745)




[Host Controller]       at org.jboss.threads.JBossThread.run(JBossThread.java:320)









[domain@localhost:9990 /] /host=master/server=server-one/subsystem=undertow:stop




{




    "outcome" =&gt; "success",




    "result" =&gt; "STOPPED"




}









[domain@localhost:9990 /] /host=master/server=server-one/subsystem=undertow:kill




{"outcome" =&gt; "success"}






If the corresponding server-config resource is actually stopped, the operations fail because there is no resource at the operation&amp;apos;s address.