InstanceAlreadyExistsException in logs while starting embed-server after failure
IAEE can be seen in the logs of embed server on the second startup if the first one fails.


Starting the embed server with --emty-config using default configuration fails as expected.






[disconnected /] embed-server --std-out=echo --empty-config




10:12:35,251 INFO  [org.jboss.modules] (AeshProcess: 1) JBoss Modules version 1.4.4.Final




10:12:35,323 INFO  [org.jboss.msc] (AeshProcess: 1) JBoss MSC version 1.2.6.Final




10:12:35,384 INFO  [org.jboss.as] (MSC service thread 1-6) WFLYSRV0049: WildFly Core 2.0.0.CR7-SNAPSHOT (WildFly Core 2.0.0.CR7-SNAPSHOT) starting




10:12:35,454 ERROR [org.jboss.msc.service.fail] (MSC service thread 1-5) MSC000001: Failed to start service jboss.as.server-controller: org.jboss.msc.service.StartException in service jboss.as.server-controller: Failed to start service




	at org.jboss.msc.service.ServiceControllerImpl$StartTask.run(ServiceControllerImpl.java:1904)




	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)




	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)




	at java.lang.Thread.run(Thread.java:745)




Caused by: java.lang.IllegalStateException: WFLYCTL0389: Could not create an empty configuration at file /home/pkremens/devel/wildfly-core/dist/target/wildfly-core-2.0.0.CR7-SNAPSHOT/standalone/configuration/standalone.xml as there is an existing non-empty configuration there




	at org.jboss.as.controller.persistence.ConfigurationFile.getBootFile(ConfigurationFile.java:242)




	at org.jboss.as.controller.persistence.BackupXmlConfigurationPersister.&lt;init&gt;(BackupXmlConfigurationPersister.java:70)




	at org.jboss.as.server.Bootstrap$Configuration$1.createConfigurationPersister(Bootstrap.java:192)




	at org.jboss.as.server.ServerService.start(ServerService.java:249)




	at org.jboss.msc.service.ServiceControllerImpl$StartTask.startService(ServiceControllerImpl.java:1948)




	at org.jboss.msc.service.ServiceControllerImpl$StartTask.run(ServiceControllerImpl.java:1881)




	... 3 more









Cannot start embedded server: WFLYEMB0022: Cannot invoke &amp;apos;start&amp;apos; on standalone server: WFLYSRV0141: Cannot start server: Operation failed: Failed to start service: WFLYCTL0389: Could not create an empty configuration at file /home/pkremens/devel/wildfly-core/dist/target/wildfly-core-2.0.0.CR7-SNAPSHOT/standalone/configuration/standalone.xml as there is an existing non-empty configuration there






InstanceAlreadyExistsException can be seen in the logs during the boot of the embed server now.






[disconnected /] embed-server --std-out=echo




10:12:40,211 INFO  [org.jboss.modules] (AeshProcess: 2) JBoss Modules version 1.4.4.Final




10:12:40,217 ERROR [org.jboss.msc] (AeshProcess: 2) MSC000010: Failed to register MBean with MBeanServer: javax.management.InstanceAlreadyExistsException: jboss.msc:type=container,name=jboss-as




	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437)




	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898)




	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966)




	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900)




	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324)




	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522)




	at org.jboss.msc.service.ServiceContainerImpl.&lt;init&gt;(ServiceContainerImpl.java:372)




	at org.jboss.msc.service.ServiceContainer$Factory.create(ServiceContainer.java:258)




	at org.jboss.as.server.BootstrapImpl$ShutdownHook.register(BootstrapImpl.java:208)




	at org.jboss.as.server.BootstrapImpl$ShutdownHook.access$100(BootstrapImpl.java:198)




	at org.jboss.as.server.BootstrapImpl.&lt;init&gt;(BootstrapImpl.java:62)




	at org.jboss.as.server.Bootstrap$Factory.newInstance(Bootstrap.java:256)




	at org.wildfly.core.embedded.EmbeddedStandaloneServerFactory$StandaloneServerImpl.start(EmbeddedStandaloneServerFactory.java:275)




	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)




	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)




	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)




	at java.lang.reflect.Method.invoke(Method.java:497)




	at org.wildfly.core.embedded.EmbeddedServerReference.invokeOnServer(EmbeddedServerReference.java:85)




	at org.wildfly.core.embedded.EmbeddedServerReference.start(EmbeddedServerReference.java:56)




	at org.jboss.as.cli.embedded.EmbedServerHandler.doHandle(EmbedServerHandler.java:205)




	at org.jboss.as.cli.handlers.CommandHandlerWithHelp.handle(CommandHandlerWithHelp.java:88)




	at org.jboss.as.cli.impl.CommandContextImpl.handle(CommandContextImpl.java:773)




	at org.jboss.as.cli.impl.CommandContextImpl.handleSafe(CommandContextImpl.java:796)




	at org.jboss.as.cli.impl.CommandContextImpl$2.execute(CommandContextImpl.java:410)




	at org.jboss.aesh.console.AeshProcess.run(AeshProcess.java:53)




	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)




	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)




	at java.lang.Thread.run(Thread.java:745)









10:12:40,227 INFO  [org.jboss.as] (MSC service thread 2-8) WFLYSRV0049: WildFly Core 2.0.0.CR7-SNAPSHOT (WildFly Core 2.0.0.CR7-SNAPSHOT) starting




10:12:40,678 INFO  [org.jboss.as] (Controller Boot Thread) WFLYSRV0025: WildFly Core 2.0.0.CR7-SNAPSHOT (WildFly Core 2.0.0.CR7-SNAPSHOT) started in 465ms - Started 35 of 42 services (13 services are lazy, passive or on-demand)




[standalone@embedded /]






Embed server functionality doesn&amp;apos;t seem to be affected by the exception - is operable.